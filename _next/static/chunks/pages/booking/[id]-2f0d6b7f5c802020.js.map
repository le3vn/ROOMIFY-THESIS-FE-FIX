{"version":3,"file":"static/chunks/pages/booking/[id]-2f0d6b7f5c802020.js","mappings":"8IACe,SAAAA,GAAA,CACf,KAAAC,EAAA,CAA0BC,EAAAC,UAAgB,CAAAC,GAAAA,EAAA,KAC1C,OAAAH,CACA,wBCHA,CAAAI,OAAAC,QAAA,CAAAD,OAAAC,QAAA,MAAAC,IAAA,EACA,gBACA,WACA,OAAeC,EAAQ,KACvB,EACA,2OCEA,IAAMC,EAAsD,GAItD,IAJuD,CAC3DC,QAAAA,CAAAA,CACAC,UAAAA,CAAAA,CACAC,SAAAA,CAAAA,CACD,CAAAC,EACC,MACE,GAAAC,EAAAC,IAAA,EAACC,MAAAA,CAAIC,UAAW,yFAAiHC,MAAA,CAAxBR,EAAU,GAAK,QAAQ,YAC9H,GAAAI,EAAAK,GAAA,EAACH,MAAAA,CAAIC,UAAU,gFACb,GAAAH,EAAAK,GAAA,EAACC,MAAAA,CAAIC,IAAI,kCAAkCC,IAAI,GAAGL,UAAU,6BAE9D,GAAAH,EAAAK,GAAA,EAACH,MAAAA,CAAIC,UAAU,+CACb,GAAAH,EAAAC,IAAA,EAACC,MAAAA,CAAIC,UAAU,mBACb,GAAAH,EAAAK,GAAA,EAACH,MAAAA,CAAIC,UAAU,2CACb,GAAAH,EAAAC,IAAA,EAACC,MAAAA,CAAIC,UAAU,uCACb,GAAAH,EAAAK,GAAA,EAACI,KAAAA,CAAGN,UAAU,8BAAqB,qBACnC,GAAAH,EAAAK,GAAA,EAACK,KAAAA,CAAGP,UAAU,uBAAc,+DAGhC,GAAAH,EAAAK,GAAA,EAACH,MAAAA,CAAIC,UAAU,kDACb,GAAAH,EAAAC,IAAA,EAACC,MAAAA,CAAIC,UAAU,uBACb,GAAAH,EAAAK,GAAA,EAACM,SAAAA,CAAOR,UAAU,iFAAiFS,QAASf,WAAW,WACvH,GAAAG,EAAAK,GAAA,EAACM,SAAAA,CAAOR,UAAU,+EAA+ES,QAASd,WAAU,uBAOlI,gBC3BA,IAAMe,EAAiD,GAKjD,IALkD,CACtDjB,QAAAA,CAAAA,CACAC,UAAAA,CAAAA,CACAiB,UAAAA,CAAAA,CACAhB,SAAAA,CAAAA,CACD,CAAAC,EACC,MACE,GAAAC,EAAAC,IAAA,EAACC,MAAAA,CAAIC,UAAW,yFAAiHC,MAAA,CAAxBR,EAAU,GAAK,QAAQ,YAC9H,GAAAI,EAAAK,GAAA,EAACH,MAAAA,CAAIC,UAAU,gFACb,GAAAH,EAAAK,GAAA,EAACC,MAAAA,CAAIC,IAAKO,EAAY,6BAA+B,+BAA+B,CAAEN,IAAI,GAAGL,UAAU,6BAEzG,GAAAH,EAAAK,GAAA,EAACH,MAAAA,CAAIC,UAAU,+CACb,GAAAH,EAAAC,IAAA,EAACC,MAAAA,CAAIC,UAAU,mBACb,GAAAH,EAAAK,GAAA,EAACH,MAAAA,CAAIC,UAAU,2CACdW,EACC,GAAAd,EAAAC,IAAA,EAACC,MAAAA,CAAIC,UAAU,4CACb,GAAAH,EAAAK,GAAA,EAACI,KAAAA,CAAGN,UAAU,8BAAqB,qBACnC,GAAAH,EAAAK,GAAA,EAACK,KAAAA,CAAGP,UAAU,uBAAc,6FAG9B,GAAAH,EAAAC,IAAA,EAACC,MAAAA,CAAIC,UAAU,uCACb,GAAAH,EAAAK,GAAA,EAACI,KAAAA,CAAGN,UAAU,8BAAqB,aACnC,GAAAH,EAAAK,GAAA,EAACK,KAAAA,CAAGP,UAAU,uBAAc,gDACxB,GAGR,GAAAH,EAAAK,GAAA,EAACH,MAAAA,CAAIC,UAAU,kDACb,GAAAH,EAAAK,GAAA,EAACH,MAAAA,CAAIC,UAAU,sBACb,GAAAH,EAAAK,GAAA,EAACM,SAAAA,CAAOR,UAAU,iFAAiFS,QAASE,EAAYjB,EAAYC,CAAQ,UAAGgB,EAAY,eAAiB,SAAS,cAOnM,EC1BMC,EAAc,CAClBC,MAAO,CACL,yBAA4B,SAC9B,CACF,EAyCMC,EAAoB,IAAM,KAcqFC,EA0KtGA,EAA6CA,EAK1CA,EAKAA,EAYHA,EACDA,EACAA,EAKIA,EAmBHA,EAMAA,EAMAA,EA0EFA,EA3IUA,EAQ8EC,EAKJA,EAKAA,EApM/F,IAAMC,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,IACT,CAAEC,GAAAA,CAAAA,CAAIC,KAAAA,CAAAA,CAAM,CAAGH,EAAOI,KAAK,CAC3B,CAACC,EAAaC,EAAe,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IACzC,CAACC,EAAmBC,EAAsB,CAAGF,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IACtD,CAACb,EAAWgB,EAAa,CAAGH,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IACrC,CAACI,EAAiBC,EAAmB,CAAGL,CAAAA,EAAAA,EAAAA,QAAAA,EAA6BM,KAAAA,GACrE,CAACC,EAAwBC,EAA0B,CAAGR,CAAAA,EAAAA,EAAAA,QAAAA,EAA6BM,KAAAA,GAEnFG,EAAaC,CAAAA,EAAAA,EAAAA,CAAAA,IACb,CAAEC,KAAMC,CAAAA,CAAS,CAAGC,CAAAA,EAAAA,EAAAA,UAAAA,IACpBtB,EAAOqB,MAAAA,EAAAA,KAAAA,EAAAA,EAASrB,IAAI,CACpB,CAACuB,EAAUC,EAAY,CAAGf,CAAAA,EAAAA,EAAAA,QAAAA,EAAuB,EAAE,EACnDgB,EAASzB,MAAAA,EAAAA,KAAAA,EAAAA,EAAMI,EAAE,CACjB,CAACgB,KAAMM,EAAAA,CAAiB,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,EAAqB,GAA0CF,MAAAA,CAAvCG,EAAAA,CAAAA,CAAAA,cAA4B,CAAC,YAA6B5B,MAAAA,CAAnByB,EAAO,cAA4BvC,MAAA,CAAhBc,MAAAA,EAAAA,KAAAA,EAAAA,IAAU,GAAVA,CAAAA,EAAAA,EAAM6B,IAAI,GAAV7B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,CAAY,CAAC,EAAE,EAAIkB,GAEhI,CAAEY,sBAAAA,EAAAA,CAAuB,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,IAG5B,CAAEX,KAAMY,EAAAA,CAAcC,MAAAA,EAAAA,CAAO,CAAGN,CAAAA,EAAAA,EAAAA,EAAAA,EACpC,GAA+CvB,MAAAA,CAA5CwB,EAAAA,CAAAA,CAAAA,mBAAiC,CAAC,YAAqBvB,MAAAA,CAAXD,EAAG,UAAalB,MAAA,CAALmB,GAC1Da,GAGI,CAAEE,KAAMc,EAAAA,CAAY,CAAGP,CAAAA,EAAAA,EAAAA,EAAAA,EAC3B,GAAiCzC,MAAA,CAA9B0C,EAAAA,CAAAA,CAAAA,eAA6B,EAChCV,GAGI,CAAEE,KAAMnB,EAAAA,CAAY,CAAG0B,CAAAA,EAAAA,EAAAA,EAAAA,EAC3B,GAA0CF,MAAAA,CAAvCG,EAAAA,CAAAA,CAAAA,cAA4B,CAAC,YAAiB1C,MAAA,CAAPuC,GAC1CP,GAGI,CAAEE,KAAMe,EAAAA,CAAU,CAAGR,CAAAA,EAAAA,EAAAA,EAAAA,EACzB,GAAkDF,MAAAA,CAA/CG,EAAAA,CAAAA,CAAAA,kBAAgC,CAAC,gBAAqB1C,MAAA,CAAPuC,GAClDP,GAGIkB,GAAWJ,CAAAA,MAAAA,GAAAA,KAAAA,EAAAA,GAAcK,iBAAiB,GAAI,EAAE,CAChDC,GAAYJ,IAAc,EAAE,CAElC,GAAID,GACF,MAAO,GAAAnD,EAAAK,GAAA,EAACoD,IAAAA,UAAE,qCACX,CAED,GAAI,CAACP,GACH,MAAO,GAAAlD,EAAAK,GAAA,EAACoD,IAAAA,UAAE,cACX,CAGD,IAAMC,GAAmB,IAAM,CAC7BtC,EAAOuC,IAAI,EACb,EAGMC,GAAmB,GAAsC,CAC7DlB,EAAYmB,EAAKpB,QAAQ,EAAI,EAAE,CACjC,EAGMqB,GAAe,SAAY,KAiBLC,EACDA,EAGrB7C,EAYAA,EAmBAA,EAA6CA,EAlBjBuB,EAmBJsB,EAnD5B,IAAMC,EAAW,IAAIC,SACfC,EAA6B,EAAE,CAC/BC,EAA8B,EAAE,CAGtCJ,SAASK,gBAAgB,CAAC,oCAAoCC,OAAO,CAAC,GAAgB,CACpFH,EAAiBzE,IAAI,CAAC6E,EAAMC,KAAK,CACnC,GAGAR,SAASK,gBAAgB,CAAC,sCAAsCC,OAAO,CAAC,GAAgB,CACtFF,EAAkB1E,IAAI,CAAC6E,EAAMC,KAAK,CACpC,GAGA,IAAIC,EAAqB,KAAwB,GAAvBT,CAAAA,EAAAA,SAASU,aAAa,CAAC,6BAAvBV,KAAAA,IAAAA,EAAD,OAACA,EAAwEQ,KAAK,GAAI,GACrGG,EAAkB,KAAwB,GAAvBX,CAAAA,EAAAA,SAASU,aAAa,CAAC,mCAAvBV,KAAAA,IAAAA,EAAD,OAACA,EAA8EQ,KAAK,GAAI,GAkChH,GA/BIrD,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,IAAU,GAAVA,CAAAA,EAAAA,EAAM6B,IAAI,GAAV7B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,CAAY,CAAC,EAAE,IAAK,YACtBsD,CAAAA,EAAqB,GAAwBtC,MAAAA,CAArBH,EAAgB,OAA4B3B,MAAA,CAAvB8B,EAAAA,EAM/C8B,EAASW,MAAM,CAAC,qBAAsBH,GACtCR,EAASW,MAAM,CAAC,kBAAmBD,GACnCV,EAASW,MAAM,CAAC,SAAUhC,GAC1BqB,EAASW,MAAM,CAAC,cAAepD,GAC/ByC,EAASW,MAAM,CAAC,SAAUrD,GACtBJ,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,IAAU,GAAVA,CAAAA,EAAAA,EAAM6B,IAAI,GAAV7B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,CAAY,CAAC,EAAE,IAAK,uBAAyBuB,EAASmC,MAAM,CAAG,EAC/DZ,EAASW,MAAM,CAAC,WAAYlC,IAAW,GAAXA,CAAAA,EAAAA,CAAQ,CAAC,EAAE,GAAXA,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAaoC,aAAa,EAGtDb,EAASW,MAAM,CAAC,WAAY,IAEhCX,EAASW,MAAM,CAAC,WAAYzD,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAM4D,IAAI,GAAI,IAG1CZ,EAAiBG,OAAO,CAAC,GAAe,CACtCL,EAASW,MAAM,CAAC,oBAAqBI,EACvC,GAEAZ,EAAkBE,OAAO,CAAC,GAAiB,CACzCL,EAASW,MAAM,CAAC,sBAAuBK,EACzC,GAII9D,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,IAAU,GAAVA,CAAAA,EAAAA,EAAM6B,IAAI,GAAV7B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,CAAY,CAAC,EAAE,IAAK,uBAAyBA,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,IAAU,GAAVA,CAAAA,EAAAA,EAAM6B,IAAI,GAAV7B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,CAAY,CAAC,EAAE,IAAK,QAAS,CAC5E,IAAM0B,EAAmB,KAAwB,GAAvBmB,CAAAA,EAAAA,SAASU,aAAa,CAAC,oCAAvBV,KAAAA,IAAAA,EAAD,OAACA,EAA+EQ,KAAK,GAAI,GAClHP,EAASW,MAAM,CAAC,mBAAoB/B,EACtC,CAAC,GAGG,CACF,IAAMqC,EAAW,MAAMjC,GAAsBF,EAAAA,CAAAA,CAAAA,aAA2B,CAAEkB,EACtEiB,CAAAA,EAAS3C,IAAI,CAEhBR,EAAa,IAGZA,EAAa,GAEjB,CAAE,MAAOqB,EAAO,CACdrB,EAAa,GACf,CACF,EAGMoD,GAAoB,IAAM,CAC9BxD,EAAe,GACjB,EAGMyD,GAAqB,IAAM,CAC/BrB,KACApC,EAAe,IACfG,EAAsB,GACxB,EAEMuD,GAA4B,IAAM,CACtCvD,EAAsB,IACtBT,EAAO3B,IAAI,CAAC,WACd,EAEM4F,GAA0B,IAAM,CACpCxD,EAAsB,GACxB,EAEA,MACE,GAAA7B,EAAAK,GAAA,EAACiF,EAAAA,EAAcA,CAAAA,CAACC,MAAOxE,WACrB,GAAAf,EAAAC,IAAA,EAACC,MAAAA,CAAIC,UAAU,iBACb,GAAAH,EAAAK,GAAA,EAACM,SAAAA,CACCR,UAAU,mEACVS,QAAS8C,YAET,GAAA1D,EAAAK,GAAA,EAACmF,EAAAA,CAAeA,CAAAA,CAACC,KAAMC,EAAAA,GAAaA,CAAEvF,UAAU,aAElD,GAAAH,EAAAC,IAAA,EAACC,MAAAA,CAAIC,UAAU,2CACb,GAAAH,EAAAK,GAAA,EAACC,MAAAA,CACCC,IAAI,mCACJC,IAAI,GACJmF,MAAO,IACPC,OAAQ,IACRzF,UAAU,SAEZ,GAAAH,EAAAC,IAAA,EAACC,MAAAA,WAEC,GAAAF,EAAAC,IAAA,EAACC,MAAAA,WACC,GAAAF,EAAAK,GAAA,EAACoD,IAAAA,CAAEtD,UAAU,iDAAwC,cACrD,GAAAH,EAAAK,GAAA,EAACwF,EAAAA,CAAKA,CAAAA,CACJC,KAAK,OACL3F,UAAU,6BACV4F,SAAU,GACVxB,MAAOrD,IAAU,GAAVA,CAAAA,EAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAM4D,IAAI,GAAV5D,KAAAA,IAAAA,EAAAA,EAAc,EAAE,MAI3B,GAAAlB,EAAAK,GAAA,EAACH,MAAAA,CAAIC,UAAU,6BACZe,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,IAAU,GAAVA,CAAAA,EAAAA,EAAM6B,IAAI,GAAV7B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,CAAY,CAAC,EAAE,IAAK,uBAAyBA,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,IAAU,GAAVA,CAAAA,EAAAA,EAAM6B,IAAI,GAAV7B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,CAAY,CAAC,EAAE,IAAK,UAChE,GAAAlB,EAAAC,IAAA,EAACC,MAAAA,WACG,GAAAF,EAAAK,GAAA,EAACoD,IAAAA,CAAEtD,UAAU,iDAAwC,eACrD,GAAAH,EAAAK,GAAA,EAACwF,EAAAA,CAAKA,CAAAA,CAACC,KAAK,OAAO3F,UAAU,6BAA6B4F,SAAU,GAAMxB,MAAOpD,IAAsB,GAAtBA,CAAAA,EAAAA,MAAAA,GAAAA,KAAAA,EAAAA,GAAY6E,UAAU,GAAtB7E,KAAAA,IAAAA,EAAAA,EAA0B,EAAE,CAAE2D,KAAK,uBAEtH5D,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,IAAU,GAAVA,CAAAA,EAAAA,EAAM6B,IAAI,GAAV7B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,CAAY,CAAC,EAAE,IAAK,WACtB,GAAAlB,EAAAC,IAAA,EAACC,MAAAA,WACD,GAAAF,EAAAK,GAAA,EAACoD,IAAAA,CAAEtD,UAAU,iDAAwC,gBACrD,GAAAH,EAAAK,GAAA,EAACwF,EAAAA,CAAKA,CAAAA,CAACC,KAAK,OAAO3F,UAAU,6BAA6B4F,SAAU,GAAMxB,MAAOpD,IAAuB,GAAvBA,CAAAA,EAAAA,MAAAA,GAAAA,KAAAA,EAAAA,GAAY8E,WAAW,GAAvB9E,KAAAA,IAAAA,EAAAA,EAA2B,EAAE,CAAE2D,KAAK,uBAEnH5D,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,IAAU,GAAVA,CAAAA,EAAAA,EAAM6B,IAAI,GAAV7B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,CAAY,CAAC,EAAE,IAAK,QACtB,GAAAlB,EAAAC,IAAA,EAACC,MAAAA,WACD,GAAAF,EAAAK,GAAA,EAACoD,IAAAA,CAAEtD,UAAU,iDAAwC,aACrD,GAAAH,EAAAK,GAAA,EAACwF,EAAAA,CAAKA,CAAAA,CAACC,KAAK,OAAO3F,UAAU,6BAA6B4F,SAAU,GAAMxB,MAAOpD,IAAoB,GAApBA,CAAAA,EAAAA,MAAAA,GAAAA,KAAAA,EAAAA,GAAY+E,QAAQ,GAApB/E,KAAAA,IAAAA,EAAAA,EAAwB,EAAE,CAAE2D,KAAK,uBAIlH,GAAA9E,EAAAK,GAAA,EAACoD,IAAAA,CAAEtD,UAAU,iDAAwC,gBACtD,GAGH,GAAAH,EAAAK,GAAA,EAACH,MAAAA,UACEgB,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,IAAU,GAAVA,CAAAA,EAAAA,EAAM6B,IAAI,GAAV7B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,CAAY,CAAC,EAAE,IAAK,WACrBA,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,IAAU,GAAVA,CAAAA,EAAAA,EAAM6B,IAAI,GAAV7B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,CAAY,CAAC,EAAE,IAAK,uBACpBA,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,IAAU,GAAVA,CAAAA,EAAAA,EAAM6B,IAAI,GAAV7B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,CAAY,CAAC,EAAE,IAAK,QAClB,GAAAlB,EAAAC,IAAA,EAAAD,EAAAmG,QAAA,YACE,GAAAnG,EAAAK,GAAA,EAACoD,IAAAA,CAAEtD,UAAU,iDAAwC,eACrD,GAAAH,EAAAK,GAAA,EAACwF,EAAAA,CAAKA,CAAAA,CAACC,KAAK,OAAO3F,UAAU,6BAA6B2E,KAAK,iBAE/D5D,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,IAAU,GAAVA,CAAAA,EAAAA,EAAM6B,IAAI,GAAV7B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,CAAY,CAAC,EAAE,IAAK,WACtB,GAAAlB,EAAAC,IAAA,EAAAD,EAAAmG,QAAA,YACE,GAAAnG,EAAAK,GAAA,EAACoD,IAAAA,CAAEtD,UAAU,iDAAwC,YACrD,GAAAH,EAAAK,GAAA,EAAC+F,EAAAA,CAAMA,CAAAA,CACLjG,UAAU,6BACVkG,YAAY,mBACZ9B,MAAOxC,EACPuE,SAAU,GAAWtE,EAAmBuC,GACxCgC,QAASlD,MAAAA,GAAAA,KAAAA,EAAAA,GAAUmD,GAAG,CAAC,GAAc,EACjCC,MAAOC,EAAQC,WAAW,CAC1BpC,MAAOmC,EAAQC,WAAW,CAC9B,QAIJ,GAAA3G,EAAAK,GAAA,EAACoD,IAAAA,CAAEtD,UAAU,gBAAO,gBACrB,GAEH,GAAAH,EAAAC,IAAA,EAACC,MAAAA,WACEgB,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,IAAU,GAAVA,CAAAA,EAAAA,EAAM6B,IAAI,GAAV7B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,CAAY,CAAC,EAAE,IAAK,uBACnB,GAAAlB,EAAAC,IAAA,EAAAD,EAAAmG,QAAA,YACE,GAAAnG,EAAAK,GAAA,EAACoD,IAAAA,CAAEtD,UAAU,iDAAwC,8BACrD,GAAAH,EAAAK,GAAA,EAACwF,EAAAA,CAAKA,CAAAA,CAACC,KAAK,OAAO3F,UAAU,6BAA6B4F,SAAU,GAAMxB,MAAO3B,MAAAA,GAAAA,KAAAA,EAAAA,GAAkBkC,IAAI,CAAEA,KAAK,wBAGjH5D,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,IAAU,GAAVA,CAAAA,EAAAA,EAAM6B,IAAI,GAAV7B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,CAAY,CAAC,EAAE,IAAK,SACnB,GAAAlB,EAAAC,IAAA,EAAAD,EAAAmG,QAAA,YACE,GAAAnG,EAAAK,GAAA,EAACoD,IAAAA,CAAEtD,UAAU,iDAAwC,uBACrD,GAAAH,EAAAK,GAAA,EAACwF,EAAAA,CAAKA,CAAAA,CAACC,KAAK,OAAO3F,UAAU,6BAA6B4F,SAAU,GAAMxB,MAAO3B,MAAAA,GAAAA,KAAAA,EAAAA,GAAkBkC,IAAI,CAAEA,KAAK,wBAGjH5D,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,IAAU,GAAVA,CAAAA,EAAAA,EAAM6B,IAAI,GAAV7B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,CAAY,CAAC,EAAE,IAAK,YACnB,GAAAlB,EAAAC,IAAA,EAAAD,EAAAmG,QAAA,YACE,GAAAnG,EAAAK,GAAA,EAACoD,IAAAA,CAAEtD,UAAU,iDAAwC,oBACrD,GAAAH,EAAAK,GAAA,EAAC+F,EAAAA,CAAMA,CAAAA,CACLjG,UAAU,6BACVoE,MAAOrC,EACPoE,SAAU,GAAWnE,EAA0BoC,GAC/CgC,QAAS,CACL,CAAEhC,MAAO,oBAAqBkC,MAAO,mBAAoB,EACzD,CAAElC,MAAO,YAAakC,MAAO,WAAY,EACzC,CAAElC,MAAO,cAAekC,MAAO,aAAc,EAChD,SAMT,GAAAzG,EAAAC,IAAA,EAACC,MAAAA,WACC,GAAAF,EAAAK,GAAA,EAACoD,IAAAA,CAAEtD,UAAU,iDAAwC,mBACrD,GAAAH,EAAAK,GAAA,EAACH,MAAAA,CAAIC,UAAU,iCACZmD,GAASsB,MAAM,CAAG,EACjBtB,GAASkD,GAAG,CAAC,GACX,GAAAxG,EAAAC,IAAA,EAACC,MAAAA,CAAqCC,UAAU,8BAC9C,GAAAH,EAAAK,GAAA,EAACiE,QAAAA,CACCwB,KAAK,WACLxE,GAAI,WAAsClB,MAAA,CAA3BwG,EAAiB7B,SAAS,EACzCD,KAAK,aACLP,MAAOqC,EAAiB7B,SAAS,CACjC5E,UAAU,qBAEZ,GAAAH,EAAAK,GAAA,EAACoG,QAAAA,CACCI,QAAS,WAAsCzG,MAAA,CAA3BwG,EAAiB7B,SAAS,EAC9C5E,UAAU,0CAETyG,EAAiBE,WAAW,KAZvBF,EAAiB7B,SAAS,GAiBtC,GAAA/E,EAAAK,GAAA,EAACoD,IAAAA,UAAE,yBACJ,MAKL,GAAAzD,EAAAC,IAAA,EAACC,MAAAA,WACC,GAAAF,EAAAK,GAAA,EAACoD,IAAAA,CAAEtD,UAAU,iDAAwC,sBACrD,GAAAH,EAAAK,GAAA,EAACH,MAAAA,CAAIC,UAAU,iCACZqD,GAAUoB,MAAM,CAAG,EAClBpB,GAAUgD,GAAG,CAAC,GACZ,GAAAxG,EAAAC,IAAA,EAACC,MAAAA,CAAgCC,UAAU,8BACzC,GAAAH,EAAAK,GAAA,EAACiE,QAAAA,CACCwB,KAAK,WACLxE,GAAI,aAAmClB,MAAA,CAAtBoD,EAAUwB,WAAW,EACtCF,KAAK,eACLP,MAAOf,EAAUwB,WAAW,CAC5B7E,UAAU,qBAEZ,GAAAH,EAAAK,GAAA,EAACoG,QAAAA,CACCI,QAAS,aAAmCzG,MAAA,CAAtBoD,EAAUwB,WAAW,EAC3C7E,UAAU,0CAETqD,EAAUuD,aAAa,KAZlBvD,EAAUwB,WAAW,GAiBjC,GAAAhF,EAAAK,GAAA,EAACoD,IAAAA,UAAE,0BACJ,MAKL,GAAAzD,EAAAK,GAAA,EAACH,MAAAA,UACAgB,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,IAAU,GAAVA,CAAAA,EAAAA,EAAM6B,IAAI,GAAV7B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,CAAY,CAAC,EAAE,IAAK,uBACjB,GAAAlB,EAAAC,IAAA,EAAAD,EAAAmG,QAAA,YACF,GAAAnG,EAAAK,GAAA,EAACoD,IAAAA,CAAEtD,UAAU,iDAAwC,yBACrD,GAAAH,EAAAK,GAAA,EAAC2G,EAAAA,CAAMA,CAAAA,CACLvE,SAAUA,MAAAA,EAAAA,EAAY,EAAE,CACxB6D,SAAU1C,GACVqD,eAAgB,GAChB9G,UAAU,aACV+G,SAAU,WAEV,GAAAlH,EAAAC,IAAA,EAACkH,EAAAA,EAAMA,CAAAA,CAAChH,UAAU,uDAChB,GAAAH,EAAAK,GAAA,EAACmF,EAAAA,CAAeA,CAAAA,CAACC,KAAM2B,EAAAA,GAAQA,CAAEjH,UAAU,SAAS,4BAO1D,GAAAH,EAAAK,GAAA,EAACH,MAAAA,CAAIC,UAAU,oCACb,GAAAH,EAAAK,GAAA,EAACM,SAAAA,CACCR,UAAU,qEACVS,QAAS,IAAMc,EAAe,aAC/B,qBAIH,GAAA1B,EAAAK,GAAA,EFjXGV,EEiXeA,CAChBC,QAAS6B,EACT5B,UAAWsF,GACXrF,SAAUoF,KAEZ,GAAAlF,EAAAK,GAAA,ED9WGQ,EC8WUA,CACXjB,QAASgC,EACT/B,UAAWuF,GACXtE,UAAWA,EACXhB,SAAUuF,eAQxB,CAEApE,CAAAA,EAAYoG,MAAM,CAAGC,EAAAA,CAAiBA,CACtC,IAAAC,EAAetG","sources":["webpack://_N_E/./node_modules/antd/es/_util/hooks/useForceUpdate.js","webpack://_N_E/?d5b9","webpack://_N_E/./components/Modals/BookingsModals/BookingConfirmtionModal.tsx","webpack://_N_E/./components/Modals/BookingsModals/SuccessModal.tsx","webpack://_N_E/./pages/booking/[id].tsx","webpack://_N_E/<anon>"],"sourcesContent":["import * as React from 'react';\nexport default function useForceUpdate() {\n  const [, forceUpdate] = React.useReducer(x => x + 1, 0);\n  return forceUpdate;\n}","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/booking/[id]\",\n      function () {\n        return require(\"private-next-pages/booking/[id].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/booking/[id]\"])\n      });\n    }\n  ","import React from 'react';\n\ninterface ConfirmationModalProps {\n  visible: boolean;\n  onConfirm: () => void;\n  onCancel: () => void;\n}\n\nconst ConfirmationModal: React.FC<ConfirmationModalProps> = ({\n  visible,\n  onConfirm,\n  onCancel,\n}) => {\n  return (\n    <div className={`fixed inset-0 flex flex-col justify-center items-center bg-black bg-opacity-50 z-auto ${visible ? '' : 'hidden'}`}>\n      <div className='bg-purple-950 p-4 absolute top-32 rounded-full border-white border-4'>\n        <img src=\"/Assets/images/are-you-sure.png\" alt=\"\" className='w-[200px] rounded-full'/>\n      </div>\n      <div className=\"bg-white p-4 rounded-lg w-2/5 h-2/5\">\n        <div className='h-full'>\n          <div className='h-2/3 flex flex-col justify-end'>\n            <div className='flex flex-col items-center'>\n              <h1 className='text-2xl font-bold'>Submit Booking ?</h1>\n              <h4 className='text-center'>Make sure to input the right data and requirements :)</h4>\n            </div>\n          </div>\n          <div className='h-1/3 flex items-center justify-center'>\n            <div className='flex gap-4'>\n              <button className='bg-purple-950 h-[50px] w-[150px] rounded-full text-white text-lg font-semibold' onClick={onConfirm}>Submit</button>\n              <button className='bg-gray-200 h-[50px] w-[150px] rounded-full text-black text-lg font-semibold' onClick={onCancel}>Cancel</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfirmationModal;","import React from 'react';\n\ninterface ConfirmationModalProps {\n  visible: boolean;\n  onConfirm: () => void;\n  isSuccess: boolean;\n  onCancel: () => void;\n}\n\nconst SuccessModal: React.FC<ConfirmationModalProps> = ({\n  visible,\n  onConfirm,\n  isSuccess,\n  onCancel\n}) => {\n  return (\n    <div className={`fixed inset-0 flex flex-col justify-center items-center bg-black bg-opacity-50 z-auto ${visible ? '' : 'hidden'}`}>\n      <div className='bg-purple-950 p-4 absolute top-32 rounded-full border-white border-4'>\n        <img src={isSuccess ? \"/Assets/images/succeed.png\" : \"/Assets/images/person-sad.png\"} alt=\"\" className='w-[200px] rounded-full'/>\n      </div>\n      <div className=\"bg-white p-4 rounded-lg w-2/5 h-2/5\">\n        <div className='h-full'>\n          <div className='h-2/3 flex flex-col justify-end'>\n          {isSuccess ? \n            <div className='flex flex-col items-center px-8'>\n              <h1 className='text-2xl font-bold'>You&apos;re All Set !</h1>\n              <h4 className='text-center'>Your booking has been submitted. Check your ongoing page for your booking approvals !</h4>\n            </div>\n            : \n            <div className='flex flex-col items-center'>\n              <h1 className='text-2xl font-bold'>Oh no...</h1>\n              <h4 className='text-center'>Something just happened. Try again later.</h4>\n            </div>\n            }\n          </div>\n          <div className='h-1/3 flex items-center justify-center'>\n            <div className='flex gap-4'>\n              <button className='bg-purple-950 h-[50px] w-[150px] rounded-full text-white text-lg font-semibold' onClick={isSuccess ? onConfirm : onCancel}>{isSuccess ? \"Okay, Great!\" : \"Okay :(\"}</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SuccessModal;","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { useSwrFetcherWithAccessToken } from '@/functions/useSwrFetcherWithAccessToken';\nimport { WithDefaultLayout } from '../../components/DefautLayout';\nimport { Page } from '@/types/Page';\nimport { BackendApiUrl } from '@/functions/BackendApiUrl';\nimport useSWR from 'swr';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faUpload } from '@fortawesome/free-solid-svg-icons';\nimport { Input, Upload, Button, Select, ConfigProvider } from 'antd';\nimport { useSession } from 'next-auth/react';\nimport { User } from 'next-auth';\nimport { UploadFile } from 'antd/es/upload/interface'; // Type for the uploaded file\nimport ConfirmationModal from '@/components/Modals/BookingsModals/BookingConfirmtionModal';\nimport { useFetchWithAccessToken } from '@/functions/useFetchWithAccessToken'; // Custom hook for fetching data\nimport SuccessModal from '@/components/Modals/BookingsModals/SuccessModal';\n\nconst customTheme = {\n  token: {\n    'colorBgContainerDisabled': '#ffffff', \n  },\n};\n\n\nexport interface RoomDetail {\n  roomId: number;\n  name: string;\n  description: string;\n  minioUrl: string;\n  capacity: number;\n  roomType: string;\n}\n\nexport interface AvailableSession {\n  sessionId: number;\n  sessionName: string;\n}\n\ninterface AvailableSessions {\n  availableSessions: AvailableSession[];\n}\n\nexport interface Equipment {\n  equipmentId: number;\n  equipmentName: string;\n}\n\ninterface Subject {\n  subjectId: number;\n  subjectName: string;\n}\n\ninterface IntituteId {\n  lecturersId: string \n  staffsId: string \n  studentsId: string\n}\n\ninterface Organization{\n    name: string;\n}\n\nconst BookingPage: Page = () => {\n  const router = useRouter();\n  const { id, date } = router.query;\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isSuccesModalOpen, setIsSuccessModalOpen] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [selectedSubject, setSelectedSubject] = useState<string | undefined>(undefined);\n  const [selectedBookingPurpose, setSelectedBookingPurpose] = useState<string | undefined>(undefined);\n\n  const swrFetcher = useSwrFetcherWithAccessToken();\n  const { data: session } = useSession();\n  const user = session?.user as User;\n  const [fileList, setFileList] = useState<UploadFile[]>([]);\n  const userId = user?.id;\n  const {data: organizationName} = useSWR<Organization>(`${BackendApiUrl.getDisplayName}?UserId=${userId}&RoleName=${user?.role?.[0]}`, swrFetcher)\n\n  const { fetchPOSTWithFormData } = useFetchWithAccessToken();\n\n  // Fetching data using SWR\n  const { data: sessionsData, error } = useSWR<AvailableSessions>(\n    `${BackendApiUrl.getAvailableSession}?RoomId=${id}&Date=${date}`,\n    swrFetcher\n  );\n\n  const { data: equipments } = useSWR<Equipment[]>(\n    `${BackendApiUrl.getAllEquipment}`,\n    swrFetcher\n  );\n\n  const { data: institutes } = useSWR<IntituteId>(\n    `${BackendApiUrl.getInstituteId}?UserId=${userId}`,\n    swrFetcher\n  );\n\n  const { data: subjects } = useSWR<Subject[]>(\n    `${BackendApiUrl.getLecturerSubject}?LecturerId=${userId}`,\n    swrFetcher\n  );\n\n  const sessions = sessionsData?.availableSessions || [];\n  const equipment = equipments || [];\n\n  if (error) {\n    return <p>Error loading available sessions.</p>;\n  }\n\n  if (!sessionsData) {\n    return <p>Loading...</p>;\n  }\n\n  // Handle back button\n  const handleBackButton = () => {\n    router.back();\n  };\n\n  // Handle file change\n  const handleFileChange = (info: { fileList: UploadFile[] }) => {\n    setFileList(info.fileList || []);\n  };\n\n  // Handle form submission\n  const handleSubmit = async () => {\n    // Prepare the FormData\n    const formData = new FormData();\n    const selectedSessions: string[] = [];\n    const selectedEquipment: string[] = [];\n  \n    // Collect selected sessions\n    document.querySelectorAll(\"input[name='sessionIds']:checked\").forEach((input: any) => {\n      selectedSessions.push(input.value);\n    });\n  \n    // Collect selected equipment\n    document.querySelectorAll(\"input[name='equipmentIds']:checked\").forEach((input: any) => {\n      selectedEquipment.push(input.value);\n    });\n  \n    // Handle the booking description\n    let bookingDescription = (document.querySelector('input[name=\"eventName\"]') as HTMLInputElement)?.value || '';\n    const institutionalId = (document.querySelector('input[name=\"institutionalId\"]') as HTMLInputElement)?.value || '';\n\n    // If the user is a Lecturer, overwrite the BookingDescription with subject and booking purpose\n    if (user?.role?.[0] === 'Lecturer') {\n      bookingDescription = `${selectedSubject} - ${selectedBookingPurpose}`;\n    }\n\n  \n  \n    // Append the booking description and other basic form data\n    formData.append('BookingDescription', bookingDescription);\n    formData.append('InstitutionalId', institutionalId);\n    formData.append('UserId', userId as string);\n    formData.append('BookingDate', date as string);\n    formData.append('RoomId', id as string);\n    if (user?.role?.[0] === 'StudentOrganization' && fileList.length > 0) {\n        formData.append('Evidence', fileList[0]?.originFileObj as Blob); // Assuming only one file upload\n      } else {\n        // For non-StudentOrganization roles, append an empty value for Evidence\n        formData.append('Evidence', ''); \n      }\n    formData.append('FullName', user?.name || '');\n  \n    // Append selected sessions and equipment\n    selectedSessions.forEach((sessionId) => {\n      formData.append('SessionBookedList', sessionId);\n    });\n  \n    selectedEquipment.forEach((equipmentId) => {\n      formData.append('EquipmentBookedList', equipmentId);\n    });\n  \n  \n    // Append organization name (if available)\n    if (user?.role?.[0] === 'StudentOrganization' || user?.role?.[0] === 'Staff') {\n      const organizationName = (document.querySelector('input[name=\"organizationName\"]') as HTMLInputElement)?.value || '';\n      formData.append('OrganizationName', organizationName);\n    }\n  \n    // Make the POST request using fetch\n    try {\n      const response = await fetchPOSTWithFormData(BackendApiUrl.createBooking, formData);\n      if (response.data) {\n        // Handle success (show success message or redirect)\n       setIsSuccess(true);\n      } else {\n        // Handle error (e.g., display an error message)\n        setIsSuccess(false);\n      }\n    } catch (error) {\n      setIsSuccess(false);\n    }\n  };\n  \n  // Handle modal cancellation\n  const handleModalCancel = () => {\n    setIsModalOpen(false);\n  };\n\n  // Handle modal confirmation (trigger the submission)\n  const handleModalConfirm = () => {\n    handleSubmit(); // Call the handleSubmit function to post the data\n    setIsModalOpen(false); // Close the modal after confirming\n    setIsSuccessModalOpen(true)\n  };\n\n  const handleSuccessModalConfirm = () => {\n    setIsSuccessModalOpen(false);\n    router.push('/ongoing')\n  }\n\n  const handleSuccessModalCancel= () => {\n    setIsSuccessModalOpen(false);\n  }\n\n  return (\n    <ConfigProvider theme={customTheme}>\n      <div className=\"mt-4\">\n        <button\n          className=\"bg-white rounded-full w-10 h-10 flex items-center justify-center\"\n          onClick={handleBackButton}\n        >\n          <FontAwesomeIcon icon={faChevronLeft} className=\"inline\" />\n        </button>\n        <div className=\"mt-6 overflow-y-auto h-[620px]\">\n          <img\n            src=\"/Assets/images/booking-title.png\"\n            alt=\"\"\n            width={720}\n            height={100}\n            className=\"mb-6\"\n          />\n          <div>\n            {/* User information fields */}\n            <div>\n              <p className=\"mb-2 text-base text-white font-normal\">Full Name</p>\n              <Input\n                type=\"text\"\n                className=\"w-full mb-3 rounded-lg h-8\"\n                disabled={true}\n                value={user?.name ?? ''}\n              />\n            </div>\n            {/* Role-specific inputs */}\n            <div className=\"bg-orange-200-300\">\n              {user?.role?.[0] === 'StudentOrganization' || user?.role?.[0] === 'Student' ? (\n                <div>\n                    <p className=\"mb-2 text-base text-white font-normal\">Student ID</p>\n                    <Input type=\"text\" className=\"w-full mb-3 rounded-lg h-8\" disabled={true} value={institutes?.studentsId ?? ''} name=\"institutionalId\"/>\n                </div>\n              ) : user?.role?.[0] === 'Lecturer' ? (\n                <div>\n                <p className=\"mb-2 text-base text-white font-normal\">Lecturer ID</p>\n                <Input type=\"text\" className=\"w-full mb-3 rounded-lg h-8\" disabled={true} value={institutes?.lecturersId ?? ''} name=\"institutionalId\"/>\n                </div>\n              ) : user?.role?.[0] === 'Staff' ? (\n                <div>\n                <p className=\"mb-2 text-base text-white font-normal\">Staff ID</p>\n                <Input type=\"text\" className=\"w-full mb-3 rounded-lg h-8\" disabled={true} value={institutes?.staffsId ?? ''} name=\"institutionalId\"/>\n\n                </div>\n              ) : (\n                <p className=\"mb-2 text-base text-white font-normal\">Unknown Role</p>\n              )}\n              {/* <Input type=\"text\" className=\"w-full mb-3 rounded-lg h-8\"/> */}\n            </div>\n            <div>\n              {user?.role?.[0] === 'Student' ||\n              user?.role?.[0] === 'StudentOrganization' ||\n              user?.role?.[0] === 'Staff' ? (\n                <>\n                  <p className=\"mb-2 text-base text-white font-normal\">Event Name</p>\n                  <Input type=\"text\" className=\"w-full mb-3 rounded-lg h-8\" name=\"eventName\"/>\n                </>\n              ) : user?.role?.[0] === 'Lecturer' ? (\n                <>\n                  <p className=\"mb-2 text-base text-white font-normal\">Subject</p>\n                  <Select\n                    className=\"w-full mb-3 rounded-lg h-8\"\n                    placeholder=\"Select a Subject\"\n                    value={selectedSubject}  // Manage the selected value through state\n                    onChange={(value) => setSelectedSubject(value)} // Update selectedSubject when changed\n                    options={subjects?.map((subject) => ({\n                        label: subject.subjectName,\n                        value: subject.subjectName,\n                    }))}\n                    />\n                </>\n              ) : (\n                <p className=\"mb-3\">Unknown Role</p>\n              )}\n            </div>\n            <div>\n              {user?.role?.[0] === 'StudentOrganization' && (\n                <>\n                  <p className=\"mb-2 text-base text-white font-normal\">Student Organization Name</p>\n                  <Input type=\"text\" className=\"w-full mb-3 rounded-lg h-8\" disabled={true} value={organizationName?.name} name=\"organizationName\"/>\n                </>\n              )} \n              {user?.role?.[0] === 'Staff' && (\n                <>\n                  <p className=\"mb-2 text-base text-white font-normal\">Office/Center Name</p>\n                  <Input type=\"text\" className=\"w-full mb-3 rounded-lg h-8\" disabled={true} value={organizationName?.name} name=\"organizationName\"/>\n                </>\n              )}\n              {user?.role?.[0] === 'Lecturer' && (\n                <>\n                  <p className=\"mb-2 text-base text-white font-normal\">Booking Purpose</p>\n                  <Select\n                    className=\"w-full mb-3 rounded-lg h-8\"\n                    value={selectedBookingPurpose} // Manage the selected value through state\n                    onChange={(value) => setSelectedBookingPurpose(value)} // Update selectedBookingPurpose when changed\n                    options={[\n                        { value: 'Class Replacement', label: 'Class Replacement' },\n                        { value: 'New Class', label: 'New Class' },\n                        { value: 'Extra Class', label: 'Extra Class' },\n                    ]}\n                    />\n                </>\n              )}\n            </div>\n            {/* Session Selection */}\n            <div>\n              <p className=\"mb-2 text-base text-white font-normal\">Session Booked</p>\n              <div className=\"grid grid-cols-2 mb-3\">\n                {sessions.length > 0 ? (\n                  sessions.map((availableSession) => (\n                    <div key={availableSession.sessionId} className=\"flex items-center\">\n                      <input\n                        type=\"checkbox\"\n                        id={`session-${availableSession.sessionId}`}\n                        name=\"sessionIds\"\n                        value={availableSession.sessionId}\n                        className=\"mr-2 grid-cols-2\"\n                      />\n                      <label\n                        htmlFor={`session-${availableSession.sessionId}`}\n                        className=\"text-white text-base font-thin\"\n                      >\n                        {availableSession.sessionName}\n                      </label>\n                    </div>\n                  ))\n                ) : (\n                  <p>No sessions available</p>\n                )}\n              </div>\n            </div>\n\n            {/* Equipment Selection */}\n            <div>\n              <p className=\"mb-2 text-base text-white font-normal\">Technical Support</p>\n              <div className=\"grid grid-cols-2 mb-3\">\n                {equipment.length > 0 ? (\n                  equipment.map((equipment) => (\n                    <div key={equipment.equipmentId} className=\"flex items-center\">\n                      <input\n                        type=\"checkbox\"\n                        id={`equipment-${equipment.equipmentId}`}\n                        name=\"equipmentIds\"\n                        value={equipment.equipmentId}\n                        className=\"mr-2 grid-cols-2\"\n                      />\n                      <label\n                        htmlFor={`equipment-${equipment.equipmentId}`}\n                        className=\"text-white text-base font-thin\"\n                      >\n                        {equipment.equipmentName}\n                      </label>\n                    </div>\n                  ))\n                ) : (\n                  <p>No equipment available</p>\n                )}\n              </div>\n            </div>\n\n            {/* Evidence Upload */}\n            <div>\n            {user?.role?.[0] === 'StudentOrganization' && (\n                <>\n              <p className=\"mb-2 text-base text-white font-normal\">Evidence of Approval</p>\n              <Upload\n                fileList={fileList ?? []}\n                onChange={handleFileChange}\n                showUploadList={true}\n                className='text-white'\n                maxCount={1}\n              >\n                <Button className=\"bg-white border-black text-black text-base\">\n                  <FontAwesomeIcon icon={faUpload} className=\"mr-2\" />Click to Upload\n                </Button>\n              </Upload>\n              </>\n              )}\n            </div>\n\n            <div className=\"flex justify-center mt-4\">\n              <button\n                className=\"bg-purple-950 px-14 py-2 font-bold text-white rounded-full text-xl\"\n                onClick={() => setIsModalOpen(true)}\n              >\n                Submit Booking\n              </button>\n            </div>\n            <ConfirmationModal\n              visible={isModalOpen}\n              onConfirm={handleModalConfirm}\n              onCancel={handleModalCancel}\n            />\n            <SuccessModal\n              visible={isSuccesModalOpen}\n              onConfirm={handleSuccessModalConfirm}\n              isSuccess={isSuccess}\n              onCancel={handleSuccessModalCancel}\n            />\n          </div>\n        </div>\n      </div>\n    </ConfigProvider>\n    \n  );\n};\n\nBookingPage.layout = WithDefaultLayout;\nexport default BookingPage;\n"],"names":["useForceUpdate","forceUpdate","react__WEBPACK_IMPORTED_MODULE_0__","useReducer","x","window","__NEXT_P","push","__webpack_require__","ConfirmationModal","visible","onConfirm","onCancel","param","jsx_runtime","jsxs","div","className","concat","jsx","img","src","alt","h1","h4","button","onClick","SuccessModal","isSuccess","customTheme","token","BookingPage","user","institutes","router","useRouter","id","date","query","isModalOpen","setIsModalOpen","useState","isSuccesModalOpen","setIsSuccessModalOpen","setIsSuccess","selectedSubject","setSelectedSubject","undefined","selectedBookingPurpose","setSelectedBookingPurpose","swrFetcher","useSwrFetcherWithAccessToken","data","session","useSession","fileList","setFileList","userId","organizationName","useSWR","BackendApiUrl","role","fetchPOSTWithFormData","useFetchWithAccessToken","sessionsData","error","equipments","subjects","sessions","availableSessions","equipment","p","handleBackButton","back","handleFileChange","info","handleSubmit","document","formData","FormData","selectedSessions","selectedEquipment","querySelectorAll","forEach","input","value","bookingDescription","querySelector","institutionalId","append","length","originFileObj","name","sessionId","equipmentId","response","handleModalCancel","handleModalConfirm","handleSuccessModalConfirm","handleSuccessModalCancel","ConfigProvider","theme","FontAwesomeIcon","icon","faChevronLeft","width","height","Input","type","disabled","studentsId","lecturersId","staffsId","Fragment","Select","placeholder","onChange","options","map","label","subject","subjectName","availableSession","htmlFor","sessionName","equipmentName","Upload","showUploadList","maxCount","Button","faUpload","layout","WithDefaultLayout","_id_"],"sourceRoot":""}