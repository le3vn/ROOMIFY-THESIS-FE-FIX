{"version":3,"file":"static/chunks/pages/manage/manageRoom-69551fa8383517c9.js","mappings":"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","sources":["webpack://_N_E/?fc22","webpack://_N_E/./components/Modals/ManageModals/ManageRoomModals/AddRoomConfirm.tsx","webpack://_N_E/./components/Modals/ManageModals/ManageRoomModals/AddRoomSuccess.tsx","webpack://_N_E/./pages/manage/manageRoom/index.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/manage/manageRoom\",\n      function () {\n        return require(\"private-next-pages/manage/manageRoom/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/manage/manageRoom\"])\n      });\n    }\n  ","import React from 'react';\n\ninterface ConfirmationModalProps {\n  visible: boolean;\n  onConfirm: () => void;\n  onCancel: () => void;\n}\n\nconst RoomConfirmationModal: React.FC<ConfirmationModalProps> = ({ visible, onConfirm, onCancel }) => {\n  return (\n    <div className={`fixed inset-0 flex justify-center items-center bg-black bg-opacity-50 z-auto ${visible ? '' : 'hidden'}`}>\n      <div className=\"bg-purple-950 p-4 absolute top-32 rounded-full border-white border-4\">\n        <img src=\"/Assets/images/are-you-sure.png\" alt=\"Are you sure?\" className=\"w-[200px] rounded-full\" />\n      </div>\n      <div className=\"bg-white p-4 rounded-lg w-2/5 h-2/5\">\n        <div className=\"h-full\">\n          <div className=\"h-2/3 flex flex-col justify-end\">\n            <div className=\"flex flex-col items-center\">\n              <h1 className=\"text-2xl font-bold\">Submit Room?</h1>\n              <h4 className=\"text-center\">Make sure to input the right data and requirements :)</h4>\n            </div>\n          </div>\n          <div className=\"h-1/3 flex items-center justify-center\">\n            <div className=\"flex gap-4\">\n              <button\n                className=\"bg-purple-950 h-[50px] w-[150px] rounded-full text-white text-lg font-semibold\"\n                onClick={onConfirm}\n              >\n                Submit\n              </button>\n              <button\n                className=\"bg-gray-200 h-[50px] w-[150px] rounded-full text-black text-lg font-semibold\"\n                onClick={onCancel}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RoomConfirmationModal;\n","import React from 'react';\n\ninterface SuccessModalProps {\n  visible: boolean;\n  onConfirm: () => void;\n  isSuccess: boolean;\n}\n\nconst AddRoomSuccessModal: React.FC<SuccessModalProps> = ({ visible, onConfirm, isSuccess }) => {\n  return (\n    <div className={`fixed inset-0 flex justify-center items-center bg-black bg-opacity-50 z-auto ${visible ? '' : 'hidden'}`}>\n      <div className=\"bg-purple-950 p-4 absolute top-32 rounded-full border-white border-4\">\n        <img\n          src={isSuccess ? \"/Assets/images/succeed.png\" : \"/Assets/images/person-sad.png\"}\n          alt={isSuccess ? \"Success\" : \"Error\"}\n          className=\"w-[200px] rounded-full\"\n        />\n      </div>\n      <div className=\"bg-white p-4 rounded-lg w-2/5 h-2/5\">\n        <div className=\"h-full\">\n          <div className=\"h-2/3 flex flex-col justify-end\">\n            {isSuccess ? (\n              <div className=\"flex flex-col items-center px-8\">\n                <h1 className=\"text-2xl font-bold\">You&apos;re All Set!</h1>\n                <h4 className=\"text-center\">\n                  Your room has been successfully added. Check the management page for more details!\n                </h4>\n              </div>\n            ) : (\n              <div className=\"flex flex-col items-center\">\n                <h1 className=\"text-2xl font-bold\">Oh no...</h1>\n                <h4 className=\"text-center\">Something went wrong. Please try again later.</h4>\n              </div>\n            )}\n          </div>\n          <div className=\"h-1/3 flex items-center justify-center\">\n            <button\n              className=\"bg-purple-950 h-[50px] w-[150px] rounded-full text-white text-lg font-semibold\"\n              onClick={onConfirm}\n            >\n              {isSuccess ? 'Okay, Great!' : 'Okay :('}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddRoomSuccessModal;\n","import React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { Button, Input, Upload, Card, Image, message, Spin, Select } from 'antd';\nimport { faUpload, faTimes, faChevronLeft } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useFetchWithAccessToken } from '@/functions/useFetchWithAccessToken';\nimport { BackendApiUrl } from '@/functions/BackendApiUrl';\nimport { WithDefaultLayout } from '@/components/DefautLayout';\nimport useSWR from 'swr';\nimport { useSwrFetcherWithAccessToken } from '@/functions/useSwrFetcherWithAccessToken';\nimport RoomConfirmationModal from '@/components/Modals/ManageModals/ManageRoomModals/AddRoomConfirm';\nimport AddRoomSuccessModal from '@/components/Modals/ManageModals/ManageRoomModals/AddRoomSuccess';\n\nconst MAX_FILE_SIZE = 5 * 1024 * 1024; // 5MB\nconst ACCEPTED_FILE_TYPES = [\"image/jpeg\", \"image/png\", \"image/gif\"];\n\nexport interface BuildingData {\n  buildingId: number;\n  name: string;\n}\n\nexport interface Buildings {\n  buildingList: BuildingData[];\n}\n\nexport interface UserData{\n  id: string;\n  givenName: string;\n}\n\nexport interface UserList{\n  userList: UserData[];\n  totalData: number;\n}\n\nexport interface Group{\n  id: number;\n  name: string;\n}\n\nexport interface GroupList{\n  roomGroups: Group[];\n  totalData: number;\n}\n\nconst AddRoomPage = () => {\n  const router = useRouter();\n  const { fetchPOSTWithFormData } = useFetchWithAccessToken();\n  const [imageUrl, setImageUrl] = useState<string | null>(null);\n  const [fileName, setFileName] = useState<string>('');\n  const [isSending, setIsSending] = useState(false);\n  const swrFetcher = useSwrFetcherWithAccessToken();\n  const [formData, setFormData] = useState({\n    roomName: '',\n    description: '',\n    roomTypeId: '',\n    buildingId: '',\n    capacity: '',\n    image: null as File | null,\n    roomGroupId: ''\n  });\n\n  // Modal state\n  const [isConfirmationModalVisible, setConfirmationModalVisible] = useState(false);\n  const [isSuccessModalVisible, setSuccessModalVisible] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const { data: building } = useSWR<Buildings>(BackendApiUrl.getBuilding, swrFetcher)\n  const { data: group } = useSWR<GroupList>(BackendApiUrl.getRoomGroup, swrFetcher);\n\n\n  console.log(building);\n\n  const handleBeforeUpload = (file: File) => {\n    const isImage = ACCEPTED_FILE_TYPES.includes(file.type);\n    const isLt5M = file.size <= MAX_FILE_SIZE;\n\n    if (!isImage) {\n      message.error('File yang di upload hanya bisa dalam format JPG, JPEG, PNG');\n      return false;\n    }\n\n    if (!isLt5M) {\n      message.error('File yang di upload maksimal 5 MB');\n      return false;\n    }\n\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      setImageUrl(reader.result as string);\n      setFileName(file.name);\n      setFormData({\n        ...formData,\n        image: file,\n      });\n    };\n    return false; // Prevent automatic upload\n  };\n\n  const handleRemoveImage = () => {\n    setImageUrl(null);\n    setFileName('');\n    setFormData({\n      ...formData,\n      image: null,\n    });\n  };\n\n  const handleBackButton = () => {\n    router.back();\n  };\n\n  const handleSubmit = async () => {\n    if (!formData.roomName || !formData.image) {\n      message.error('Please provide a room name and an image');\n      return;\n    }\n\n    setConfirmationModalVisible(false); // Hide confirmation modal\n    setIsSending(true);\n\n    const payload = new FormData();\n    payload.append('RoomName', formData.roomName);\n    payload.append('Description', formData.description);\n    payload.append('Capacity', formData.capacity);\n    payload.append('BuildingId', formData.buildingId);\n    payload.append('RoomTypeId', formData.roomTypeId);\n    payload.append('RoomGroupId', formData.roomGroupId);\n    payload.append('RoomPicture', formData.image);\n\n    try {\n      await fetchPOSTWithFormData(BackendApiUrl.createRoom, payload);\n      setIsSuccess(true); // Set success state\n    } catch (error) {\n      setIsSuccess(false); // Set failure state\n    } finally {\n      setIsSending(false);\n      setSuccessModalVisible(true); // Show success/failure modal\n    }\n  };\n\n  const roomTypes = [\n    { label: 'LAB', value: 1 },\n    { label: 'CLASS', value: 2 },\n    { label: 'FUNCTION', value: 3 },\n    // Add more room types as needed\n  ];\n\n  const handleDescriptionChange = (value: string) => {\n    if (value.length <= 250) {\n      setFormData({\n        ...formData,\n        description: value,\n      });\n    } else {\n      message.warning('Description must be less than 250 characters');\n    }\n  };\n\n  return (\n    <div className=\"mt-4 h-[710px] overflow-y-auto\">\n      <button className=\"bg-white rounded-full w-10 h-10 flex items-center justify-center\" onClick={handleBackButton}>\n        <FontAwesomeIcon icon={faChevronLeft} className=\"inline\" />\n      </button>\n      <div>\n        <img src=\"/Assets/images/add-room.png\" alt=\"manage\" width={310} height={40} className=\"mt-6 mb-6\" />\n\n        {/* Room Name Input */}\n        <div>\n          <p className=\"text-white font-normal text-base mb-2\">Room Name</p>\n          <Input\n            value={formData.roomName}\n            onChange={(e) => setFormData({ ...formData, roomName: e.target.value })}\n            placeholder=\"Enter room name\"\n            className=\"w-full mb-3 rounded-md\"\n          />\n        </div>\n\n        {/* Description - React Quill Editor */}\n        <div>\n          <p className=\"text-white font-normal text-base mb-2\">Description</p>\n          <Input.TextArea\n            value={formData.description}\n            onChange={(e) => handleDescriptionChange(e.target.value)}\n            placeholder=\"Enter room description (max 250 characters)\"\n            maxLength={250}\n            className=\"w-full mb-3 rounded-md\"\n            rows={4}\n          />\n        </div>\n\n        {/* Room Type Select */}\n        <div className=\"mt-4\">\n          <p className=\"text-white font-normal text-base mb-2\">Room Type</p>\n          <Select\n            value={formData.roomTypeId}\n            onChange={(value) => setFormData({ ...formData, roomTypeId: value })}\n            placeholder=\"Select room type\"\n            className=\"w-full mb-3 rounded-lg\"\n          >\n            {roomTypes.map((type) => (\n              <Select.Option key={type.value} value={type.value}>\n                {type.label}\n              </Select.Option>\n            ))}\n          </Select>\n        </div>\n\n        {/* Building Select */}\n        <div>\n          <p className=\"text-white font-normal text-base mb-2\">Building</p>\n          <Select\n            value={formData.buildingId}\n            onChange={(value) => setFormData({ ...formData, buildingId: value })}\n            placeholder=\"Select building\"\n            className=\"w-full mb-3 rounded-lg h-8\"\n            options={building?.buildingList.map((building) => ({\n              label: building.name,\n              value: building.buildingId,\n            }))}\n          />\n        </div>\n\n        <div>\n          <p className=\"text-white font-normal text-base mb-2\">Capacity</p>\n          <Input\n            value={formData.capacity}\n            onChange={(e) => setFormData({ ...formData, capacity: e.target.value })}\n            placeholder=\"Enter room capacity\"\n            className=\"w-full mb-3 rounded-md\"\n          />\n        </div>\n        <div>\n          <p className=\"text-white font-normal text-base mb-2\">Group</p>\n          <Select\n            value={formData.roomGroupId}\n            onChange={(value) => setFormData({ ...formData, roomGroupId: value })}\n            placeholder=\"Select building\"\n            className=\"w-full mb-3 rounded-lg h-8\"\n            options={group?.roomGroups.map((group) => ({\n              label: group.name,\n              value: group.id,\n            }))}\n          />\n        </div>\n\n        {/* Image Upload */}\n        <div className=\"\">\n          <p className=\"text-white font-normal text-base mb-2\">Room Image</p>\n          <Upload beforeUpload={handleBeforeUpload} multiple={false} showUploadList={false}>\n            <Button className=\"bg-white border-black text-black text-base\">\n              <FontAwesomeIcon icon={faUpload} className=\"mr-2\" />Click to Upload\n            </Button>\n          </Upload>\n          {imageUrl && (\n            <Card className=\"mt-4 p-4 bg-[#F4F5F2] shadow-inner flex justify-center\">\n              <div className=\"w-72 h-fit\">\n                <div className=\"flex justify-center\">\n                  <Image\n                    width={256}\n                    height={150}\n                    className=\"rounded-md object-cover max-w-[256px] max-h-[150px]\"\n                    src={imageUrl}\n                    alt={fileName}\n                  />\n                </div>\n                <div className=\"flex justify-center items-center w-full\">\n                  <p className=\"font-normal text-sm\">{fileName}</p>\n                  <Button type=\"link\" onClick={handleRemoveImage}>\n                    <FontAwesomeIcon icon={faTimes} className=\"text-red-500\" />\n                  </Button>\n                </div>\n              </div>\n            </Card>\n          )}\n        </div>\n\n        {/* Submit Button */}\n        <div className=\"mt-6 flex justify-center\">\n          <Spin spinning={isSending}>\n            <button\n              onClick={() => setConfirmationModalVisible(true)} // Show confirmation modal\n              disabled={!formData.roomName || !formData.roomTypeId || !formData.image || isSending}\n              className=\"bg-purple-950 px-14 py-2 font-bold text-white rounded-full text-xl\"\n            >\n              Add Room\n            </button>\n          </Spin>\n        </div>\n      </div>\n\n      {/* Confirmation Modal */}\n      <RoomConfirmationModal\n        visible={isConfirmationModalVisible}\n        onConfirm={handleSubmit}\n        onCancel={() => setConfirmationModalVisible(false)} // Close confirmation modal\n      />\n\n      {/* Success Modal */}\n      <AddRoomSuccessModal\n        visible={isSuccessModalVisible}\n        isSuccess={isSuccess}\n        onConfirm={() => {setSuccessModalVisible(false); router.push('/manage')}} // Close success modal\n      />\n    </div>\n  );\n};\n\nAddRoomPage.layout = WithDefaultLayout;\nexport default AddRoomPage;\n"],"names":["window","__NEXT_P","push","__webpack_require__","RoomConfirmationModal","visible","onConfirm","onCancel","param","jsx_runtime","jsxs","div","className","concat","jsx","img","src","alt","h1","h4","button","onClick","AddRoomSuccessModal","isSuccess","ACCEPTED_FILE_TYPES","AddRoomPage","router","useRouter","fetchPOSTWithFormData","useFetchWithAccessToken","imageUrl","setImageUrl","useState","fileName","setFileName","isSending","setIsSending","swrFetcher","useSwrFetcherWithAccessToken","formData","setFormData","roomName","description","roomTypeId","buildingId","capacity","image","roomGroupId","isConfirmationModalVisible","setConfirmationModalVisible","isSuccessModalVisible","setSuccessModalVisible","setIsSuccess","data","building","useSWR","BackendApiUrl","group","console","log","handleBeforeUpload","isImage","includes","file","type","isLt5M","size","message","reader","FileReader","readAsDataURL","onload","result","name","handleRemoveImage","handleBackButton","back","handleSubmit","payload","FormData","append","error","handleDescriptionChange","value","length","FontAwesomeIcon","icon","faChevronLeft","width","height","p","Input","onChange","e","target","placeholder","maxLength","rows","Select","roomTypes","label","map","options","buildingList","roomGroups","id","Upload","beforeUpload","multiple","showUploadList","Button","faUpload","Card","Image","faTimes","Spin","spinning","disabled","layout","WithDefaultLayout","manageRoom"],"sourceRoot":""}