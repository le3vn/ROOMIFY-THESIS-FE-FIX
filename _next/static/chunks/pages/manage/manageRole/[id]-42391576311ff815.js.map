{"version":3,"file":"static/chunks/pages/manage/manageRole/[id]-42391576311ff815.js","mappings":"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","sources":["webpack://_N_E/?0cc6","webpack://_N_E/./functions/RoleAddOptions.ts","webpack://_N_E/./components/Modals/ManageModals/ManageRoleModal/AddRoleSuccessModal.tsx","webpack://_N_E/./components/Modals/ManageModals/ManageRoleModal/AddRoleConfirm.tsx","webpack://_N_E/./pages/manage/manageRole/[id].tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/manage/manageRole/[id]\",\n      function () {\n        return require(\"private-next-pages/manage/manageRole/[id].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/manage/manageRole/[id]\"])\n      });\n    }\n  ","export const officeOptions = [\n    { value: 'Promotion Team', label: 'Promotion Team' },\n    { value: 'Student Service', label: 'Student Service' },\n    { value: 'Student Support', label: 'Student Support' },\n    { value: 'Lecturer Service', label: 'Lecturer Service' },\n    { value: 'Building Management, Mechanical, and Electrical', label: 'Building Management, Mechanical, and Electrical' },\n    { value: 'IT Division', label: 'IT Division' },\n    { value: 'Faculty of Law', label: 'Faculty of Law' },\n    { value: 'Faculty of Medicine', label: 'Faculty of Medicine' },\n    { value: 'Faculty of Engineering', label: 'Faculty of Engineering' },\n    { value: 'Business School', label: 'Business School' },\n];\n\nexport const studentOrganizationOption = [\n    { value: 'HIMTI', label: 'HIMTI' },\n    { value: 'HIMMA', label: 'HIMMA' },\n    { value: 'HIMPSIKO', label: 'HIMPSIKO' },\n    { value: 'HIMME', label: 'HIMME' },\n    { value: 'HIMSI', label: 'HIMSI' },\n    { value: 'HIMKOM', label: 'HIMKOM' },\n];\n\n ","import React from 'react';\n\ninterface SuccessModalProps {\n  visible: boolean;\n  onConfirm: () => void;\n  isSuccess: boolean;\n}\n\nconst AddRoleSuccessModal: React.FC<SuccessModalProps> = ({ visible, onConfirm, isSuccess }) => {\n  return (\n    <div className={`fixed inset-0 flex justify-center items-center bg-black bg-opacity-50 z-auto ${visible ? '' : 'hidden'}`}>\n      <div className=\"bg-purple-950 p-4 absolute top-32 rounded-full border-white border-4\">\n        <img\n          src={isSuccess ? \"/Assets/images/succeed.png\" : \"/Assets/images/person-sad.png\"}\n          alt={isSuccess ? \"Success\" : \"Error\"}\n          className=\"w-[200px] rounded-full\"\n        />\n      </div>\n      <div className=\"bg-white p-4 rounded-lg w-2/5 h-2/5\">\n        <div className=\"h-full\">\n          <div className=\"h-2/3 flex flex-col justify-end\">\n            {isSuccess ? (\n              <div className=\"flex flex-col items-center px-8\">\n                <h1 className=\"text-2xl font-bold\">You&apos;re All Set!</h1>\n                <h4 className=\"text-center\">\n                  New Role has been successfully added. Check the management page for more details!\n                </h4>\n              </div>\n            ) : (\n              <div className=\"flex flex-col items-center\">\n                <h1 className=\"text-2xl font-bold\">Oh no...</h1>\n                <h4 className=\"text-center\">Something went wrong. Please try again later.</h4>\n              </div>\n            )}\n          </div>\n          <div className=\"h-1/3 flex items-center justify-center\">\n            <button\n              className=\"bg-purple-950 h-[50px] w-[150px] rounded-full text-white text-lg font-semibold\"\n              onClick={onConfirm}\n            >\n              {isSuccess ? 'Okay, Great!' : 'Okay :('}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddRoleSuccessModal;\n","import React from 'react';\n\ninterface ConfirmationModalProps {\n  visible: boolean;\n  onConfirm: () => void;\n  onCancel: () => void;\n}\n\nconst RoleConfirmationModal: React.FC<ConfirmationModalProps> = ({ visible, onConfirm, onCancel }) => {\n  return (\n    <div className={`fixed inset-0 flex justify-center items-center bg-black bg-opacity-50 z-auto ${visible ? '' : 'hidden'}`}>\n      <div className=\"bg-purple-950 p-4 absolute top-32 rounded-full border-white border-4\">\n        <img src=\"/Assets/images/are-you-sure.png\" alt=\"Are you sure?\" className=\"w-[200px] rounded-full\" />\n      </div>\n      <div className=\"bg-white p-4 rounded-lg w-2/5 h-2/5\">\n        <div className=\"h-full\">\n          <div className=\"h-2/3 flex flex-col justify-end\">\n            <div className=\"flex flex-col items-center\">\n              <h1 className=\"text-2xl font-bold\">Add Role?</h1>\n              <h4 className=\"text-center\">Make sure to input the right data and requirements :)</h4>\n            </div>\n          </div>\n          <div className=\"h-1/3 flex items-center justify-center\">\n            <div className=\"flex gap-4\">\n              <button\n                className=\"bg-purple-950 h-[50px] w-[150px] rounded-full text-white text-lg font-semibold\"\n                onClick={onConfirm}\n              >\n                Add\n              </button>\n              <button\n                className=\"bg-gray-200 h-[50px] w-[150px] rounded-full text-black text-lg font-semibold\"\n                onClick={onCancel}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RoleConfirmationModal;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { ConfigProvider, Input, message, Select } from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faPlus, faX } from '@fortawesome/free-solid-svg-icons';\nimport { useSwrFetcherWithAccessToken } from '@/functions/useSwrFetcherWithAccessToken';\nimport useSWR, { mutate } from 'swr'; // Import mutate\nimport { BackendApiUrl } from '@/functions/BackendApiUrl';\nimport { WithDefaultLayout } from '@/components/DefautLayout';\nimport { officeOptions, studentOrganizationOption } from '@/functions/RoleAddOptions';\nimport { useFetchWithAccessToken } from '@/functions/useFetchWithAccessToken';\nimport AddRoleSuccessModal from '@/components/Modals/ManageModals/ManageRoleModal/AddRoleSuccessModal';\nimport RoleConfirmationModal from '@/components/Modals/ManageModals/ManageRoleModal/AddRoleConfirm';\n\nconst customTheme = {\n  token: {\n    'colorBgContainerDisabled': '#ffffff',\n  },\n};\n\ninterface RolesDetail {\n  roleId: string;\n  roleName: string;\n  displayName: string;\n}\n\ninterface UserRoleDetail {\n  userId: string;\n  userName: string;\n  roles: RolesDetail[];\n}\n\ninterface Roles {\n  roleId: string;\n  roleName: string;\n}\n\ninterface RolesAvailable {\n  roleAvailable: Roles[];\n  totalData: number;\n}\n\nconst EditRolePage = () => {\n  const router = useRouter();\n  const { id } = router.query;\n  const swrFetcher = useSwrFetcherWithAccessToken();\n  const { fetchPOST, fetchDELETE } = useFetchWithAccessToken();\n\n  const { data: roleDetail } = useSWR<UserRoleDetail>(`${BackendApiUrl.getRoleDetail}?id=${id}`, swrFetcher);\n  const { data: roleAvailable } = useSWR<RolesAvailable>(`${BackendApiUrl.getAvailableRole}?UserId=${id}`, swrFetcher);\n\n  const [isFormVisible, setIsFormVisible] = useState(false); // State to toggle form visibility\n  const [newRole, setNewRole] = useState<string | undefined>(undefined); // State for the new role\n  const [selectedRoleName, setSelectedRoleName] = useState<string | undefined>(undefined); // Track the selected role name\n  const [selectedOfficeOrOrg, setSelectedOfficeOrOrg] = useState<string | undefined>(undefined); // State for office or organization name\n  \n  const [isConfirmationModalVisible, setConfirmationModalVisible] = useState(false); // Track visibility of the confirmation modal\n  const [isSuccessModalVisible, setSuccessModalVisible] = useState(false); // Track visibility of the success modal\n  const [isSuccess, setIsSuccess] = useState(false); // Track if the role addition was successful\n  const [roleToDelete, setRoleToDelete] = useState<string | undefined>(undefined);\n  const [orgToDelete, setOrgToDelete] = useState<string | undefined>(undefined);\n\n\n  const handleBackButton = () => {\n    router.back();\n  };\n\n  const handleAddRoleClick = () => {\n    setIsFormVisible(true); // Show the form\n  };\n\n  const handleRoleChange = (value: string, option: any) => {\n    setNewRole(value); // Set the new selected role ID\n    setSelectedRoleName(option.label); // Save the roleName (label)\n    setSelectedOfficeOrOrg(undefined); // Reset office or organization name when role changes\n  };\n\n  const handleOfficeOrOrgChange = (value: string) => {\n    setSelectedOfficeOrOrg(value); // Set the office or organization name\n  };\n\n  const handleSubmitRole = () => {\n    if (newRole) {\n      // Show confirmation modal before proceeding\n      setConfirmationModalVisible(true);\n    } else {\n      message.error('Please select a role!');\n    }\n  };\n\n  const handleConfirmRole = async () => {\n    // Forming the payload for the API request\n    const payload = {\n      userId: roleDetail?.userId, // Use the userId from the roleDetail\n      roleId: newRole, // Role ID from selected role\n      organizationName: selectedOfficeOrOrg, // Office or Organization name if selected\n    };\n\n    try {\n      // Sending the POST request to the backend\n      const response = await fetchPOST(BackendApiUrl.addNewRole, payload);\n\n      if (response) {\n        // On successful role addition\n        setIsSuccess(true); // Set success flag to true\n        setSuccessModalVisible(true); // Show success modal\n\n        // Manually trigger re-fetch of the roles\n        mutate(`${BackendApiUrl.getRoleDetail}?id=${id}`);\n        mutate(`${BackendApiUrl.getAvailableRole}?UserId=${id}`);\n      } else {\n        // Handle failure response\n        message.error(`Error: ${response || 'Something went wrong.'}`);\n      }\n    } catch (error) {\n      // Handle fetch error\n      message.error(`Error: ${error || 'Something went wrong while adding the role.'}`);\n    } finally {\n      setConfirmationModalVisible(false); // Close the confirmation modal\n      setIsFormVisible(false)\n      setNewRole(undefined);\n      setSelectedRoleName(undefined);\n      setSelectedOfficeOrOrg(undefined);\n    }\n  };\n\n  const handleDeleteClick = (roleId: string, organizationName: string) => {\n    setRoleToDelete(roleId);\n    setOrgToDelete(organizationName);\n  };\n  \n  // Use useEffect to handle deletion when roleToDelete or orgToDelete changes\n  useEffect(() => {\n    if (roleToDelete && orgToDelete !== undefined) {\n      handleDeleteRole();\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [roleToDelete, orgToDelete]);\n\nconst handleDeleteRole = async () => {\n\n    const payload = {\n        userId: id, // Assuming 'id' is the userId\n        roleId: roleToDelete,\n        organizationName: orgToDelete || \"\", // Provide empty string if no org name\n    };\n\n    console.log(\"Payload for delete request:\", JSON.stringify(payload));\n\n    try {\n        const response = await fetchDELETE<Response>(`${BackendApiUrl.deleteRole}?UserId=${id}&RoleId=${roleToDelete}&OrganizationName=${orgToDelete}`);\n\n        if (response) {\n            message.success('Role deleted successfully!');\n            mutate(`${BackendApiUrl.getRoleDetail}?id=${id}`);\n            mutate(`${BackendApiUrl.getAvailableRole}?UserId=${id}`);\n            setRoleToDelete(undefined);\n            setOrgToDelete(undefined);\n        } else {\n            message.error(`Failed to delete role.`);\n        }\n    } catch (error) {\n        console.error(\"Error deleting role:\", error);\n        message.error('Something went wrong while deleting the role.');\n    }\n};\n  \n\n  return (\n    <ConfigProvider theme={customTheme}>\n      <div className=\"mt-4\">\n        <button className=\"bg-white rounded-full w-10 h-10 flex items-center justify-center\" onClick={handleBackButton}>\n          <FontAwesomeIcon icon={faChevronLeft} className=\"inline\" />\n        </button>\n        <div>\n          <img src=\"/Assets/images/manage-role.png\" alt=\"manage\" width={310} height={40} className=\"mt-6 mb-6\" />\n          <div>\n            <p className=\"mb-2 text-base text-white font-normal\">Full Name</p>\n            <Input disabled={true} value={roleDetail?.userName} />\n          </div>\n          <div className=\"flex gap-4 mt-4\">\n            {roleDetail?.roles.map((role) => (\n              <div\n                key={role.roleId}\n                className={`${\n                  role.roleName === 'Staff'\n                    ? 'bg-red-500'\n                    : role.roleName === 'StudentOrganization'\n                    ? 'bg-blue-500'\n                    : role.roleName === 'Lecturer'\n                    ? 'bg-green-500'\n                    : role.roleName === 'Student'\n                    ? 'bg-purple-500'\n                    : role.roleName === 'LSC'\n                    ? 'bg-orange-500'\n                    : role.roleName === 'SLC'\n                    ? 'bg-pink-500'\n                    : role.roleName === 'SSO'\n                    ? 'bg-red-300'\n                    : role.roleName === 'BM'\n                    ? 'bg-lime-400'\n                    : 'bg-gray-400'\n                } rounded-full`}\n              >\n                <div className=\"px-4 py-2 flex items-center gap-4\">\n                  <p className=\"text-base font-semibold\">{role.displayName}</p>\n                  <button onClick={role.roleName === 'Staff' || role.roleName === 'StudentOrganization' ? () => handleDeleteClick(role.roleId, role.displayName) : () => handleDeleteClick(role.roleId, \"\")}>\n                    <FontAwesomeIcon icon={faX} />\n                  </button>\n                </div>\n              </div>\n            ))}\n            <div>\n              <button className=\"px-4 py-2 bg-purple-950 text-white font-semibold rounded-full text-base\" onClick={handleAddRoleClick}>\n                <FontAwesomeIcon icon={faPlus} /> Add Role\n              </button>\n            </div>\n          </div>\n\n          {isFormVisible && (\n            <div className=\"mt-4 flex flex-col\">\n              <div className=\"flex items-end\">\n                <p className=\"mb-2 text-base text-white font-normal\">Select Role</p>\n              </div>\n              <Select\n                value={newRole}\n                onChange={handleRoleChange}\n                className=\"w-full mb-4\"\n                placeholder=\"Select a role\"\n                options={roleAvailable?.roleAvailable.map((role) => ({\n                  label: role.roleName,\n                  value: role.roleId,\n                }))}\n              />\n              {(selectedRoleName === 'Staff' || selectedRoleName === 'StudentOrganization') && (\n                <div>\n                  <p className=\"mb-2 text-base text-white font-normal\">\n                    {selectedRoleName === 'Staff' ? 'Office Name' : 'Organization Name'}\n                  </p>\n                  <Select\n                    value={selectedOfficeOrOrg}\n                    onChange={handleOfficeOrOrgChange}\n                    className=\"w-full mb-4\"\n                    placeholder={selectedRoleName === 'Staff' ? 'Select Office' : 'Select Organization'}\n                    options={selectedRoleName === 'Staff' ? officeOptions : studentOrganizationOption}\n                  />\n                </div>\n              )}\n              <div className=\"flex justify-center\">\n                <button onClick={handleSubmitRole} className=\"bg-purple-950 px-14 py-2 font-bold text-white rounded-full text-xl\">\n                  Add Role\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Confirmation Modal */}\n      <RoleConfirmationModal\n        visible={isConfirmationModalVisible}\n        onConfirm={handleConfirmRole} // Confirm and add the role\n        onCancel={() => setConfirmationModalVisible(false)} // Close confirmation modal\n      />\n\n      {/* Success Modal */}\n      <AddRoleSuccessModal\n        visible={isSuccessModalVisible}\n        isSuccess={isSuccess}\n        onConfirm={() => \n          setSuccessModalVisible(false)\n          \n        } // Close success modal\n      />\n    </ConfigProvider>\n  );\n};\n\nEditRolePage.layout = WithDefaultLayout;\nexport default EditRolePage;\n"],"names":["window","__NEXT_P","push","__webpack_require__","officeOptions","value","label","studentOrganizationOption","AddRoleSuccessModal","visible","onConfirm","isSuccess","param","jsx_runtime","jsxs","div","className","concat","jsx","img","src","alt","h1","h4","button","onClick","RoleConfirmationModal","onCancel","customTheme","token","EditRolePage","router","useRouter","id","query","swrFetcher","useSwrFetcherWithAccessToken","fetchPOST","fetchDELETE","useFetchWithAccessToken","data","roleDetail","useSWR","BackendApiUrl","roleAvailable","isFormVisible","setIsFormVisible","useState","newRole","setNewRole","undefined","selectedRoleName","setSelectedRoleName","selectedOfficeOrOrg","setSelectedOfficeOrOrg","isConfirmationModalVisible","setConfirmationModalVisible","isSuccessModalVisible","setSuccessModalVisible","setIsSuccess","roleToDelete","setRoleToDelete","orgToDelete","setOrgToDelete","handleBackButton","back","handleAddRoleClick","handleRoleChange","option","handleOfficeOrOrgChange","handleSubmitRole","message","handleConfirmRole","payload","userId","roleId","organizationName","response","mutate","error","handleDeleteClick","useEffect","handleDeleteRole","console","log","JSON","stringify","ConfigProvider","theme","FontAwesomeIcon","icon","faChevronLeft","width","height","p","Input","disabled","userName","roles","map","role","roleName","displayName","faX","faPlus","Select","onChange","placeholder","options","layout","WithDefaultLayout","_id_"],"sourceRoot":""}