{"version":3,"file":"static/chunks/pages/manage/manageGroup/[id]-f1909b1cf8013261.js","mappings":"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","sources":["webpack://_N_E/?ddc3","webpack://_N_E/./components/Modals/ManageModals/ManageRoomModals/EditRoomConfirm.tsx","webpack://_N_E/./components/Modals/ManageModals/ManageRoomModals/EditRoomSuccess.tsx","webpack://_N_E/./pages/manage/manageGroup/[id].tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/manage/manageGroup/[id]\",\n      function () {\n        return require(\"private-next-pages/manage/manageGroup/[id].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/manage/manageGroup/[id]\"])\n      });\n    }\n  ","// components/ConfirmationModal.tsx\nimport React from 'react';\n\ninterface ConfirmationModalProps {\n  visible: boolean;\n  onConfirm: () => void;\n  onCancel: () => void;\n}\n\nconst EditRoomConfirmationModal: React.FC<ConfirmationModalProps> = ({\n  visible,\n  onConfirm,\n  onCancel,\n}) => {\n  return (\n    <div className={`fixed inset-0 flex flex-col justify-center items-center bg-black bg-opacity-50 z-auto ${visible ? '' : 'hidden'}`}>\n      <div className=\"bg-purple-950 p-4 absolute top-32 rounded-full border-white border-4\">\n        <img src=\"/Assets/images/are-you-sure.png\" alt=\"Are you sure?\" className=\"w-[200px] rounded-full\" />\n      </div>\n      <div className=\"bg-white p-4 rounded-lg w-2/5 h-2/5\">\n        <div className=\"h-full\">\n          <div className=\"h-2/3 flex flex-col justify-end\">\n            <div className=\"flex flex-col items-center\">\n              <h1 className=\"text-2xl font-bold\">Are you sure you want to edit the room?</h1>\n              <h4 className=\"text-center\">Please make sure the information is correct before proceeding.</h4>\n            </div>\n          </div>\n          <div className=\"h-1/3 flex items-center justify-center\">\n            <div className=\"flex gap-4\">\n              <button\n                className=\"bg-purple-950 h-[50px] w-[150px] rounded-full text-white text-lg font-semibold\"\n                onClick={onConfirm}\n              >\n                Yes, Edit\n              </button>\n              <button\n                className=\"bg-gray-200 h-[50px] w-[150px] rounded-full text-black text-lg font-semibold\"\n                onClick={onCancel}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EditRoomConfirmationModal;\n","// components/SuccessModal.tsx\nimport React from 'react';\n\ninterface SuccessModalProps {\n  visible: boolean;\n  onConfirm: () => void;\n  isSuccess: boolean;\n  onCancel: () => void;\n}\n\nconst EditRoomSuccessModal: React.FC<SuccessModalProps> = ({\n  visible,\n  onConfirm,\n  isSuccess,\n  onCancel,\n}) => {\n  return (\n    <div className={`fixed inset-0 flex flex-col justify-center items-center bg-black bg-opacity-50 z-auto ${visible ? '' : 'hidden'}`}>\n      <div className=\"bg-purple-950 p-4 absolute top-32 rounded-full border-white border-4\">\n        <img\n          src={isSuccess ? '/Assets/images/succeed.png' : '/Assets/images/person-sad.png'}\n          alt=\"Success or Error\"\n          className=\"w-[200px] rounded-full\"\n        />\n      </div>\n      <div className=\"bg-white p-4 rounded-lg w-2/5 h-2/5\">\n        <div className=\"h-full\">\n          <div className=\"h-2/3 flex flex-col justify-end\">\n            {isSuccess ? (\n              <div className=\"flex flex-col items-center px-8\">\n                <h1 className=\"text-2xl font-bold\">You&apos;re All Set!</h1>\n                <h4 className=\"text-center\">\n                  Your room has been successfully updated. Check your building list for the changes!\n                </h4>\n              </div>\n            ) : (\n              <div className=\"flex flex-col items-center\">\n                <h1 className=\"text-2xl font-bold\">Oh no...</h1>\n                <h4 className=\"text-center\">Something went wrong. Please try again later.</h4>\n              </div>\n            )}\n          </div>\n          <div className=\"h-1/3 flex items-center justify-center\">\n            <div className=\"flex gap-4\">\n              <button\n                className=\"bg-purple-950 h-[50px] w-[150px] rounded-full text-white text-lg font-semibold\"\n                onClick={isSuccess ? onConfirm : onCancel}\n              >\n                {isSuccess ? 'Okay, Great!' : 'Try Again'}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EditRoomSuccessModal;\n","import React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { Input, Select } from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\nimport { useForm, Controller } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { BackendApiUrl } from '@/functions/BackendApiUrl';\nimport { useFetchWithAccessToken } from '@/functions/useFetchWithAccessToken';\nimport { useSwrFetcherWithAccessToken } from '@/functions/useSwrFetcherWithAccessToken';\nimport useSWR from 'swr';\nimport { WithDefaultLayout } from '@/components/DefautLayout';\nimport EditRoomSuccessModal from '@/components/Modals/ManageModals/ManageRoomModals/EditRoomSuccess';\nimport EditRoomConfirmationModal from '@/components/Modals/ManageModals/ManageRoomModals/EditRoomConfirm';\n\ninterface GroupDetail{\n    groupName: string,\n    ssoApprover: string,\n    slcApprover: string,\n    lscApprover: string,\n    bmApprover: string\n}\n\ninterface UserData {\n    userId: string;\n    userName: string;\n}\n\ninterface UserList {\n    users: UserData[];\n    totalData: number;\n}\n\nconst roomSchema = z.object({\n  GroupName: z.string(),\n  LSCApprover: z.string(),\n  SLCApprover: z.string(),\n  SSOApprover: z.string(),\n  BMApprover: z.string(),\n});\n\nconst EditRoomPage = () => {\n  const router = useRouter();\n  const { id } = router.query;\n  const { fetchPOSTWithFormData } = useFetchWithAccessToken();\n  const fetcher = useSwrFetcherWithAccessToken();\n\n  const { data: group } = useSWR<GroupDetail>(`${BackendApiUrl.getGroupDetail}?id=${id}`, fetcher);\n\n  const { handleSubmit, control, reset } = useForm<z.infer<typeof roomSchema>>({\n    resolver: zodResolver(roomSchema),\n  });\n\n  const [isConfirmationModalVisible, setConfirmationModalVisible] = useState(false);\n  const [isSuccessModalVisible, setSuccessModalVisible] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const FetchUsersForRole = (role: string) => {\n    return useSWR<UserList>(`${BackendApiUrl.getUser}?RoleName=${role}`, fetcher);\n};\n\n// Fetch users for each role\n    const { data: ssoData } = FetchUsersForRole('SSO');\n    const { data: lscData } = FetchUsersForRole('LSC');\n    const { data: slcData } = FetchUsersForRole('SLC');\n    const { data: bmData } = FetchUsersForRole('BM');\n\n  useEffect(() => {\n    if (group) {\n      reset({\n        GroupName: group.groupName,\n        SSOApprover: group.ssoApprover,\n        LSCApprover: group.lscApprover,\n        SLCApprover: group.slcApprover,\n        BMApprover: group.bmApprover\n      });\n    }\n  }, [group, reset]);\n\n  // Submit function\n  const onSubmit = async (values: z.infer<typeof roomSchema>) => {\n    const formData = new FormData();\n    formData.append('GroupName', values.GroupName);\n    formData.append('SSOApprover', values.SSOApprover);\n    formData.append('SLCApprover', values.SLCApprover);\n    formData.append('LSCApprover', values.LSCApprover);\n    formData.append('BMApprover', values.BMApprover);\n   \n    try {\n      await fetchPOSTWithFormData(BackendApiUrl.editGroup(id as string), formData);\n      setIsSuccess(true); // Set success state\n      setSuccessModalVisible(true); // Show success modal\n    } catch (error) {\n      setIsSuccess(false); // Set failure state\n      setSuccessModalVisible(true); // Show failure modal\n      console.error('Update failed:', error);\n    }\n  };\n\n  \n    const handleBackButton = () => {\n      router.back();\n    };\n\n  // Open confirmation modal\n  const handleConfirmationCancel = () => {\n    setConfirmationModalVisible(false);\n  };\n\n  // After confirmation, submit the form\n  const handleConfirmationConfirm = () => {\n    setConfirmationModalVisible(false); // Close confirmation modal\n    handleSubmit(onSubmit)(); // Proceed with form submission\n  };\n\n  const handleSuccessConfirm = () => {\n    setSuccessModalVisible(false);\n    router.push('/manage')\n    // Optionally, you can redirect or perform another action after success\n  };\n\n  return (\n    <div className=\"mt-4\">\n      <button className=\"bg-white rounded-full w-10 h-10 flex items-center justify-center\" onClick={handleBackButton}>\n        <FontAwesomeIcon icon={faChevronLeft} className=\"inline\" />\n      </button>\n      <div>\n        <img src=\"/Assets/images/edit-group.png\" alt=\"manage\" width={410} height={40} className=\"mt-6 mb-6\" />\n\n        <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-4\">\n          <div>\n            <label className=\"block text-white font-normal text-base mb-2\">Group Name</label>\n            <Controller\n              name=\"GroupName\"\n              control={control}\n              render={({ field }) => (\n                <Input {...field} placeholder=\"Enter group name\" className=\"w-full mb-3 rounded-lg h-8\" />\n              )}\n            />\n          </div>\n          <div>\n            <label className=\"block text-white font-normal text-base mb-2\">SSO Approver</label>\n            <Controller\n              name=\"SSOApprover\"\n              control={control}\n              render={({ field }) => (\n                <Select {...field} \n                placeholder=\"Enter SSO Approver\" \n                className=\"w-full mb-3 rounded-lg h-8\" \n                options={ssoData?.users.map((user) => ({\n                    label: user.userName,\n                    value: user.userId\n                }))}\n                />\n              )}\n            />\n          </div>\n          <div>\n            <label className=\"block text-white font-normal text-base mb-2\">SLC Approver</label>\n            <Controller\n              name=\"SLCApprover\"\n              control={control}\n              render={({ field }) => (\n                <Select {...field} \n                placeholder=\"Enter SLC Approver\" \n                className=\"w-full mb-3 rounded-lg h-8\" \n                options={slcData?.users.map((user) => ({\n                    label: user.userName,\n                    value: user.userId\n                }))}\n                />\n              )}\n            />\n          </div>\n          <div>\n            <label className=\"block text-white font-normal text-base mb-2\">LSC Approver</label>\n            <Controller\n              name=\"LSCApprover\"\n              control={control}\n              render={({ field }) => (\n                <Select {...field} \n                placeholder=\"Enter LSC Approver\" \n                className=\"w-full mb-3 rounded-lg h-8\" \n                options={lscData?.users.map((user) => ({\n                    label: user.userName,\n                    value: user.userId\n                }))}\n                />\n              )}\n            />\n          </div>\n          <div>\n            <label className=\"block text-white font-normal text-base mb-2\">BM Approver</label>\n            <Controller\n              name=\"BMApprover\"\n              control={control}\n              render={({ field }) => (\n                <Select {...field} \n                placeholder=\"Enter BM Approver\" \n                className=\"w-full mb-3 rounded-lg h-8\" \n                options={bmData?.users.map((user) => ({\n                    label: user.userName,\n                    value: user.userId\n                }))}\n                />\n              )}\n            />\n          </div>\n\n          <div className=\"flex justify-center mt-6\">\n            <button\n              type=\"button\"\n              className=\"bg-purple-950 px-14 py-2 font-bold text-white rounded-full text-xl\"\n              onClick={() => setConfirmationModalVisible(true)} // Open confirmation modal first\n            >\n              Save Changes\n            </button>\n          </div>\n        </form>\n      </div>\n\n      {/* Confirmation Modal */}\n      <EditRoomConfirmationModal\n        visible={isConfirmationModalVisible}\n        onConfirm={handleConfirmationConfirm} // After confirmation, submit form\n        onCancel={handleConfirmationCancel} // Cancel the confirmation\n      />\n\n      {/* Success Modal */}\n      <EditRoomSuccessModal\n        visible={isSuccessModalVisible}\n        onConfirm={handleSuccessConfirm} // Close the success modal\n        isSuccess={isSuccess}\n        onCancel={handleSuccessConfirm} // Close on cancel\n      />\n    </div>\n  );\n};\n\nEditRoomPage.layout = WithDefaultLayout;\nexport default EditRoomPage;\n"],"names":["window","__NEXT_P","push","__webpack_require__","EditRoomConfirmationModal","visible","onConfirm","onCancel","param","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","div","className","concat","jsx","img","src","alt","h1","h4","button","onClick","__webpack_exports__","EditRoomSuccessModal","isSuccess","roomSchema","z","GroupName","LSCApprover","SLCApprover","SSOApprover","BMApprover","EditRoomPage","router","useRouter","id","query","fetchPOSTWithFormData","useFetchWithAccessToken","fetcher","useSwrFetcherWithAccessToken","data","group","useSWR","BackendApiUrl","handleSubmit","control","reset","useForm","resolver","zodResolver","isConfirmationModalVisible","setConfirmationModalVisible","useState","isSuccessModalVisible","setSuccessModalVisible","setIsSuccess","FetchUsersForRole","role","ssoData","lscData","slcData","bmData","useEffect","groupName","ssoApprover","lscApprover","slcApprover","bmApprover","onSubmit","values","formData","FormData","append","error","console","handleBackButton","back","handleConfirmationCancel","handleConfirmationConfirm","handleSuccessConfirm","FontAwesomeIcon","icon","faChevronLeft","width","height","form","label","Controller","name","render","field","Input","placeholder","Select","options","users","map","user","userName","value","userId","type","layout","WithDefaultLayout"],"sourceRoot":""}