{"version":3,"file":"static/chunks/pages/manage/manageRoom/[id]-34fe5a7f9beecc78.js","mappings":"+IACe,SAAAA,GAAA,CACf,KAAAC,EAAA,CAA0BC,EAAAC,UAAgB,CAAAC,GAAAA,EAAA,KAC1C,OAAAH,CACA,wBCHA,CAAAI,OAAAC,QAAA,CAAAD,OAAAC,QAAA,MAAAC,IAAA,EACA,0BACA,WACA,OAAeC,EAAQ,KACvB,EACA,2DCGA,IAAMC,EAA8D,GAI9D,IAJ+D,CACnEC,QAAAA,CAAAA,CACAC,UAAAA,CAAAA,CACAC,SAAAA,CAAAA,CACD,CAAAC,EACC,MACE,GAAAC,EAAAC,IAAA,EAACC,MAAAA,CAAIC,UAAW,yFAAiHC,MAAA,CAAxBR,EAAU,GAAK,QAAQ,YAC9H,GAAAI,EAAAK,GAAA,EAACH,MAAAA,CAAIC,UAAU,gFACb,GAAAH,EAAAK,GAAA,EAACC,MAAAA,CAAIC,IAAI,kCAAkCC,IAAI,gBAAgBL,UAAU,6BAE3E,GAAAH,EAAAK,GAAA,EAACH,MAAAA,CAAIC,UAAU,+CACb,GAAAH,EAAAC,IAAA,EAACC,MAAAA,CAAIC,UAAU,mBACb,GAAAH,EAAAK,GAAA,EAACH,MAAAA,CAAIC,UAAU,2CACb,GAAAH,EAAAC,IAAA,EAACC,MAAAA,CAAIC,UAAU,uCACb,GAAAH,EAAAK,GAAA,EAACI,KAAAA,CAAGN,UAAU,8BAAqB,4CACnC,GAAAH,EAAAK,GAAA,EAACK,KAAAA,CAAGP,UAAU,uBAAc,wEAGhC,GAAAH,EAAAK,GAAA,EAACH,MAAAA,CAAIC,UAAU,kDACb,GAAAH,EAAAC,IAAA,EAACC,MAAAA,CAAIC,UAAU,uBACb,GAAAH,EAAAK,GAAA,EAACM,SAAAA,CACCR,UAAU,iFACVS,QAASf,WACV,cAGD,GAAAG,EAAAK,GAAA,EAACM,SAAAA,CACCR,UAAU,+EACVS,QAASd,WACV,uBASf,CAEAe,CAAAA,EAAA,EAAelB,2DCvCf,IAAMmB,EAAoD,GAKpD,IALqD,CACzDlB,QAAAA,CAAAA,CACAC,UAAAA,CAAAA,CACAkB,UAAAA,CAAAA,CACAjB,SAAAA,CAAAA,CACD,CAAAC,EACC,MACE,GAAAC,EAAAC,IAAA,EAACC,MAAAA,CAAIC,UAAW,yFAAiHC,MAAA,CAAxBR,EAAU,GAAK,QAAQ,YAC9H,GAAAI,EAAAK,GAAA,EAACH,MAAAA,CAAIC,UAAU,gFACb,GAAAH,EAAAK,GAAA,EAACC,MAAAA,CACCC,IAAKQ,EAAY,6BAA+B,+BAA+B,CAC/EP,IAAI,mBACJL,UAAU,6BAGd,GAAAH,EAAAK,GAAA,EAACH,MAAAA,CAAIC,UAAU,+CACb,GAAAH,EAAAC,IAAA,EAACC,MAAAA,CAAIC,UAAU,mBACb,GAAAH,EAAAK,GAAA,EAACH,MAAAA,CAAIC,UAAU,2CACZY,EACC,GAAAf,EAAAC,IAAA,EAACC,MAAAA,CAAIC,UAAU,4CACb,GAAAH,EAAAK,GAAA,EAACI,KAAAA,CAAGN,UAAU,8BAAqB,oBACnC,GAAAH,EAAAK,GAAA,EAACK,KAAAA,CAAGP,UAAU,uBAAc,0FAK9B,GAAAH,EAAAC,IAAA,EAACC,MAAAA,CAAIC,UAAU,uCACb,GAAAH,EAAAK,GAAA,EAACI,KAAAA,CAAGN,UAAU,8BAAqB,aACnC,GAAAH,EAAAK,GAAA,EAACK,KAAAA,CAAGP,UAAU,uBAAc,oDAE/B,GAEH,GAAAH,EAAAK,GAAA,EAACH,MAAAA,CAAIC,UAAU,kDACb,GAAAH,EAAAK,GAAA,EAACH,MAAAA,CAAIC,UAAU,sBACb,GAAAH,EAAAK,GAAA,EAACM,SAAAA,CACCR,UAAU,iFACVS,QAASG,EAAYlB,EAAYC,CAAQ,UAExCiB,EAAY,eAAiB,WAAW,cAQzD,CAEAF,CAAAA,EAAA,EAAeC,mOCzCf,IAAME,EAAsB,CAAC,aAAc,YAAa,YAAY,CAyB9DC,EAAe,IAAM,CACzB,IAAMC,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,IACT,CAAEC,GAAAA,CAAAA,CAAI,CAAGF,EAAOG,KAAK,CACrB,CAAEC,sBAAAA,CAAAA,CAAuB,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,IAC5BC,EAAUC,CAAAA,EAAAA,EAAAA,CAAAA,IAEV,CAAEC,KAAMC,CAAAA,CAAU,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,EAAiB,GAAwCR,MAAAA,CAArCS,EAAAA,CAAAA,CAAAA,gBAA8B,CAAC,QAASzB,MAAA,CAAHgB,GAAMI,GACpF,CAAEE,KAAMI,CAAAA,CAAU,CAAGF,CAAAA,EAAAA,EAAAA,EAAAA,EAAkBC,EAAAA,CAAAA,CAAAA,WAAyB,CAAEL,GAClE,CAAEE,KAAMK,CAAAA,CAAO,CAAGH,CAAAA,EAAAA,EAAAA,EAAAA,EAAkBC,EAAAA,CAAAA,CAAAA,YAA0B,CAAEL,GAEhE,CAAEQ,aAAAA,CAAAA,CAAcC,QAAAA,CAAAA,CAASC,SAAAA,CAAAA,CAAUC,MAAAA,CAAAA,CAAO,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,IAE7C,CAACC,EAAUC,EAAY,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAAwB,IAAI,EACtD,CAACC,EAAUC,EAAY,CAAGF,CAAAA,EAAAA,EAAAA,QAAAA,EAAiB,IAE3C,CAACG,EAA4BC,EAA4B,CAAGJ,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IACrE,CAACK,EAAuBC,EAAuB,CAAGN,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAC3D,CAACxB,EAAW+B,EAAa,CAAGP,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAE3CQ,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,IAAM,CACd,GAAIpB,EAAU,KAUyBA,EATrCQ,EAAM,CACJa,SAAUrB,EAASsB,IAAI,CACvBC,YAAavB,EAASwB,WAAW,CACjCC,WAAYzB,EAAS0B,UAAU,CAC/BC,WAAY3B,EAAS4B,UAAU,CAC/BC,SAAU7B,EAAS8B,QAAQ,CAC3BC,YAAa/B,EAASgC,WAAW,GAEnCrB,EAAYX,EAASiC,QAAQ,EAC7B,IAAMC,EAAYC,mBAAmBnC,CAAAA,IAAgC,GAAhCA,CAAAA,EAAAA,EAASiC,QAAQ,CAACG,KAAK,CAAC,KAAKC,GAAG,KAAhCrC,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAoCoC,KAAAA,CAAM,IAAI,CAAC,EAAE,GAAI,IAC1FtB,EAAYoB,EACd,CAAC,EACA,CAAClC,EAAUQ,EAAM,EAGpB,IAAM8B,EAAe,GAAiB,CACpC,IAAMC,EAAc,CAAC,EAyBrB,OAtBKC,EAAOnB,QAAQ,EAAImB,IAAAA,EAAOnB,QAAQ,CAACoB,IAAI,GAAGC,MAAM,EACnDH,CAAAA,EAAOlB,QAAQ,CAAG,eAIhBmB,EAAOjB,WAAW,EAAIiB,EAAOjB,WAAW,CAACmB,MAAM,CAAG,KACpDH,CAAAA,EAAOhB,WAAW,CAAG,mCAInBiB,EAAOG,WAAW,EAAI,CAACtD,EAAoBuD,QAAQ,CAACJ,EAAOG,WAAW,CAACE,IAAI,GAC7EN,CAAAA,EAAOI,WAAW,CAAG,8DAEnBH,EAAOG,WAAW,EAAIH,EAAOG,WAAW,CAACG,IAAI,CA/E/B,SAgFhBP,CAAAA,EAAOI,WAAW,CAAG,qCAInB,EAACH,EAAOX,QAAQ,EAAIkB,MAAMP,EAAOX,QAAQ,IAC3CU,CAAAA,EAAOV,QAAQ,CAAG,+BAGbU,CACT,EAEMS,EAAW,MAAOR,GAAgB,CACtC,IAAMD,EAASD,EAAaE,GAE5B,GAAIS,OAAOC,IAAI,CAACX,GAAQG,MAAM,CAAG,EAAG,CAClC,IAAK,IAAMS,KAAcZ,EACvBa,EAAAA,EAAAA,CAAAA,KAAa,CAACb,CAAM,CAACY,EAAW,EAElC,MACF,CAAC,IAEKE,EAAW,IAAIC,SACrBD,EAASE,MAAM,CAAC,OAAQf,EAAOnB,QAAQ,EACvCgC,EAASE,MAAM,CAAC,cAAef,EAAOjB,WAAW,EACjD8B,EAASE,MAAM,CAAC,aAAcf,EAAOf,UAAU,CAAC+B,QAAQ,IACxDH,EAASE,MAAM,CAAC,aAAcf,EAAOb,UAAU,CAAC6B,QAAQ,IACxDH,EAASE,MAAM,CAAC,WAAYf,EAAOX,QAAQ,CAAC2B,QAAQ,IACpDH,EAASE,MAAM,CAAC,cAAef,EAAOT,WAAW,CAACyB,QAAQ,IACtDhB,EAAOG,WAAW,EACpBU,EAASE,MAAM,CAAC,cAAef,EAAOG,WAAW,EAGnD,GAAI,CACF,MAAMhD,EAAsBO,EAAAA,CAAAA,CAAAA,QAAsB,CAACT,GAAe4D,GAClElC,EAAa,IACbD,EAAuB,GACzB,CAAE,MAAOuC,EAAO,CACdtC,EAAa,IACbD,EAAuB,IACvBwC,QAAQD,KAAK,CAAC,iBAAkBA,EAClC,CACF,EAEME,EAAqB,GAAgB,CACzC,GAAI,CAACtE,EAAoBuD,QAAQ,CAACgB,EAAKf,IAAI,EAEzC,OADAO,EAAAA,EAAAA,CAAAA,KAAa,CAAC,8DACP,EACR,CACD,GAAIQ,EAAKd,IAAI,CAhIK,QAkIhB,OADAM,EAAAA,EAAAA,CAAAA,KAAa,CAAC,qCACP,EACR,CAED,IAAMS,EAAS,IAAIC,WAOnB,OANAD,EAAOE,aAAa,CAACH,GACrBC,EAAOG,MAAM,CAAG,IAAM,CACpBrD,EAAYkD,EAAOI,MAAM,EACzBnD,EAAY8C,EAAKtC,IAAI,EACrBf,EAAS,cAAeqD,EAC1B,EACO,EACT,EAEMM,EAAoB,IAAM,CAC9BvD,EAAY,IAAI,EAChBG,EAAY,IACZP,EAAS,cAAe,IAAI,CAC9B,EAEM4D,EAAmB,IAAM,CAC7B5E,EAAO6E,IAAI,EACb,EAGMC,EAA2B,IAAM,CACrCrD,EAA4B,GAC9B,EAGMsD,EAA4B,IAAM,CACtCtD,EAA4B,IAC5BX,EAAa2C,IACf,EAEMuB,EAAuB,IAAM,CACjCrD,EAAuB,IACvB3B,EAAOzB,IAAI,CAAC,UACd,EAEA,MACE,GAAAO,EAAAC,IAAA,EAACC,MAAAA,CAAIC,UAAU,iBACb,GAAAH,EAAAK,GAAA,EAACM,SAAAA,CAAOR,UAAU,mEAAmES,QAASkF,WAC5F,GAAA9F,EAAAK,GAAA,EAAC8F,EAAAA,CAAeA,CAAAA,CAACC,KAAMC,EAAAA,GAAaA,CAAElG,UAAU,aAElD,GAAAH,EAAAC,IAAA,EAACC,MAAAA,WACC,GAAAF,EAAAK,GAAA,EAACC,MAAAA,CAAIC,IAAI,+BAA+BC,IAAI,SAAS8F,MAAO,IAAKC,OAAQ,GAAIpG,UAAU,cAEvF,GAAAH,EAAAC,IAAA,EAACuG,OAAAA,CAAK7B,SAAU3C,EAAa2C,GAAWxE,UAAU,sBAChD,GAAAH,EAAAC,IAAA,EAACC,MAAAA,WACC,GAAAF,EAAAK,GAAA,EAACoG,QAAAA,CAAMtG,UAAU,uDAA8C,kBAC/D,GAAAH,EAAAK,GAAA,EAACqG,EAAAA,EAAUA,CAAAA,CACTzD,KAAK,WACLhB,QAASA,EACT0E,OAAQ,GACN,IADO,CAAEC,MAAAA,CAAAA,CAAO,CAAA7G,QAChB,GAAAC,EAAAK,GAAA,EAACwG,EAAAA,CAAKA,CAAAA,CAAE,GAAGD,CAAK,CAAEE,YAAY,sBAAsB3G,UAAU,8BAA8B,OAIlG,GAAAH,EAAAC,IAAA,EAACC,MAAAA,WACC,GAAAF,EAAAK,GAAA,EAACoG,QAAAA,CAAMtG,UAAU,uDAA8C,gBAC/D,GAAAH,EAAAK,GAAA,EAACqG,EAAAA,EAAUA,CAAAA,CACTzD,KAAK,cACLhB,QAASA,EACT0E,OAAQ,GACN,IADO,CAAEC,MAAAA,CAAAA,CAAO,CAAA7G,QAChB,GAAAC,EAAAK,GAAA,EAAC0G,WAAAA,CACE,GAAGH,CAAK,CACTzG,UAAU,YACX,OAIP,GAAAH,EAAAC,IAAA,EAACC,MAAAA,WACC,GAAAF,EAAAK,GAAA,EAACoG,QAAAA,CAAMtG,UAAU,uDAA8C,cAC/D,GAAAH,EAAAK,GAAA,EAACqG,EAAAA,EAAUA,CAAAA,CACTzD,KAAK,aACLhB,QAASA,EACT0E,OAAQ,GACN,IADO,CAAEC,MAAAA,CAAAA,CAAO,CAAA7G,QAChB,GAAAC,EAAAK,GAAA,EAAC2G,EAAAA,CAAMA,CAAAA,CAAE,GAAGJ,CAAK,CACjBE,YAAY,mBACZ3G,UAAU,6BACV8G,QAAS,CACL,CAAEC,MAAO,EAAGT,MAAO,KAAM,EACzB,CAAES,MAAO,EAAGT,MAAO,OAAQ,EAC3B,CAAES,MAAO,EAAGT,MAAO,UAAW,EAC/B,EACF,OAIP,GAAAzG,EAAAC,IAAA,EAACC,MAAAA,WACC,GAAAF,EAAAK,GAAA,EAACoG,QAAAA,CAAMtG,UAAU,uDAA8C,aAC/D,GAAAH,EAAAK,GAAA,EAACqG,EAAAA,EAAUA,CAAAA,CACTzD,KAAK,aACLhB,QAASA,EACT0E,OAAQ,OAAC,CAAEC,MAAAA,CAAAA,CAAO,CAAA7G,EAChB,SAAAC,EAAAK,GAAA,EAAC2G,EAAAA,CAAMA,CAAAA,CAAE,GAAGJ,CAAK,CACjBE,YAAY,kBACZ3G,UAAU,6BACV8G,QAASnF,MAAAA,EAAAA,KAAAA,EAAAA,EAAUqF,YAAY,CAACC,GAAG,CAAC,GAChC,EACIF,MAAOpF,EAASyB,UAAU,CAC1BkD,MAAO3E,EAASmB,IAAI,CACxB,EACF,SAKR,GAAAjD,EAAAC,IAAA,EAACC,MAAAA,WACC,GAAAF,EAAAK,GAAA,EAACoG,QAAAA,CAAMtG,UAAU,uDAA8C,aAC/D,GAAAH,EAAAK,GAAA,EAACqG,EAAAA,EAAUA,CAAAA,CACTzD,KAAK,WACLhB,QAASA,EACT0E,OAAQ,GACN,IADO,CAAEC,MAAAA,CAAAA,CAAO,CAAA7G,QAChB,GAAAC,EAAAK,GAAA,EAACwG,EAAAA,CAAKA,CAAAA,CAAE,GAAGD,CAAK,CAAEE,YAAY,iBAAiB3G,UAAU,8BAA8B,OAI7F,GAAAH,EAAAC,IAAA,EAACC,MAAAA,WACC,GAAAF,EAAAK,GAAA,EAACoG,QAAAA,CAAMtG,UAAU,uDAA8C,eAC/D,GAAAH,EAAAK,GAAA,EAACqG,EAAAA,EAAUA,CAAAA,CACTzD,KAAK,cACLhB,QAASA,EACT0E,OAAQ,OAAC,CAAEC,MAAAA,CAAAA,CAAO,CAAA7G,EAChB,SAAAC,EAAAK,GAAA,EAAC2G,EAAAA,CAAMA,CAAAA,CAAE,GAAGJ,CAAK,CACjBE,YAAY,oBACZ3G,UAAU,6BACV8G,QAASlF,MAAAA,EAAAA,KAAAA,EAAAA,EAAOsF,UAAU,CAACD,GAAG,CAAC,GAC3B,EACIF,MAAOnF,EAAMX,EAAE,CACfqF,MAAO1E,EAAMkB,IAAI,CACrB,EACF,SAMR,GAAAjD,EAAAC,IAAA,EAACC,MAAAA,WACC,GAAAF,EAAAK,GAAA,EAACoG,QAAAA,CAAMtG,UAAU,uDAA8C,mBAC/D,GAAAH,EAAAK,GAAA,EAACiH,EAAAA,CAAMA,CAAAA,CAACC,aAAcjC,EAAoBkC,eAAgB,YACxD,GAAAxH,EAAAC,IAAA,EAACwH,EAAAA,EAAMA,CAAAA,CAACtH,UAAU,uDAChB,GAAAH,EAAAK,GAAA,EAAC8F,EAAAA,CAAeA,CAAAA,CAACC,KAAMsB,EAAAA,GAAQA,CAAEvH,UAAU,SAAS,0BAKzDkC,GACC,GAAArC,EAAAK,GAAA,EAACH,MAAAA,CAAIC,UAAU,2EACb,GAAAH,EAAAC,IAAA,EAACC,MAAAA,CAAIC,UAAU,oEACb,GAAAH,EAAAK,GAAA,EAACC,MAAAA,CAAIC,IAAK8B,EAAU7B,IAAKgC,EAAUrC,UAAU,+BAC7C,GAAAH,EAAAK,GAAA,EAACM,SAAAA,CACCR,UAAU,uDACVS,QAASiF,WAET,GAAA7F,EAAAK,GAAA,EAAC8F,EAAAA,CAAeA,CAAAA,CAACC,KAAMuB,EAAAA,GAAOA,UAMtC,GAAA3H,EAAAK,GAAA,EAACH,MAAAA,CAAIC,UAAU,oCACb,GAAAH,EAAAK,GAAA,EAACM,SAAAA,CACC6D,KAAK,SACLrE,UAAU,qEACVS,QAAS,IAAM+B,EAA4B,aAC5C,yBAQP,GAAA3C,EAAAK,GAAA,EAACV,EAAAA,CAAyBA,CAAAA,CACxBC,QAAS8C,EACT7C,UAAWoG,EACXnG,SAAUkG,IAIZ,GAAAhG,EAAAK,GAAA,EAACS,EAAAA,CAAoBA,CAAAA,CACnBlB,QAASgD,EACT/C,UAAWqG,EACXnF,UAAWA,EACXjB,SAAUoG,MAIlB,CAEAjF,CAAAA,EAAa2G,MAAM,CAAGC,EAAAA,CAAiBA,CACvChH,EAAA,QAAeI","sources":["webpack://_N_E/./node_modules/antd/es/_util/hooks/useForceUpdate.js","webpack://_N_E/?4cfc","webpack://_N_E/./components/Modals/ManageModals/ManageRoomModals/EditRoomConfirm.tsx","webpack://_N_E/./components/Modals/ManageModals/ManageRoomModals/EditRoomSuccess.tsx","webpack://_N_E/./pages/manage/manageRoom/[id].tsx","webpack://_N_E/<anon>"],"sourcesContent":["import * as React from 'react';\nexport default function useForceUpdate() {\n  const [, forceUpdate] = React.useReducer(x => x + 1, 0);\n  return forceUpdate;\n}","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/manage/manageRoom/[id]\",\n      function () {\n        return require(\"private-next-pages/manage/manageRoom/[id].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/manage/manageRoom/[id]\"])\n      });\n    }\n  ","// components/ConfirmationModal.tsx\nimport React from 'react';\n\ninterface ConfirmationModalProps {\n  visible: boolean;\n  onConfirm: () => void;\n  onCancel: () => void;\n}\n\nconst EditRoomConfirmationModal: React.FC<ConfirmationModalProps> = ({\n  visible,\n  onConfirm,\n  onCancel,\n}) => {\n  return (\n    <div className={`fixed inset-0 flex flex-col justify-center items-center bg-black bg-opacity-50 z-auto ${visible ? '' : 'hidden'}`}>\n      <div className=\"bg-purple-950 p-4 absolute top-32 rounded-full border-white border-4\">\n        <img src=\"/Assets/images/are-you-sure.png\" alt=\"Are you sure?\" className=\"w-[200px] rounded-full\" />\n      </div>\n      <div className=\"bg-white p-4 rounded-lg w-2/5 h-2/5\">\n        <div className=\"h-full\">\n          <div className=\"h-2/3 flex flex-col justify-end\">\n            <div className=\"flex flex-col items-center\">\n              <h1 className=\"text-2xl font-bold\">Are you sure you want to edit the room?</h1>\n              <h4 className=\"text-center\">Please make sure the information is correct before proceeding.</h4>\n            </div>\n          </div>\n          <div className=\"h-1/3 flex items-center justify-center\">\n            <div className=\"flex gap-4\">\n              <button\n                className=\"bg-purple-950 h-[50px] w-[150px] rounded-full text-white text-lg font-semibold\"\n                onClick={onConfirm}\n              >\n                Yes, Edit\n              </button>\n              <button\n                className=\"bg-gray-200 h-[50px] w-[150px] rounded-full text-black text-lg font-semibold\"\n                onClick={onCancel}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EditRoomConfirmationModal;\n","// components/SuccessModal.tsx\nimport React from 'react';\n\ninterface SuccessModalProps {\n  visible: boolean;\n  onConfirm: () => void;\n  isSuccess: boolean;\n  onCancel: () => void;\n}\n\nconst EditRoomSuccessModal: React.FC<SuccessModalProps> = ({\n  visible,\n  onConfirm,\n  isSuccess,\n  onCancel,\n}) => {\n  return (\n    <div className={`fixed inset-0 flex flex-col justify-center items-center bg-black bg-opacity-50 z-auto ${visible ? '' : 'hidden'}`}>\n      <div className=\"bg-purple-950 p-4 absolute top-32 rounded-full border-white border-4\">\n        <img\n          src={isSuccess ? '/Assets/images/succeed.png' : '/Assets/images/person-sad.png'}\n          alt=\"Success or Error\"\n          className=\"w-[200px] rounded-full\"\n        />\n      </div>\n      <div className=\"bg-white p-4 rounded-lg w-2/5 h-2/5\">\n        <div className=\"h-full\">\n          <div className=\"h-2/3 flex flex-col justify-end\">\n            {isSuccess ? (\n              <div className=\"flex flex-col items-center px-8\">\n                <h1 className=\"text-2xl font-bold\">You&apos;re All Set!</h1>\n                <h4 className=\"text-center\">\n                  Your room has been successfully updated. Check your building list for the changes!\n                </h4>\n              </div>\n            ) : (\n              <div className=\"flex flex-col items-center\">\n                <h1 className=\"text-2xl font-bold\">Oh no...</h1>\n                <h4 className=\"text-center\">Something went wrong. Please try again later.</h4>\n              </div>\n            )}\n          </div>\n          <div className=\"h-1/3 flex items-center justify-center\">\n            <div className=\"flex gap-4\">\n              <button\n                className=\"bg-purple-950 h-[50px] w-[150px] rounded-full text-white text-lg font-semibold\"\n                onClick={isSuccess ? onConfirm : onCancel}\n              >\n                {isSuccess ? 'Okay, Great!' : 'Try Again'}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EditRoomSuccessModal;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { Button, Input, Select, Upload, message } from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUpload, faTimes, faChevronLeft } from '@fortawesome/free-solid-svg-icons';\nimport { useForm, Controller } from 'react-hook-form';\nimport { BackendApiUrl } from '@/functions/BackendApiUrl';\nimport { useFetchWithAccessToken } from '@/functions/useFetchWithAccessToken';\nimport { useSwrFetcherWithAccessToken } from '@/functions/useSwrFetcherWithAccessToken';\nimport useSWR from 'swr';\nimport { WithDefaultLayout } from '@/components/DefautLayout';\nimport EditRoomSuccessModal from '@/components/Modals/ManageModals/ManageRoomModals/EditRoomSuccess';\nimport EditRoomConfirmationModal from '@/components/Modals/ManageModals/ManageRoomModals/EditRoomConfirm';\nimport { GroupList } from '.';\n\nconst MAX_FILE_SIZE = 5 * 1024 * 1024; // 5MB\nconst ACCEPTED_FILE_TYPES = ['image/jpeg', 'image/png', 'image/gif'];\n\ninterface BuildingData {\n  buildingId: number;\n  name: string;\n}\n\ninterface Buildings {\n  buildingList: BuildingData[];\n  totalData: number;\n}\n\ninterface RoomData {\n  name: string;\n  description: string;\n  roomTypeId: number;\n  roomType: string;\n  buildingId: number;\n  building: string;\n  capacity: number;\n  roomGroupId: number;\n  roomGroup: string;\n  minioUrl: string;\n}\n\nconst EditRoomPage = () => {\n  const router = useRouter();\n  const { id } = router.query;\n  const { fetchPOSTWithFormData } = useFetchWithAccessToken();\n  const fetcher = useSwrFetcherWithAccessToken();\n\n  const { data: roomData } = useSWR<RoomData>(`${BackendApiUrl.getAllRoomDetail}?id=${id}`, fetcher);\n  const { data: building } = useSWR<Buildings>(BackendApiUrl.getBuilding, fetcher);\n  const { data: group } = useSWR<GroupList>(BackendApiUrl.getRoomGroup, fetcher);\n\n  const { handleSubmit, control, setValue, reset } = useForm();\n\n  const [imageUrl, setImageUrl] = useState<string | null>(null);\n  const [fileName, setFileName] = useState<string>('');\n\n  const [isConfirmationModalVisible, setConfirmationModalVisible] = useState(false);\n  const [isSuccessModalVisible, setSuccessModalVisible] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n\n  useEffect(() => {\n    if (roomData) {\n      reset({\n        RoomName: roomData.name,\n        Description: roomData.description,\n        RoomTypeId: roomData.roomTypeId,\n        BuildingId: roomData.buildingId,\n        Capacity: roomData.capacity,\n        RoomGroupId: roomData.roomGroupId,\n      });\n      setImageUrl(roomData.minioUrl);\n      const imageName = decodeURIComponent(roomData.minioUrl.split('/').pop()?.split('?')[0] || '');\n      setFileName(imageName);\n    }\n  }, [roomData, reset]);\n\n  // Simple Validation Function\n  const validateForm = (values: any) => {\n    const errors: any = {};\n\n    // RoomName validation\n    if (!values.RoomName || values.RoomName.trim().length === 0) {\n      errors.RoomName = 'Nama Kosong';\n    }\n\n    // Description validation (max 250 characters)\n    if (values.Description && values.Description.length > 250) {\n      errors.Description = 'Deskripsi maksimal 250 karakter';\n    }\n\n    // RoomPicture validation\n    if (values.RoomPicture && !ACCEPTED_FILE_TYPES.includes(values.RoomPicture.type)) {\n      errors.RoomPicture = 'File yang di upload hanya bisa dalam format JPG, JPEG, PNG';\n    }\n    if (values.RoomPicture && values.RoomPicture.size > MAX_FILE_SIZE) {\n      errors.RoomPicture = 'File yang di upload maksimal 5 MB';\n    }\n\n    // Capacity validation (should be a number)\n    if (!values.Capacity || isNaN(values.Capacity)) {\n      errors.Capacity = 'Capacity harus berupa angka';\n    }\n\n    return errors;\n  };\n\n  const onSubmit = async (values: any) => {\n    const errors = validateForm(values);\n\n    if (Object.keys(errors).length > 0) {\n      for (const errorField in errors) {\n        message.error(errors[errorField]);\n      }\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('Name', values.RoomName);\n    formData.append('Description', values.Description);\n    formData.append('RoomTypeId', values.RoomTypeId.toString());\n    formData.append('BuildingId', values.BuildingId.toString());\n    formData.append('Capacity', values.Capacity.toString());\n    formData.append('RoomGroupId', values.RoomGroupId.toString());\n    if (values.RoomPicture) {\n      formData.append('RoomPicture', values.RoomPicture);\n    }\n\n    try {\n      await fetchPOSTWithFormData(BackendApiUrl.editRoom(id as string), formData);\n      setIsSuccess(true); // Set success state\n      setSuccessModalVisible(true); // Show success modal\n    } catch (error) {\n      setIsSuccess(false); // Set failure state\n      setSuccessModalVisible(true); // Show failure modal\n      console.error('Update failed:', error);\n    }\n  };\n\n  const handleBeforeUpload = (file: File) => {\n    if (!ACCEPTED_FILE_TYPES.includes(file.type)) {\n      message.error('File yang di upload hanya bisa dalam format JPG, JPEG, PNG');\n      return false;\n    }\n    if (file.size > MAX_FILE_SIZE) {\n      message.error('File yang di upload maksimal 5 MB');\n      return false;\n    }\n\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      setImageUrl(reader.result as string);\n      setFileName(file.name);\n      setValue('RoomPicture', file); // Set file to form value\n    };\n    return false;\n  };\n\n  const handleRemoveImage = () => {\n    setImageUrl(null);\n    setFileName('');\n    setValue('RoomPicture', null); // Clear the form field\n  };\n\n  const handleBackButton = () => {\n    router.back();\n  };\n\n  // Open confirmation modal\n  const handleConfirmationCancel = () => {\n    setConfirmationModalVisible(false);\n  };\n\n  // After confirmation, submit the form\n  const handleConfirmationConfirm = () => {\n    setConfirmationModalVisible(false); // Close confirmation modal\n    handleSubmit(onSubmit)(); // Proceed with form submission\n  };\n\n  const handleSuccessConfirm = () => {\n    setSuccessModalVisible(false);\n    router.push('/manage'); // Redirect after success\n  };\n\n  return (\n    <div className=\"mt-4\">\n      <button className=\"bg-white rounded-full w-10 h-10 flex items-center justify-center\" onClick={handleBackButton}>\n        <FontAwesomeIcon icon={faChevronLeft} className=\"inline\" />\n      </button>\n      <div>\n        <img src=\"/Assets/images/edit-room.png\" alt=\"manage\" width={310} height={40} className=\"mt-6 mb-6\" />\n\n        <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-4\">\n          <div>\n            <label className=\"block text-white font-normal text-base mb-2\">Building Name</label>\n            <Controller\n              name=\"RoomName\"\n              control={control}\n              render={({ field }) => (\n                <Input {...field} placeholder=\"Enter building name\" className=\"w-full mb-3 rounded-lg h-8\" />\n              )}\n            />\n          </div>\n          <div>\n            <label className=\"block text-white font-normal text-base mb-2\">Description</label>\n            <Controller\n              name=\"Description\"\n              control={control}\n              render={({ field }) => (\n                <textarea\n                  {...field}\n                  className=\"bg-white\"\n                />\n              )}\n            />\n          </div>\n          <div>\n            <label className=\"block text-white font-normal text-base mb-2\">Room Type</label>\n            <Controller\n              name=\"RoomTypeId\"\n              control={control}\n              render={({ field }) => (\n                <Select {...field} \n                placeholder=\"Select room type\" \n                className=\"w-full mb-3 rounded-lg h-8\" \n                options={[\n                    { value: 1, label: \"LAB\" },\n                    { value: 2, label: \"CLASS\" },\n                    { value: 3, label: \"FUNCTION\" },\n                  ]}\n                />\n              )}\n            />\n          </div>\n          <div>\n            <label className=\"block text-white font-normal text-base mb-2\">Building</label>\n            <Controller\n              name=\"BuildingId\"\n              control={control}\n              render={({ field }) => (\n                <Select {...field} \n                placeholder=\"Select building\" \n                className=\"w-full mb-3 rounded-lg h-8\" \n                options={building?.buildingList.map((building) => (\n                    {\n                        value: building.buildingId,\n                        label: building.name\n                    }\n                ))}\n                />\n              )}\n            />\n          </div>\n          <div>\n            <label className=\"block text-white font-normal text-base mb-2\">Capacity</label>\n            <Controller\n              name=\"Capacity\"\n              control={control}\n              render={({ field }) => (\n                <Input {...field} placeholder=\"Enter capacity\" className=\"w-full mb-3 rounded-lg h-8\" />\n              )}\n            />\n          </div>\n          <div>\n            <label className=\"block text-white font-normal text-base mb-2\">Room Group</label>\n            <Controller\n              name=\"RoomGroupId\"\n              control={control}\n              render={({ field }) => (\n                <Select {...field} \n                placeholder=\"Select room group\" \n                className=\"w-full mb-3 rounded-lg h-8\" \n                options={group?.roomGroups.map((group) => (\n                    {\n                        value: group.id,\n                        label: group.name\n                    }\n                ))}\n                />\n              )}\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-white font-normal text-base mb-2\">Building Image</label>\n            <Upload beforeUpload={handleBeforeUpload} showUploadList={false}>\n              <Button className=\"bg-white border-black text-black text-base\">\n                <FontAwesomeIcon icon={faUpload} className=\"mr-2\" />Click to Upload\n              </Button>\n            </Upload>\n          </div>\n\n          {imageUrl && (\n            <div className=\"relative w-full flex justify-center bg-[#F4F5F2] rounded-md p-5\">\n              <div className=\"w-[256px] h-[150px] relative overflow-hidden rounded-md\">\n                <img src={imageUrl} alt={fileName} className=\"object-cover w-full h-full\" />\n                <button\n                  className=\"absolute top-0 right-0 text-red-600 rounded-full p-2\"\n                  onClick={handleRemoveImage}\n                >\n                  <FontAwesomeIcon icon={faTimes} />\n                </button>\n              </div>\n            </div>\n          )}\n\n          <div className=\"flex justify-center mt-6\">\n            <button\n              type=\"button\"\n              className=\"bg-purple-950 px-14 py-2 font-bold text-white rounded-full text-xl\"\n              onClick={() => setConfirmationModalVisible(true)} // Open confirmation modal first\n            >\n              Save Changes\n            </button>\n          </div>\n        </form>\n      </div>\n\n      {/* Confirmation Modal */}\n      <EditRoomConfirmationModal\n        visible={isConfirmationModalVisible}\n        onConfirm={handleConfirmationConfirm} // After confirmation, submit form\n        onCancel={handleConfirmationCancel} // Cancel the confirmation\n      />\n\n      {/* Success Modal */}\n      <EditRoomSuccessModal\n        visible={isSuccessModalVisible}\n        onConfirm={handleSuccessConfirm} // Close the success modal\n        isSuccess={isSuccess}\n        onCancel={handleSuccessConfirm} // Close on cancel\n      />\n    </div>\n  );\n};\n\nEditRoomPage.layout = WithDefaultLayout;\nexport default EditRoomPage;\n"],"names":["useForceUpdate","forceUpdate","react__WEBPACK_IMPORTED_MODULE_0__","useReducer","x","window","__NEXT_P","push","__webpack_require__","EditRoomConfirmationModal","visible","onConfirm","onCancel","param","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","div","className","concat","jsx","img","src","alt","h1","h4","button","onClick","__webpack_exports__","EditRoomSuccessModal","isSuccess","ACCEPTED_FILE_TYPES","EditRoomPage","router","useRouter","id","query","fetchPOSTWithFormData","useFetchWithAccessToken","fetcher","useSwrFetcherWithAccessToken","data","roomData","useSWR","BackendApiUrl","building","group","handleSubmit","control","setValue","reset","useForm","imageUrl","setImageUrl","useState","fileName","setFileName","isConfirmationModalVisible","setConfirmationModalVisible","isSuccessModalVisible","setSuccessModalVisible","setIsSuccess","useEffect","RoomName","name","Description","description","RoomTypeId","roomTypeId","BuildingId","buildingId","Capacity","capacity","RoomGroupId","roomGroupId","minioUrl","imageName","decodeURIComponent","split","pop","validateForm","errors","values","trim","length","RoomPicture","includes","type","size","isNaN","onSubmit","Object","keys","errorField","message","formData","FormData","append","toString","error","console","handleBeforeUpload","file","reader","FileReader","readAsDataURL","onload","result","handleRemoveImage","handleBackButton","back","handleConfirmationCancel","handleConfirmationConfirm","handleSuccessConfirm","FontAwesomeIcon","icon","faChevronLeft","width","height","form","label","Controller","render","field","Input","placeholder","textarea","Select","options","value","buildingList","map","roomGroups","Upload","beforeUpload","showUploadList","Button","faUpload","faTimes","layout","WithDefaultLayout"],"sourceRoot":""}