{"version":3,"file":"static/chunks/pages/manage/manageBuilding-3f8674a71391d641.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/CheckOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons/es/icons/CheckOutlined.js","webpack://_N_E/./node_modules/antd/es/locale/useLocale.js","webpack://_N_E/?ae0b","webpack://_N_E/./components/Modals/ManageModals/ManageBuildingModals/AddBuildingSuccess.tsx","webpack://_N_E/./components/Modals/ManageModals/ManageBuildingModals/AddBuildingConfirm.tsx","webpack://_N_E/./pages/manage/manageBuilding/index.tsx","webpack://_N_E/<anon>"],"sourcesContent":["// This icon file is generated automatically.\nvar CheckOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M912 190h-69.9c-9.8 0-19.1 4.5-25.1 12.2L404.7 724.5 207 474a32 32 0 00-25.1-12.2H112c-6.7 0-10.4 7.7-6.3 12.9l273.9 347c12.8 16.2 37.4 16.2 50.3 0l488.4-618.9c4.1-5.1.4-12.8-6.3-12.8z\" } }] }, \"name\": \"check\", \"theme\": \"outlined\" };\nexport default CheckOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CheckOutlinedSvg from \"@ant-design/icons-svg/es/asn/CheckOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar CheckOutlined = function CheckOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CheckOutlinedSvg\n  }));\n};\nCheckOutlined.displayName = 'CheckOutlined';\nexport default /*#__PURE__*/React.forwardRef(CheckOutlined);","import * as React from 'react';\nimport LocaleContext from './context';\nimport defaultLocaleData from './en_US';\nconst useLocale = (componentName, defaultLocale) => {\n  const fullLocale = React.useContext(LocaleContext);\n  const getLocale = React.useMemo(() => {\n    var _a;\n    const locale = defaultLocale || defaultLocaleData[componentName];\n    const localeFromContext = (_a = fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale[componentName]) !== null && _a !== void 0 ? _a : {};\n    return Object.assign(Object.assign({}, typeof locale === 'function' ? locale() : locale), localeFromContext || {});\n  }, [componentName, defaultLocale, fullLocale]);\n  const getLocaleCode = React.useMemo(() => {\n    const localeCode = fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale.locale;\n    // Had use LocaleProvide but didn't set locale\n    if ((fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale.exist) && !localeCode) {\n      return defaultLocaleData.locale;\n    }\n    return localeCode;\n  }, [fullLocale]);\n  return [getLocale, getLocaleCode];\n};\nexport default useLocale;","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/manage/manageBuilding\",\n      function () {\n        return require(\"private-next-pages/manage/manageBuilding/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/manage/manageBuilding\"])\n      });\n    }\n  ","import React from 'react';\n\ninterface SuccessModalProps {\n  visible: boolean;\n  onConfirm: () => void;\n  isSuccess: boolean;\n}\n\nconst AddBuildingSuccessModal: React.FC<SuccessModalProps> = ({ visible, onConfirm, isSuccess }) => {\n  return (\n    <div className={`fixed inset-0 flex justify-center items-center bg-black bg-opacity-50 z-auto ${visible ? '' : 'hidden'}`}>\n      <div className=\"bg-purple-950 p-4 absolute top-32 rounded-full border-white border-4\">\n        <img\n          src={isSuccess ? \"/Assets/images/succeed.png\" : \"/Assets/images/person-sad.png\"}\n          alt={isSuccess ? \"Success\" : \"Error\"}\n          className=\"w-[200px] rounded-full\"\n        />\n      </div>\n      <div className=\"bg-white p-4 rounded-lg w-2/5 h-2/5\">\n        <div className=\"h-full\">\n          <div className=\"h-2/3 flex flex-col justify-end\">\n            {isSuccess ? (\n              <div className=\"flex flex-col items-center px-8\">\n                <h1 className=\"text-2xl font-bold\">You&apos;re All Set!</h1>\n                <h4 className=\"text-center\">\n                  Your building has been successfully added. Check the management page for more details!\n                </h4>\n              </div>\n            ) : (\n              <div className=\"flex flex-col items-center\">\n                <h1 className=\"text-2xl font-bold\">Oh no...</h1>\n                <h4 className=\"text-center\">Something went wrong. Please try again later.</h4>\n              </div>\n            )}\n          </div>\n          <div className=\"h-1/3 flex items-center justify-center\">\n            <button\n              className=\"bg-purple-950 h-[50px] w-[150px] rounded-full text-white text-lg font-semibold\"\n              onClick={onConfirm}\n            >\n              {isSuccess ? 'Okay, Great!' : 'Okay :('}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddBuildingSuccessModal;\n","import React from 'react';\n\ninterface ConfirmationModalProps {\n  visible: boolean;\n  onConfirm: () => void;\n  onCancel: () => void;\n}\n\nconst BuildingConfirmationModal: React.FC<ConfirmationModalProps> = ({ visible, onConfirm, onCancel }) => {\n  return (\n    <div className={`fixed inset-0 flex justify-center items-center bg-black bg-opacity-50 z-auto ${visible ? '' : 'hidden'}`}>\n      <div className=\"bg-purple-950 p-4 absolute top-32 rounded-full border-white border-4\">\n        <img src=\"/Assets/images/are-you-sure.png\" alt=\"Are you sure?\" className=\"w-[200px] rounded-full\" />\n      </div>\n      <div className=\"bg-white p-4 rounded-lg w-2/5 h-2/5\">\n        <div className=\"h-full\">\n          <div className=\"h-2/3 flex flex-col justify-end\">\n            <div className=\"flex flex-col items-center\">\n              <h1 className=\"text-2xl font-bold\">Add Building?</h1>\n              <h4 className=\"text-center\">Make sure to input the right data and requirements :)</h4>\n            </div>\n          </div>\n          <div className=\"h-1/3 flex items-center justify-center\">\n            <div className=\"flex gap-4\">\n              <button\n                className=\"bg-purple-950 h-[50px] w-[150px] rounded-full text-white text-lg font-semibold\"\n                onClick={onConfirm}\n              >\n                Add\n              </button>\n              <button\n                className=\"bg-gray-200 h-[50px] w-[150px] rounded-full text-black text-lg font-semibold\"\n                onClick={onCancel}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BuildingConfirmationModal;\n","import React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { Button, Input, Upload, Card, Image, message, Spin } from 'antd';\nimport { faUpload, faTimes, faChevronLeft } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useFetchWithAccessToken } from '@/functions/useFetchWithAccessToken';\nimport { BackendApiUrl } from '@/functions/BackendApiUrl';\nimport { WithDefaultLayout } from '@/components/DefautLayout';\nimport AddBuildingSuccessModal from '@/components/Modals/ManageModals/ManageBuildingModals/AddBuildingSuccess';\nimport BuildingConfirmationModal from '@/components/Modals/ManageModals/ManageBuildingModals/AddBuildingConfirm';\n\nconst MAX_FILE_SIZE = 5 * 1024 * 1024; // 5MB\nconst ACCEPTED_FILE_TYPES = [\"image/jpeg\", \"image/png\", \"image/gif\"];\n\nconst AddBuildingPage = () => {\n  const router = useRouter();\n  const { fetchPOSTWithFormData } = useFetchWithAccessToken();\n  const [imageUrl, setImageUrl] = useState<string | null>(null);\n  const [fileName, setFileName] = useState<string>('');\n  const [isSending, setIsSending] = useState(false);\n  const [formData, setFormData] = useState({\n    buildingName: '',\n    image: null as File | null,\n  });\n\n  // Modal state\n  const [isConfirmationModalVisible, setConfirmationModalVisible] = useState(false);\n  const [isSuccessModalVisible, setSuccessModalVisible] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n\n  const handleBeforeUpload = (file: File) => {\n    const isImage = ACCEPTED_FILE_TYPES.includes(file.type);\n    const isLt5M = file.size <= MAX_FILE_SIZE;\n\n    if (!isImage) {\n      message.error('File yang di upload hanya bisa dalam format JPG, JPEG, PNG');\n      return false;\n    }\n\n    if (!isLt5M) {\n      message.error('File yang di upload maksimal 5 MB');\n      return false;\n    }\n\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      setImageUrl(reader.result as string);\n      setFileName(file.name);\n      setFormData({\n        ...formData,\n        image: file,\n      });\n    };\n    return false; // Prevent automatic upload\n  };\n\n  const handleRemoveImage = () => {\n    setImageUrl(null);\n    setFileName('');\n    setFormData({\n      ...formData,\n      image: null,\n    });\n  };\n\n  const handleBackButton = () => {\n    router.back();\n  };\n\n  const handleSubmit = async () => {\n    if (!formData.buildingName || !formData.image) {\n      message.error('Please provide a building name and an image');\n      return;\n    }\n\n    setConfirmationModalVisible(false); // Hide confirmation modal\n    setIsSending(true);\n\n    const payload = new FormData();\n    payload.append('BuildingName', formData.buildingName);\n    payload.append('BuildingPicture', formData.image);\n\n    try {\n      await fetchPOSTWithFormData(BackendApiUrl.createBuilding, payload);\n      setIsSuccess(true); // Set success state\n    } catch (error) {\n      setIsSuccess(false); // Set failure state\n    } finally {\n      setIsSending(false);\n      setSuccessModalVisible(true); // Show success/failure modal\n    }\n  };\n\n  return (\n    <div className=\"mt-4\">\n      <button className=\"bg-white rounded-full w-10 h-10 flex items-center justify-center\" onClick={handleBackButton}>\n        <FontAwesomeIcon icon={faChevronLeft} className=\"inline\" />\n      </button>\n      <div>\n        <img src=\"/Assets/images/add-building.png\" alt=\"manage\" width={310} height={40} className=\"mt-6 mb-6\" />\n        <div>\n          <p className=\"text-white font-normal text-base mb-2\">Building Name</p>\n          <Input\n            value={formData.buildingName}\n            onChange={(e) => setFormData({ ...formData, buildingName: e.target.value })}\n            placeholder=\"Enter building name\"\n            className=\"w-full mb-3 rounded-lg h-8\"\n          />\n        </div>\n        <div className=\"mt-4\">\n          <p className=\"text-white font-normal text-base mb-2\">Building Image</p>\n          <Upload beforeUpload={handleBeforeUpload} multiple={false} showUploadList={false}>\n            <Button className=\"bg-white border-black text-black text-base\">\n              <FontAwesomeIcon icon={faUpload} className=\"mr-2\" />Click to Upload\n            </Button>\n          </Upload>\n          {imageUrl && (\n            <Card className=\"mt-4 p-4 bg-[#F4F5F2] shadow-inner flex justify-center\">\n              <div className=\"w-72 h-fit\">\n                <div className=\"flex justify-center\">\n                  <Image\n                    width={256}\n                    height={150}\n                    className=\"rounded-md object-cover max-w-[256px] max-h-[150px]\"\n                    src={imageUrl}\n                    alt={fileName}\n                  />\n                </div>\n                <div className=\"flex justify-center items-center w-full\">\n                  <p className=\"font-normal text-sm\">{fileName}</p>\n                  <Button type=\"link\" onClick={handleRemoveImage}>\n                    <FontAwesomeIcon icon={faTimes} className=\"text-red-500\" />\n                  </Button>\n                </div>\n              </div>\n            </Card>\n          )}\n        </div>\n        <div className=\"mt-6 flex justify-center\">\n          <Spin spinning={isSending}>\n            <button\n              onClick={() => setConfirmationModalVisible(true)} // Show confirmation modal\n              disabled={!formData.buildingName || !formData.image || isSending}\n              className=\"bg-purple-950 px-14 py-2 font-bold text-white rounded-full text-xl\"\n            >\n              Add Building\n            </button>\n          </Spin>\n        </div>\n      </div>\n\n      {/* Confirmation Modal */}\n      <BuildingConfirmationModal\n        visible={isConfirmationModalVisible}\n        onConfirm={handleSubmit}\n        onCancel={() => setConfirmationModalVisible(false)} // Close confirmation modal\n      />\n\n      {/* Success Modal */}\n      <AddBuildingSuccessModal\n        visible={isSuccessModalVisible}\n        isSuccess={isSuccess}\n        onConfirm={() => {setSuccessModalVisible(false); router.push('/manage')}} // Close success modal\n      />\n    </div>\n  );\n};\n\nAddBuildingPage.layout = WithDefaultLayout;\nexport default AddBuildingPage;\n"],"names":["asn_CheckOutlined","CheckOutlined_CheckOutlined","props","ref","react","createElement","AntdIcon","Z","objectSpread2","icon","displayName","icons_CheckOutlined","forwardRef","useLocale","componentName","defaultLocale","fullLocale","react__WEBPACK_IMPORTED_MODULE_0__","useContext","_context__WEBPACK_IMPORTED_MODULE_1__","getLocale","useMemo","_a","locale","_en_US__WEBPACK_IMPORTED_MODULE_2__","localeFromContext","Object","assign","getLocaleCode","localeCode","exist","__webpack_exports__","window","__NEXT_P","push","__webpack_require__","AddBuildingSuccessModal","visible","onConfirm","isSuccess","param","jsx_runtime","jsxs","div","className","concat","jsx","img","src","alt","h1","h4","button","onClick","BuildingConfirmationModal","onCancel","ACCEPTED_FILE_TYPES","AddBuildingPage","router","useRouter","fetchPOSTWithFormData","useFetchWithAccessToken","imageUrl","setImageUrl","useState","fileName","setFileName","isSending","setIsSending","formData","setFormData","buildingName","image","isConfirmationModalVisible","setConfirmationModalVisible","isSuccessModalVisible","setSuccessModalVisible","setIsSuccess","handleBeforeUpload","isImage","includes","file","type","isLt5M","size","message","reader","FileReader","readAsDataURL","onload","result","name","handleRemoveImage","handleBackButton","back","handleSubmit","payload","FormData","append","BackendApiUrl","error","FontAwesomeIcon","faChevronLeft","width","height","p","Input","value","onChange","e","target","placeholder","Upload","beforeUpload","multiple","showUploadList","Button","faUpload","Card","Image","faTimes","Spin","spinning","disabled","layout","WithDefaultLayout","manageBuilding"],"sourceRoot":""}