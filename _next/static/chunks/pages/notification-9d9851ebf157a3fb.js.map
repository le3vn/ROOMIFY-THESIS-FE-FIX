{"version":3,"file":"static/chunks/pages/notification-9d9851ebf157a3fb.js","mappings":"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","sources":["webpack://_N_E/?7726","webpack://_N_E/./node_modules/antd/es/_util/capitalize.js","webpack://_N_E/./node_modules/antd/es/tag/style/index.js","webpack://_N_E/./node_modules/antd/es/tag/CheckableTag.js","webpack://_N_E/./node_modules/antd/es/tag/index.js","webpack://_N_E/./components/Modals/NotificationModals/ConfirmationModal.tsx","webpack://_N_E/./components/Modals/NotificationModals/SuccessModal.tsx","webpack://_N_E/./pages/notification/index.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/notification\",\n      function () {\n        return require(\"private-next-pages/notification/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/notification\"])\n      });\n    }\n  ","export default function capitalize(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n  const ret = str.charAt(0).toUpperCase() + str.slice(1);\n  return ret;\n}","import capitalize from '../../_util/capitalize';\nimport { resetComponent } from '../../style';\nimport { genComponentStyleHook, genPresetColor, mergeToken } from '../../theme/internal';\nconst genTagStatusStyle = (token, status, cssVariableType) => {\n  const capitalizedCssVariableType = capitalize(cssVariableType);\n  return {\n    [`${token.componentCls}-${status}`]: {\n      color: token[`color${cssVariableType}`],\n      background: token[`color${capitalizedCssVariableType}Bg`],\n      borderColor: token[`color${capitalizedCssVariableType}Border`]\n    }\n  };\n};\nconst genPresetStyle = token => genPresetColor(token, (colorKey, _ref) => {\n  let {\n    textColor,\n    lightBorderColor,\n    lightColor,\n    darkColor\n  } = _ref;\n  return {\n    [`${token.componentCls}-${colorKey}`]: {\n      color: textColor,\n      background: lightColor,\n      borderColor: lightBorderColor,\n      // Inverse color\n      '&-inverse': {\n        color: token.colorTextLightSolid,\n        background: darkColor,\n        borderColor: darkColor\n      },\n      [`&${token.componentCls}-borderless`]: {\n        borderColor: 'transparent'\n      }\n    }\n  };\n});\nconst genBaseStyle = token => {\n  const {\n    paddingXXS,\n    lineWidth,\n    tagPaddingHorizontal,\n    componentCls\n  } = token;\n  const paddingInline = tagPaddingHorizontal - lineWidth;\n  const iconMarginInline = paddingXXS - lineWidth;\n  return {\n    // Result\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-block',\n      height: 'auto',\n      marginInlineEnd: token.marginXS,\n      paddingInline,\n      fontSize: token.tagFontSize,\n      lineHeight: `${token.tagLineHeight}px`,\n      whiteSpace: 'nowrap',\n      background: token.tagDefaultBg,\n      border: `${token.lineWidth}px ${token.lineType} ${token.colorBorder}`,\n      borderRadius: token.borderRadiusSM,\n      opacity: 1,\n      transition: `all ${token.motionDurationMid}`,\n      textAlign: 'start',\n      // RTL\n      [`&${componentCls}-rtl`]: {\n        direction: 'rtl'\n      },\n      '&, a, a:hover': {\n        color: token.tagDefaultColor\n      },\n      [`${componentCls}-close-icon`]: {\n        marginInlineStart: iconMarginInline,\n        color: token.colorTextDescription,\n        fontSize: token.tagIconSize,\n        cursor: 'pointer',\n        transition: `all ${token.motionDurationMid}`,\n        '&:hover': {\n          color: token.colorTextHeading\n        }\n      },\n      [`&${componentCls}-has-color`]: {\n        borderColor: 'transparent',\n        [`&, a, a:hover, ${token.iconCls}-close, ${token.iconCls}-close:hover`]: {\n          color: token.colorTextLightSolid\n        }\n      },\n      [`&-checkable`]: {\n        backgroundColor: 'transparent',\n        borderColor: 'transparent',\n        cursor: 'pointer',\n        [`&:not(${componentCls}-checkable-checked):hover`]: {\n          color: token.colorPrimary,\n          backgroundColor: token.colorFillSecondary\n        },\n        '&:active, &-checked': {\n          color: token.colorTextLightSolid\n        },\n        '&-checked': {\n          backgroundColor: token.colorPrimary,\n          '&:hover': {\n            backgroundColor: token.colorPrimaryHover\n          }\n        },\n        '&:active': {\n          backgroundColor: token.colorPrimaryActive\n        }\n      },\n      [`&-hidden`]: {\n        display: 'none'\n      },\n      // To ensure that a space will be placed between character and `Icon`.\n      [`> ${token.iconCls} + span, > span + ${token.iconCls}`]: {\n        marginInlineStart: paddingInline\n      }\n    }),\n    [`${componentCls}-borderless`]: {\n      borderColor: 'transparent',\n      background: token.tagBorderlessBg\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Tag', token => {\n  const {\n    fontSize,\n    lineHeight,\n    lineWidth,\n    fontSizeIcon\n  } = token;\n  const tagHeight = Math.round(fontSize * lineHeight);\n  const tagFontSize = token.fontSizeSM;\n  const tagLineHeight = tagHeight - lineWidth * 2;\n  const tagDefaultBg = token.colorFillQuaternary;\n  const tagDefaultColor = token.colorText;\n  const tagToken = mergeToken(token, {\n    tagFontSize,\n    tagLineHeight,\n    tagDefaultBg,\n    tagDefaultColor,\n    tagIconSize: fontSizeIcon - 2 * lineWidth,\n    tagPaddingHorizontal: 8,\n    tagBorderlessBg: token.colorFillTertiary\n  });\n  return [genBaseStyle(tagToken), genPresetStyle(tagToken), genTagStatusStyle(tagToken, 'success', 'Success'), genTagStatusStyle(tagToken, 'processing', 'Info'), genTagStatusStyle(tagToken, 'error', 'Error'), genTagStatusStyle(tagToken, 'warning', 'Warning')];\n});","var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nconst CheckableTag = props => {\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      checked,\n      onChange,\n      onClick\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"checked\", \"onChange\", \"onClick\"]);\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const handleClick = e => {\n    onChange === null || onChange === void 0 ? void 0 : onChange(!checked);\n    onClick === null || onClick === void 0 ? void 0 : onClick(e);\n  };\n  const prefixCls = getPrefixCls('tag', customizePrefixCls);\n  // Style\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const cls = classNames(prefixCls, {\n    [`${prefixCls}-checkable`]: true,\n    [`${prefixCls}-checkable-checked`]: checked\n  }, className, hashId);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"span\", Object.assign({}, restProps, {\n    className: cls,\n    onClick: handleClick\n  })));\n};\nexport default CheckableTag;","var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { isPresetColor, isPresetStatusColor } from '../_util/colors';\nimport warning from '../_util/warning';\nimport Wave from '../_util/wave';\nimport { ConfigContext } from '../config-provider';\nimport CheckableTag from './CheckableTag';\nimport useStyle from './style';\nconst InternalTag = (tagProps, ref) => {\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      rootClassName,\n      style,\n      children,\n      icon,\n      color,\n      onClose,\n      closeIcon,\n      closable = false,\n      bordered = true\n    } = tagProps,\n    props = __rest(tagProps, [\"prefixCls\", \"className\", \"rootClassName\", \"style\", \"children\", \"icon\", \"color\", \"onClose\", \"closeIcon\", \"closable\", \"bordered\"]);\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const [visible, setVisible] = React.useState(true);\n  // Warning for deprecated usage\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!('visible' in props), 'Tag', '`visible` is deprecated, please use `visible && <Tag />` instead.') : void 0;\n  }\n  React.useEffect(() => {\n    if ('visible' in props) {\n      setVisible(props.visible);\n    }\n  }, [props.visible]);\n  const isInternalColor = isPresetColor(color) || isPresetStatusColor(color);\n  const tagStyle = Object.assign({\n    backgroundColor: color && !isInternalColor ? color : undefined\n  }, style);\n  const prefixCls = getPrefixCls('tag', customizePrefixCls);\n  // Style\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const tagClassName = classNames(prefixCls, {\n    [`${prefixCls}-${color}`]: isInternalColor,\n    [`${prefixCls}-has-color`]: color && !isInternalColor,\n    [`${prefixCls}-hidden`]: !visible,\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-borderless`]: !bordered\n  }, className, rootClassName, hashId);\n  const handleCloseClick = e => {\n    e.stopPropagation();\n    onClose === null || onClose === void 0 ? void 0 : onClose(e);\n    if (e.defaultPrevented) {\n      return;\n    }\n    setVisible(false);\n  };\n  const closeIconNode = React.useMemo(() => {\n    if (closable) {\n      return closeIcon ? /*#__PURE__*/React.createElement(\"span\", {\n        className: `${prefixCls}-close-icon`,\n        onClick: handleCloseClick\n      }, closeIcon) : /*#__PURE__*/React.createElement(CloseOutlined, {\n        className: `${prefixCls}-close-icon`,\n        onClick: handleCloseClick\n      });\n    }\n    return null;\n  }, [closable, closeIcon, prefixCls, handleCloseClick]);\n  const isNeedWave = typeof props.onClick === 'function' || children && children.type === 'a';\n  const iconNode = icon || null;\n  const kids = iconNode ? /*#__PURE__*/React.createElement(React.Fragment, null, iconNode, /*#__PURE__*/React.createElement(\"span\", null, children)) : children;\n  const tagNode = /*#__PURE__*/React.createElement(\"span\", Object.assign({}, props, {\n    ref: ref,\n    className: tagClassName,\n    style: tagStyle\n  }), kids, closeIconNode);\n  return wrapSSR(isNeedWave ? /*#__PURE__*/React.createElement(Wave, null, tagNode) : tagNode);\n};\nconst Tag = /*#__PURE__*/React.forwardRef(InternalTag);\nif (process.env.NODE_ENV !== 'production') {\n  Tag.displayName = 'Tag';\n}\nTag.CheckableTag = CheckableTag;\nexport default Tag;","import React from 'react';\n\ninterface ConfirmationModalProps {\n  visible: boolean;\n  onConfirm: () => void;\n  onCancel: () => void;\n}\n\nconst ConfirmationModal: React.FC<ConfirmationModalProps> = ({\n  visible,\n  onConfirm,\n  onCancel,\n}) => {\n  return (\n    <div className={`fixed inset-0 flex flex-col justify-center items-center bg-black bg-opacity-50 z-auto ${visible ? '' : 'hidden'}`}>\n      <div className='bg-purple-950 p-4 absolute top-32 rounded-full border-white border-4'>\n        <img src=\"/Assets/images/are-you-sure.png\" alt=\"\" className='w-[200px] rounded-full'/>\n      </div>\n      <div className=\"bg-white p-4 rounded-lg w-2/5 h-2/5\">\n        <div className='h-full'>\n          <div className='h-2/3 flex flex-col justify-end'>\n            <div className='flex flex-col items-center'>\n              <h1 className='text-2xl font-bold'>Delete All Notification ?</h1>\n              <h4 className='text-center'>This action can&apos;t be undone. Your notifications will be gone. Permanently.</h4>\n            </div>\n          </div>\n          <div className='h-1/3 flex items-center justify-center'>\n            <div className='flex gap-4'>\n              <button className='bg-purple-950 h-[50px] w-[150px] rounded-full text-white text-lg font-semibold' onClick={onConfirm}>Submit</button>\n              <button className='bg-gray-200 h-[50px] w-[150px] rounded-full text-black text-lg font-semibold' onClick={onCancel}>Cancel</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfirmationModal;","import React from 'react';\n\ninterface ConfirmationModalProps {\n  visible: boolean;\n  onConfirm: () => void;\n  isSuccess: boolean;\n  onCancel: () => void;\n}\n\nconst SuccessModal: React.FC<ConfirmationModalProps> = ({\n  visible,\n  onConfirm,\n  isSuccess,\n  onCancel\n}) => {\n  return (\n    <div className={`fixed inset-0 flex flex-col justify-center items-center bg-black bg-opacity-50 z-auto ${visible ? '' : 'hidden'}`}>\n      <div className='bg-purple-950 p-4 absolute top-32 rounded-full border-white border-4'>\n        <img src={isSuccess ? \"/Assets/images/succeed.png\" : \"/Assets/images/person-sad.png\"} alt=\"\" className='w-[200px] rounded-full'/>\n      </div>\n      <div className=\"bg-white p-4 rounded-lg w-2/5 h-2/5\">\n        <div className='h-full'>\n          <div className='h-2/3 flex flex-col justify-end'>\n          {isSuccess ? \n            <div className='flex flex-col items-center px-8'>\n              <h1 className='text-2xl font-bold'>You&apos;re All Set !</h1>\n              <h4 className='text-center'>Your notifications are deleted.</h4>\n            </div>\n            : \n            <div className='flex flex-col items-center'>\n              <h1 className='text-2xl font-bold'>Oh no...</h1>\n              <h4 className='text-center'>Something just happened. Try again later.</h4>\n            </div>\n            }\n          </div>\n          <div className='h-1/3 flex items-center justify-center'>\n            <div className='flex gap-4'>\n              <button className='bg-purple-950 h-[50px] w-[150px] rounded-full text-white text-lg font-semibold' onClick={isSuccess ? onConfirm : onCancel}>{isSuccess ? \"Okay, Great!\" : \"Okay :(\"}</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SuccessModal;","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState } from 'react';\nimport { WithDefaultLayout } from '../../components/DefautLayout';\nimport { Page } from '../../types/Page';\nimport { useSwrFetcherWithAccessToken } from '@/functions/useSwrFetcherWithAccessToken';\nimport useSWR, { mutate } from 'swr';\nimport { User } from 'next-auth';\nimport { useSession } from 'next-auth/react';\nimport { BackendApiUrl } from '@/functions/BackendApiUrl';\nimport { Table, Space, Tag, message } from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { useFetchWithAccessToken } from '@/functions/useFetchWithAccessToken';\nimport ConfirmationModal from '@/components/Modals/NotificationModals/ConfirmationModal';\nimport SuccessModal from '@/components/Modals/NotificationModals/SuccessModal';\n\ninterface NotificationModel {\n    notificationId: number;\n    subject: string;\n    message: string;\n    readAt: string;\n    createdAt: string;\n    createdBy: string;\n}\n\ninterface NotificationList {\n    notifications: NotificationModel[];\n    totalData: number;\n}\n\nconst Notification: Page = () => {\n    const { data: session } = useSession();\n    const user = session?.user as User;\n    const userId = user?.id;\n    const swrFetcher = useSwrFetcherWithAccessToken();\n    const { fetchPUT, fetchDELETE } = useFetchWithAccessToken();\n\n    const { data: notification } = useSWR<NotificationList>(`${BackendApiUrl.getNotification}?UserId=${userId}`, swrFetcher);\n\n    const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]); // State for selected rows\n    const [isDeleteModalVisible, setIsDeleteModalVisible] = useState(false); // Modal for confirmation before deleting all notifications\n    const [isSuccessModalOpen, setIsSuccessModalOpen] = useState(false); // Success Modal state\n    const [isSuccess, setIsSuccess] = useState(false); // Success state\n\n    // Row Selection Configuration\n    const rowSelection = {\n        selectedRowKeys,\n        onChange: (selectedRowKeys: React.Key[]) => {\n            setSelectedRowKeys(selectedRowKeys);\n        },\n    };\n\n    const handleNotificationClick = async (id: number) => {\n        const payload = { notificationId: id };\n        await fetchPUT(BackendApiUrl.readNotification, payload);\n        mutate(`${BackendApiUrl.getNotification}?UserId=${userId}`);\n        mutate(`${BackendApiUrl.getNotificationUnread}?UserId=${userId}`);\n    };\n\n    const handleDelete = async (id: number) => {\n        const response = await fetchDELETE<Response>(\n            `${BackendApiUrl.deleteNotification}?NotificationId=${id}`\n        );\n        if (response.data) {\n            mutate(`${BackendApiUrl.getNotification}?UserId=${userId}`);\n            mutate(`${BackendApiUrl.getNotificationUnread}?UserId=${userId}`);\n        }\n    };\n\n    // Handle delete all notifications confirmation\n    const handleDeleteAll = () => {\n        if (selectedRowKeys.length > 0) {\n            setIsDeleteModalVisible(true);\n        } else {\n            message.error(\"Please select at least one notification to delete.\");\n        }\n    };\n\n    const confirmDeleteAll = async () => {\n        setIsSuccess(false); // Reset success state\n\n        try {\n            // Loop through selected notifications and delete them individually\n            for (let i = 0; i < selectedRowKeys.length; i++) {\n                const notificationId = selectedRowKeys[i];\n                const response = await fetchDELETE<Response>(\n                    `${BackendApiUrl.deleteNotification}?NotificationId=${notificationId}`\n                );\n\n                if (!response.data) {\n                    throw new Error(\"Failed to delete notification\");\n                }\n            }\n\n            // After all deletions are successful, set success state to true\n            setIsSuccess(true);\n            setIsSuccessModalOpen(true); // Open success modal\n            // Mutate to refresh data\n            mutate(`${BackendApiUrl.getNotification}?UserId=${userId}`);\n            mutate(`${BackendApiUrl.getNotificationUnread}?UserId=${userId}`);\n        } catch (error) {\n            console.error('Error deleting notifications:', error);\n        } finally {\n            setIsDeleteModalVisible(false);\n        }\n    };\n\n    const cancelDeleteAll = () => {\n        setIsDeleteModalVisible(false);\n    };\n\n    const handleSuccessModalConfirm = () => {\n        setIsSuccessModalOpen(false); // Close success modal\n    };\n\n    const handleSuccessModalCancel = () => {\n        setIsSuccessModalOpen(false); // Close success modal\n    };\n\n    // Columns for the Table\n    const columns = [\n        {\n            title: 'No',\n            dataIndex: 'no',\n            key: 'no',\n            render: (text: string, record: NotificationModel, index: number) => index + 1,\n        },\n        {\n            title: 'Notification',\n            dataIndex: 'message',\n            key: 'notificationId',\n            render: (message: string, record: NotificationModel) => (\n                <div className=\"flex items-center\" onClick={() => handleNotificationClick(record.notificationId)}>\n                    <div>\n                        <div className='flex'>\n                            <p className='text-base font-bold mr-2'>{record.subject}</p>\n                            <span>{record.readAt === null && <Tag color=\"red\" className=\"mr-2\">New</Tag>}</span>\n                        </div>\n                        <p>{message}</p>\n                        <p className='text-xs text-gray-500'>{record.createdAt} - {record.createdBy}</p>\n                    </div>\n                </div>\n            ),\n        },\n        {\n            title: 'Actions',\n            key: 'actions',\n            render: (_: any, record: NotificationModel) => (\n                <Space size=\"middle\">\n                    <button\n                        onClick={() => handleDelete(record.notificationId)}\n                    >\n                        <FontAwesomeIcon icon={faTrash} className='text-red-500'/>\n                    </button>\n                </Space>\n            ),\n        },\n    ];\n\n    return (\n        <div className=\"mt-3 h-[650px]\">\n            <img src=\"/Assets/images/notification.png\" alt=\"Ongoing\" width={310} height={40} className=\"mt-16\" />\n\n            <div className=\"flex justify-end mt-4 mb-6\">\n                <button \n                    onClick={handleDeleteAll}\n                    className='bg-red-500 w-10 h-10 rounded-xl'\n                >\n                    <FontAwesomeIcon icon={faTrash} className='text-white'/>\n                </button>\n            </div>\n\n            <Table\n                rowSelection={rowSelection}\n                columns={columns}\n                dataSource={notification?.notifications}\n                rowKey=\"notificationId\"\n                pagination={false}\n                scroll={{ y: 700 }} // Enable vertical scrolling if the table is long\n            />\n\n            {/* Delete Confirmation Modal */}\n            <ConfirmationModal\n                visible={isDeleteModalVisible}\n                onConfirm={confirmDeleteAll}\n                onCancel={cancelDeleteAll}\n            />\n\n            {/* Success Modal */}\n            <SuccessModal\n                visible={isSuccessModalOpen}\n                onConfirm={handleSuccessModalConfirm}\n                onCancel={handleSuccessModalCancel}\n                isSuccess={isSuccess}\n            />\n        </div>\n    );\n};\n\nNotification.layout = WithDefaultLayout;\nexport default Notification;\n"],"names":["window","__NEXT_P","push","__webpack_require__","genTagStatusStyle","token","status","cssVariableType","capitalizedCssVariableType","capitalize","str","ret","charAt","toUpperCase","slice","componentCls","color","background","borderColor","genPresetStyle","genPresetColor","Z","colorKey","_ref","textColor","lightBorderColor","lightColor","darkColor","colorTextLightSolid","genBaseStyle","paddingXXS","lineWidth","tagPaddingHorizontal","paddingInline","Object","assign","style","Wf","display","height","marginInlineEnd","marginXS","fontSize","tagFontSize","lineHeight","tagLineHeight","whiteSpace","tagDefaultBg","border","lineType","colorBorder","borderRadius","borderRadiusSM","opacity","transition","motionDurationMid","textAlign","direction","tagDefaultColor","marginInlineStart","colorTextDescription","tagIconSize","cursor","colorTextHeading","iconCls","backgroundColor","colorPrimary","colorFillSecondary","colorPrimaryHover","colorPrimaryActive","tagBorderlessBg","tag_style","genComponentStyleHook","fontSizeIcon","fontSizeSM","colorFillQuaternary","colorText","tagToken","statistic","TS","tagHeight","round","colorFillTertiary","__rest","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","CheckableTag","props","prefixCls","customizePrefixCls","className","checked","onChange","onClick","restProps","getPrefixCls","react","useContext","context","E_","handleClick","wrapSSR","hashId","cls","classnames_default","createElement","tag_rest","InternalTag","tagProps","ref","rootClassName","children","icon","onClose","closeIcon","closable","bordered","visible","setVisible","useState","useEffect","isInternalColor","colors","o2","yT","tagStyle","undefined","tagClassName","handleCloseClick","stopPropagation","defaultPrevented","closeIconNode","useMemo","CloseOutlined","isNeedWave","type","iconNode","kids","Fragment","tagNode","wave","Tag","forwardRef","ConfirmationModal","onConfirm","onCancel","param","jsx_runtime","jsxs","div","concat","jsx","img","src","alt","h1","h4","button","SuccessModal","isSuccess","Notification","data","session","useSession","user","userId","id","swrFetcher","useSwrFetcherWithAccessToken","fetchPUT","fetchDELETE","useFetchWithAccessToken","notification","useSWR","BackendApiUrl","selectedRowKeys","setSelectedRowKeys","isDeleteModalVisible","setIsDeleteModalVisible","isSuccessModalOpen","setIsSuccessModalOpen","setIsSuccess","handleNotificationClick","notificationId","mutate","handleDelete","response","handleDeleteAll","message","confirmDeleteAll","error","console","cancelDeleteAll","handleSuccessModalConfirm","handleSuccessModalCancel","columns","title","dataIndex","key","render","text","record","index","subject","span","readAt","createdAt","createdBy","_","Space","size","FontAwesomeIcon","faTrash","width","Table","rowSelection","dataSource","notifications","rowKey","pagination","scroll","y","layout","WithDefaultLayout"],"sourceRoot":""}