{"version":3,"file":"static/chunks/pages/room/[id]-b000628681980ebb.js","mappings":"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","sources":["webpack://_N_E/./node_modules/dayjs/plugin/isBetween.js","webpack://_N_E/?9870","webpack://_N_E/./components/HeaderPage.tsx","webpack://_N_E/./components/Modals/BookingsModals/ScheduleModal.tsx","webpack://_N_E/./pages/room/[id].tsx","webpack://_N_E/<anon>"],"sourcesContent":["!function(e,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_isBetween=i()}(this,(function(){\"use strict\";return function(e,i,t){i.prototype.isBetween=function(e,i,s,f){var n=t(e),o=t(i),r=\"(\"===(f=f||\"()\")[0],u=\")\"===f[1];return(r?this.isAfter(n,s):!this.isBefore(n,s))&&(u?this.isBefore(o,s):!this.isAfter(o,s))||(r?this.isBefore(n,s):!this.isAfter(n,s))&&(u?this.isAfter(o,s):!this.isBefore(o,s))}}}));","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/room/[id]\",\n      function () {\n        return require(\"private-next-pages/room/[id].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/room/[id]\"])\n      });\n    }\n  ","import React from 'react';\nimport Image from 'next/image';\n\nconst HeaderPage = () => {\n  return (\n    <div className=\"flex flex-col items-center\">\n      <Image\n        src=\"/Assets/images/font-title-master.png\"\n        alt=\"Title Master\"\n        width={720}\n        height={100}\n      />\n      <div className=\"text-center mt-2\">\n        <p className='text-white text-sm'>Unlock the door to convenience with Roomify. : Where booking a room becomes</p>\n        <p className='text-white text-sm'>as effortless as turning the key.</p>\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderPage;","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react';\nimport { Table, Spin, message } from 'antd';\nimport { useFetchWithAccessToken } from '@/functions/useFetchWithAccessToken'; // Import the fetch hook\nimport { BackendApiUrl } from '@/functions/BackendApiUrl'; // Assuming this is where your API URLs are\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faX } from '@fortawesome/free-solid-svg-icons';\n\ninterface ModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  roomId: string | string[] | undefined ;\n  roomName: string | undefined; // Pass roomId to fetch the schedule\n}\n\n// Define the structure of the schedule item\ninterface Schedule {\n  bookingDate: string;\n  bookingTimeStart: string;\n  bookingTimeEnd: string;\n  eventName: string;\n  picName: string;\n}\n\n// Define the structure of the schedule list (wrapped around Schedule array)\ninterface ScheduleList {\n  scheduleList: Schedule[];\n}\n\nconst Modal: React.FC<ModalProps> = ({ isOpen, onClose, roomId, roomName }) => {\n  const { fetchGET } = useFetchWithAccessToken(); // Hook to fetch data\n  const [scheduleData, setScheduleData] = useState<ScheduleList | undefined>(undefined); // State to store schedule data\n  const [loading, setLoading] = useState<boolean>(false); // Loading state\n\n  // Fetch room schedule when modal opens\n  useEffect(() => {\n    if (isOpen) {\n      fetchRoomSchedule();\n    }\n  }, [isOpen, roomId]);\n\n  // Function to fetch room schedule with try-catch for error handling\n  const fetchRoomSchedule = async () => {\n    setLoading(true); // Set loading to true when fetching\n    try {\n      // Type the response explicitly as ScheduleList\n      const response = await fetchGET<ScheduleList>(`${BackendApiUrl.getRoomSchedule}?id=${roomId}`);\n\n      console.log(response.data)\n      \n      // Ensure that we only set the scheduleList if it's valid\n      if (response && response.data?.scheduleList) {\n        setScheduleData(response.data);\n      } else {\n        message.error('No schedule data available.');\n      }\n    } catch (error: unknown) {\n      // Handle unknown error type\n      console.error('Error fetching schedule data:', error);\n      message.error('Failed to fetch room schedule. Please try again later.');\n    } finally {\n      setLoading(false); // Set loading to false when fetching is done\n    }\n  };\n\n  if (!isOpen) return null; // Don't render the modal if it's closed\n\n  // Define columns for Ant Design Table\n  const columns = [\n    {\n      title: 'Date',\n      dataIndex: 'bookingDate',\n      key: 'bookingDate'\n    },\n    {\n      title: 'Start Time',\n      dataIndex: 'bookingTimeStart',\n      key: 'bookingTimeStart',\n    },\n    {\n      title: 'End Time',\n      dataIndex: 'bookingTimeEnd',\n      key: 'bookingTimeEnd',\n    },\n    {\n      title: 'Event Name',\n      dataIndex: 'eventName',\n      key: 'eventName',\n    },\n    {\n      title: 'PIC Name',\n      dataIndex: 'picName',\n      key: 'picName',\n    },\n  ];\n\n  return (\n    <div className=\"fixed inset-0 flex justify-center items-center bg-black bg-opacity-50 z-50\">\n      <div className=\"bg-white p-8 rounded-lg w-3/5\">\n      <div className='flex justify-between items-center mb-4'>\n        <h2 className=\"text-2xl font-bold\">{roomName}</h2>\n        <button className='bg-gray-200 w-10 h-10 rounded-full' onClick={onClose}>\n          <FontAwesomeIcon icon={faX}/>\n        </button>\n      </div>\n\n        {/* Table or loading spinner */}\n        {loading ? (\n          <div className=\"flex justify-center items-center\">\n            <Spin size=\"large\" />\n          </div>\n        ) : (\n          <Table\n            columns={columns}\n            dataSource={scheduleData?.scheduleList} // Access scheduleList from scheduleData\n            rowKey=\"bookingDate\" // Use bookingDate as the row key (or any other unique identifier)\n            pagination={false} // Disable pagination if you don't need it\n            bordered\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { WithDefaultLayout } from '../../components/DefautLayout';\nimport HeaderPage from '@/components/HeaderPage'; // Assuming you have a Header component\nimport { Page } from '@/types/Page';\nimport { BackendApiUrl } from '@/functions/BackendApiUrl';\nimport { useSwrFetcherWithAccessToken } from '@/functions/useSwrFetcherWithAccessToken';\nimport { BuildingResponse } from '@/interface/Buildings';\nimport { BuildingList } from '@/interface/Buildings';\nimport { RoomList } from '@/interface/Rooms';\nimport useSWR from 'swr';\nimport { useSession } from 'next-auth/react';\nimport ScheduleModal from '@/components/Modals/BookingsModals/ScheduleModal'; // Import your modal component\nimport { DatePicker, Select } from 'antd';\nimport dayjs from 'dayjs';\nimport isBetween from 'dayjs/plugin/isBetween';\n\n// Extend dayjs with the isBetween plugin\ndayjs.extend(isBetween);\n\ninterface BlockerInfo {\n  blockerId: number;\n  blockerName: string;\n  startDate: string;\n  endDate: string;\n  isActive: boolean;\n}\n\ninterface BlockerList {\n  blockerLists: BlockerInfo[];\n  totalData: number;\n}\n\n\nconst RoomPage: Page = () => {\n  const router = useRouter();\n  const { id } = router.query;\n  const session = useSession();\n  const swrFetcher = useSwrFetcherWithAccessToken();\n\n  const [buildings, setBuildings] = useState<BuildingList[] | undefined>([]);\n  const [selectedBuilding, setSelectedBuilding] = useState('');\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [isAvailableSelected, setIsAvailableSelected] = useState(true);\n  const [rooms, setRooms] = useState<RoomList[]>([]);\n\n  const { data: blockerList } = useSWR<BlockerList>(BackendApiUrl.getBlockerList, swrFetcher);\n\n\n  // Modal state for opening/closing the ScheduleModal\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedRoomId, setSelectedRoomId] = useState<string | undefined>(undefined);\n  const [selectedRoomName, setSelectedRoomName] = useState<string | undefined>(undefined); // Add state for room name\n\n  const { data: response } = useSWR<BuildingResponse>(\n    `${BackendApiUrl.getBuilding}`,\n    swrFetcher\n  );\n\n  useEffect(() => {\n    if (response) {\n      setBuildings(response.buildingList);\n      if (id) {\n        setSelectedBuilding(id.toString()); // Set buildingId from the query string\n      }\n    }\n  }, [response, id]);\n\n  useEffect(() => {\n    const fetchRooms = async () => {\n      const userRole = session.data?.user?.role; // Get user role from session\n      const response = await swrFetcher(\n        `${BackendApiUrl.getRoom}?BuildingId=${id}&UserRole=${userRole}&IsAvailable=${isAvailableSelected}&DateToBook=${selectedDate.toISOString().split('T')[0]}`\n      );\n      setRooms(response.roomList);\n    };\n\n    if (id && selectedDate && !isAvailableSelected || isAvailableSelected) {\n      fetchRooms();\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id, selectedDate, isAvailableSelected, session.data?.user?.role]);\n\n  const handleBuildingChange = (selectedId: string) => {\n    setSelectedBuilding(selectedId);\n    router.push(`/room/${selectedId}`);\n  };\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleMenuChange = (isAvailable) => {\n    setIsAvailableSelected(isAvailable);\n  };\n\n  const handleBookClicked = (roomId) => {\n    const formattedDate = selectedDate.toISOString().split('T')[0];\n    router.push(`/roomDetail/${roomId}?date=${formattedDate}`);\n  };\n\n  const handleOpenModal = (roomId, roomName) => {\n    setSelectedRoomId(roomId); // Set selected room ID\n    setSelectedRoomName(roomName);\n    setIsModalOpen(true); // Open the modal\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false); // Close the modal\n  };\n\n  const isDateBlocked = (currentDate) => {\n    if (!blockerList || !blockerList.blockerLists) return false;\n  \n    // Ensure currentDate is a dayjs object\n    const currentDay = dayjs(currentDate);\n  \n    return blockerList.blockerLists.some((blocker) => {\n      // Convert the blocker start and end dates to dayjs objects\n      const startDate = dayjs(blocker.startDate);\n      const endDate = dayjs(blocker.endDate);\n  \n      // Check if the current date is between the blocker start and end dates (inclusive)\n      return currentDay.isBetween(startDate, endDate, 'day', '[]');\n    });\n  };\n  \n\n  return (\n    <div>\n      <HeaderPage />\n      <div className=\"flex flex-col\">\n        <div className=\"w-full flex justify-center mt-8 gap-4\">\n          <Select\n            className=\"w-3/5\"\n            value={selectedBuilding} // Manage the selected value through state\n            onChange={handleBuildingChange} // Update selectedSubject when changed\n            options={buildings?.map((building) => ({\n              label: building.name,\n              value: building.buildingId,\n            }))}\n          />\n          <DatePicker\n            value={selectedDate ? dayjs(selectedDate) : undefined}\n            onChange={handleDateChange}\n            className=\"border border-gray-300 rounded-md w-2/5\"\n            disabledDate={(currentDate) => \n              currentDate.isBefore(dayjs().startOf('day'), 'day') || isDateBlocked(currentDate)\n            }\n          />\n        </div>\n\n        <div className=\"flex mt-4 mb-6\">\n          {/* Container for menu buttons */}\n          <button\n            className={`rounded-md text-white text-xl ${isAvailableSelected ? 'underline' : ''} ${isAvailableSelected ? 'underline-offset-8' : ''}`}\n            onClick={() => handleMenuChange(true)}\n          >\n            Available\n          </button>\n          <button\n            className={`rounded-md ml-8 text-white text-xl ${!isAvailableSelected ? 'underline' : ''} ${!isAvailableSelected ? 'underline-offset-8' : ''}`}\n            onClick={() => handleMenuChange(false)}\n          >\n            Booked\n          </button>\n        </div>\n\n        <div className=\"mt-4 grid grid-cols-5 gap-5 overflow-y-auto h-[480px]\">\n          {rooms.map((room) => (\n            <div key={room.roomId} className=\"flex flex-col bg-white rounded-md p-4 h-[290px]\">\n              <div>\n                <img\n                  src={room.minioUrl}\n                  alt={room.name}\n                  className=\"w-full h-40 object-cover rounded-md\"\n                />\n                <div className=\"mb-9\">\n                  <h2 className=\"text-black text-base mt-2 font-semibold\">{room.name}</h2>\n                </div>\n                <div className=\"flex mt-4 justify-end\">\n                  {/* Conditionally apply styles to the \"Book\" button */}\n                  <button\n                    className={`rounded-full text-white w-[65px] py-1 mr-2 ${\n                      !isAvailableSelected ? 'bg-gray-400 cursor-not-allowed' : 'bg-purple-950'\n                    }`}\n                    onClick={() => (isAvailableSelected ? handleBookClicked(room.roomId) : null)}\n                    disabled={!isAvailableSelected}\n                  >\n                    Book\n                  </button>\n                  <button\n                    className=\"rounded-full bg-purple-950 w-[65px] text-white px-4 py-1\"\n                    onClick={() => handleOpenModal(room.roomId, room.name)}\n                  >\n                    Info\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Modal component to show room schedule */}\n      {isModalOpen && selectedRoomId && (\n        <ScheduleModal\n          isOpen={isModalOpen}\n          onClose={handleCloseModal}\n          roomId={selectedRoomId} // Pass the roomId to fetch its schedule\n          roomName={selectedRoomName}\n        />\n      )}\n    </div>\n  );\n};\n\nRoomPage.layout = WithDefaultLayout;\nexport default RoomPage;\n"],"names":["module","exports","e","i","t","prototype","isBetween","s","f","n","o","r","u","isAfter","isBefore","window","__NEXT_P","push","__webpack_require__","HeaderPage","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","div","className","jsx","Image","src","alt","width","height","p","__webpack_exports__","Modal","isOpen","onClose","roomId","roomName","param","fetchGET","useFetchWithAccessToken","scheduleData","setScheduleData","useState","undefined","loading","setLoading","useEffect","fetchRoomSchedule","response","BackendApiUrl","concat","console","log","data","scheduleList","message","error","h2","button","onClick","FontAwesomeIcon","icon","faX","Spin","size","Table","columns","title","dataIndex","key","dataSource","rowKey","pagination","bordered","dayjs","RoomPage","session","router","useRouter","id","query","useSession","swrFetcher","useSwrFetcherWithAccessToken","buildings","setBuildings","selectedBuilding","setSelectedBuilding","selectedDate","setSelectedDate","Date","isAvailableSelected","setIsAvailableSelected","rooms","setRooms","blockerList","useSWR","isModalOpen","setIsModalOpen","selectedRoomId","setSelectedRoomId","selectedRoomName","setSelectedRoomName","buildingList","toString","fetchRooms","userRole","user","role","toISOString","split","roomList","handleBuildingChange","selectedId","handleDateChange","date","handleMenuChange","isAvailable","handleBookClicked","formattedDate","handleOpenModal","handleCloseModal","isDateBlocked","blockerLists","currentDay","currentDate","some","startDate","blocker","endDate","Select","value","onChange","options","map","label","building","name","buildingId","DatePicker","disabledDate","startOf","img","room","minioUrl","disabled","ScheduleModal","layout","WithDefaultLayout"],"sourceRoot":""}