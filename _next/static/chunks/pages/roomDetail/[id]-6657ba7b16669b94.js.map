{"version":3,"file":"static/chunks/pages/roomDetail/[id]-6657ba7b16669b94.js","mappings":"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","sources":["webpack://_N_E/?6354","webpack://_N_E/./components/Modals/BookingsModals/ScheduleModal.tsx","webpack://_N_E/./pages/roomDetail/[id].tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/roomDetail/[id]\",\n      function () {\n        return require(\"private-next-pages/roomDetail/[id].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/roomDetail/[id]\"])\n      });\n    }\n  ","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react';\nimport { Table, Spin, message } from 'antd';\nimport { useFetchWithAccessToken } from '@/functions/useFetchWithAccessToken'; // Import the fetch hook\nimport { BackendApiUrl } from '@/functions/BackendApiUrl'; // Assuming this is where your API URLs are\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faX } from '@fortawesome/free-solid-svg-icons';\n\ninterface ModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  roomId: string | string[] | undefined ;\n  roomName: string | undefined; // Pass roomId to fetch the schedule\n}\n\n// Define the structure of the schedule item\ninterface Schedule {\n  bookingDate: string;\n  bookingTimeStart: string;\n  bookingTimeEnd: string;\n  eventName: string;\n  picName: string;\n}\n\n// Define the structure of the schedule list (wrapped around Schedule array)\ninterface ScheduleList {\n  scheduleList: Schedule[];\n}\n\nconst Modal: React.FC<ModalProps> = ({ isOpen, onClose, roomId, roomName }) => {\n  const { fetchGET } = useFetchWithAccessToken(); // Hook to fetch data\n  const [scheduleData, setScheduleData] = useState<ScheduleList | undefined>(undefined); // State to store schedule data\n  const [loading, setLoading] = useState<boolean>(false); // Loading state\n\n  // Fetch room schedule when modal opens\n  useEffect(() => {\n    if (isOpen) {\n      fetchRoomSchedule();\n    }\n  }, [isOpen, roomId]);\n\n  // Function to fetch room schedule with try-catch for error handling\n  const fetchRoomSchedule = async () => {\n    setLoading(true); // Set loading to true when fetching\n    try {\n      // Type the response explicitly as ScheduleList\n      const response = await fetchGET<ScheduleList>(`${BackendApiUrl.getRoomSchedule}?id=${roomId}`);\n\n      console.log(response.data)\n      \n      // Ensure that we only set the scheduleList if it's valid\n      if (response && response.data?.scheduleList) {\n        setScheduleData(response.data);\n      } else {\n        message.error('No schedule data available.');\n      }\n    } catch (error: unknown) {\n      // Handle unknown error type\n      console.error('Error fetching schedule data:', error);\n      message.error('Failed to fetch room schedule. Please try again later.');\n    } finally {\n      setLoading(false); // Set loading to false when fetching is done\n    }\n  };\n\n  if (!isOpen) return null; // Don't render the modal if it's closed\n\n  // Define columns for Ant Design Table\n  const columns = [\n    {\n      title: 'Date',\n      dataIndex: 'bookingDate',\n      key: 'bookingDate'\n    },\n    {\n      title: 'Start Time',\n      dataIndex: 'bookingTimeStart',\n      key: 'bookingTimeStart',\n    },\n    {\n      title: 'End Time',\n      dataIndex: 'bookingTimeEnd',\n      key: 'bookingTimeEnd',\n    },\n    {\n      title: 'Event Name',\n      dataIndex: 'eventName',\n      key: 'eventName',\n    },\n    {\n      title: 'PIC Name',\n      dataIndex: 'picName',\n      key: 'picName',\n    },\n  ];\n\n  return (\n    <div className=\"fixed inset-0 flex justify-center items-center bg-black bg-opacity-50 z-50\">\n      <div className=\"bg-white p-8 rounded-lg w-3/5\">\n      <div className='flex justify-between items-center mb-4'>\n        <h2 className=\"text-2xl font-bold\">{roomName}</h2>\n        <button className='bg-gray-200 w-10 h-10 rounded-full' onClick={onClose}>\n          <FontAwesomeIcon icon={faX}/>\n        </button>\n      </div>\n\n        {/* Table or loading spinner */}\n        {loading ? (\n          <div className=\"flex justify-center items-center\">\n            <Spin size=\"large\" />\n          </div>\n        ) : (\n          <Table\n            columns={columns}\n            dataSource={scheduleData?.scheduleList} // Access scheduleList from scheduleData\n            rowKey=\"bookingDate\" // Use bookingDate as the row key (or any other unique identifier)\n            pagination={false} // Disable pagination if you don't need it\n            bordered\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { useSwrFetcherWithAccessToken } from '@/functions/useSwrFetcherWithAccessToken';\nimport { WithDefaultLayout } from '../../components/DefautLayout';\nimport { Page } from '@/types/Page';\nimport { BackendApiUrl } from '@/functions/BackendApiUrl';\nimport useSWR from 'swr';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\nimport ScheduleModal from '@/components/Modals/BookingsModals/ScheduleModal';\n\nexport interface RoomDetail {\n  roomId: number;\n  name: string;\n  description: string;\n  minioUrl: string;\n  capacity: number;\n  roomType: string;\n  // Add other properties as needed based on your backend API response\n}\n\nconst RoomDetailPage: Page = () => {\n  const router = useRouter();\n  const { id } = router.query;\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const swrFetcher = useSwrFetcherWithAccessToken();\n\n  const { data: roomDetail, error } = useSWR<RoomDetail>(\n    `${BackendApiUrl.getRoomDetail}?id=${id}`,\n    swrFetcher\n  );\n\n  if (error) {\n    return <div>Error fetching room details.</div>;\n  }\n\n  if (!roomDetail) {\n    return <div>Loading room details...</div>;\n  }\n\n  const handleBackButton = () =>{\n    router.back();\n  }\n  const handleOpenModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n  const handleBookClicked = (roomId) => {\n    const selectedDate = router.query['date'];\n    router.push(`/booking/${roomId}?date=${selectedDate}`)\n};\n\n  return (\n      <div className='mt-4'>\n        <button className=\"bg-white rounded-full w-10 h-10 flex items-center justify-center\" onClick={()=> handleBackButton()}>\n          <FontAwesomeIcon icon={faChevronLeft} className=\"inline\" />\n        </button>\n        <div className='flex flex-col items-center'>\n        <div className='mt-6 flex gap-4 h-[580px] w-full'>\n          <div className='w-2/5 flex flex-col gap-4'>\n            <div className='h-[150px]'>\n              <div className='bg-white rounded-lg h-full flex items-center justify-center'>\n                <p className='text-3xl font-bold'>{roomDetail.name}</p>\n              </div>\n            </div>\n            <div className='h-[300px]'>\n            <div className='bg-white rounded-lg h-full flex flex-col p-4'>\n            <div>\n              <p className='mb-3 text-lg font-semibold'>Description</p>\n              <p className='text-lg'>{roomDetail.description}</p>\n            </div>\n          </div>\n        </div>\n        <div className='h-[130px]'>\n          <div className='bg-white rounded-lg h-full flex flex-col justify-center items-center'>\n            <div className='flex flex-col items-center'>\n              <p className='mb-3 text-lg font-semibold'>Room Info</p>\n                <button\n                  className=\"rounded-full bg-purple-950 w-[65px] text-white px-4 py-1\"\n                  onClick={handleOpenModal}\n                >\n                  Info\n                </button>\n                <ScheduleModal\n                  isOpen={isModalOpen}\n                  onClose={handleCloseModal}\n                  roomId={id} \n                  roomName={roomDetail.name}\n                />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='w-3/5 flex flex-col gap-4'>\n        <div className='h-[350px]'>\n          <div className='bg-white h-full rounded-lg p-4'>\n            <img src={roomDetail.minioUrl} alt=\"\" className='w-full max-h-80 rounded-lg'/>\n          </div>\n        </div>\n        <div className='h-[230px]'>\n          <div className='grid grid-cols-2 gap-4 h-full'>\n            <div className='bg-white rounded-lg flex flex-col justify-center items-center'>\n              <div className='flex flex-col items-center'>\n                <p className='mb-3 text-lg font-semibold'>Room Type</p>\n                <p className='text-6xl font-extralight'>{roomDetail.roomType}</p>\n              </div>\n            </div>\n            <div className='bg-white rounded-lg flex flex-col justify-center items-center'>\n              <div className='flex flex-col items-center'>\n                <p className='mb-3 text-lg font-semibold'>Capacity</p>\n                <p className='text-6xl font-extralight'>{roomDetail.capacity}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div className='mt-4'>\n      <button className='bg-purple-950 py-3 px-14 text-xl font-bold text-white rounded-full' onClick={()=>handleBookClicked(id)}>Book</button> \n    </div>\n    </div>\n  </div>\n  );\n};\n\nRoomDetailPage.layout = WithDefaultLayout;\nexport default RoomDetailPage;\n\n"],"names":["window","__NEXT_P","push","__webpack_require__","Modal","isOpen","onClose","roomId","roomName","param","fetchGET","useFetchWithAccessToken","scheduleData","setScheduleData","useState","undefined","loading","setLoading","useEffect","fetchRoomSchedule","response","BackendApiUrl","concat","console","log","data","scheduleList","message","error","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","div","className","jsxs","h2","button","onClick","FontAwesomeIcon","icon","faX","Spin","size","Table","columns","title","dataIndex","key","dataSource","rowKey","pagination","bordered","__webpack_exports__","RoomDetailPage","router","useRouter","id","query","isModalOpen","setIsModalOpen","swrFetcher","useSwrFetcherWithAccessToken","roomDetail","useSWR","handleBackButton","back","handleOpenModal","handleCloseModal","handleBookClicked","selectedDate","faChevronLeft","p","name","description","ScheduleModal","img","src","minioUrl","alt","roomType","capacity","layout","WithDefaultLayout"],"sourceRoot":""}