{"version":3,"file":"static/chunks/pages/manage-c49bccb68b1edf9e.js","mappings":"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","sources":["webpack://_N_E/?6517","webpack://_N_E/./components/Modals/ManageModals/ManageBuildingModals/DeleteBuildingConfirm.tsx","webpack://_N_E/./components/Modals/ManageModals/ManageBuildingModals/DeleteBuildingSuccess.tsx","webpack://_N_E/./components/Modals/ManageModals/ManageRoomModals/DeleteRoomConfirm.tsx","webpack://_N_E/./components/Modals/ManageModals/ManageRoomModals/DeleteRoomSuccess.tsx","webpack://_N_E/./components/Modals/ManageModals/ManageGroupModals/DeleteGroupConfirm.tsx","webpack://_N_E/./components/Modals/ManageModals/ManageGroupModals/DeleteGroupSuccess.tsx","webpack://_N_E/./pages/manage/index.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/manage\",\n      function () {\n        return require(\"private-next-pages/manage/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/manage\"])\n      });\n    }\n  ","// components/ConfirmationModal.tsx\nimport React from 'react';\n\ninterface ConfirmationModalProps {\n  visible: boolean;\n  onConfirm: () => void;\n  onCancel: () => void;\n}\n\nconst DeleteConfirmationModal: React.FC<ConfirmationModalProps> = ({\n  visible,\n  onConfirm,\n  onCancel,\n}) => {\n  return (\n    <div className={`fixed inset-0 flex flex-col justify-center items-center bg-black bg-opacity-50 z-auto ${visible ? '' : 'hidden'}`}>\n      <div className=\"bg-purple-950 p-4 absolute top-32 rounded-full border-white border-4\">\n        <img src=\"/Assets/images/are-you-sure.png\" alt=\"Are you sure?\" className=\"w-[200px] rounded-full\" />\n      </div>\n      <div className=\"bg-white p-4 rounded-lg w-2/5 h-2/5\">\n        <div className=\"h-full\">\n          <div className=\"h-2/3 flex flex-col justify-end\">\n            <div className=\"flex flex-col items-center\">\n              <h1 className=\"text-2xl font-bold\">Are you sure you want to delete this building?</h1>\n              <h4 className=\"text-center\">This action cannot be undone.</h4>\n            </div>\n          </div>\n          <div className=\"h-1/3 flex items-center justify-center\">\n            <div className=\"flex gap-4\">\n              <button\n                className=\"bg-purple-950 h-[50px] w-[150px] rounded-full text-white text-lg font-semibold\"\n                onClick={onConfirm}\n              >\n                Yes, Delete\n              </button>\n              <button\n                className=\"bg-gray-200 h-[50px] w-[150px] rounded-full text-black text-lg font-semibold\"\n                onClick={onCancel}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DeleteConfirmationModal;\n","// components/SuccessModal.tsx\nimport React from 'react';\n\ninterface SuccessModalProps {\n  visible: boolean;\n  onConfirm: () => void;\n  isSuccess: boolean;\n  onCancel: () => void;\n}\n\nconst DeleteSuccessModal: React.FC<SuccessModalProps> = ({\n  visible,\n  onConfirm,\n  isSuccess,\n  onCancel,\n}) => {\n  return (\n    <div className={`fixed inset-0 flex flex-col justify-center items-center bg-black bg-opacity-50 z-auto ${visible ? '' : 'hidden'}`}>\n      <div className=\"bg-purple-950 p-4 absolute top-32 rounded-full border-white border-4\">\n        <img\n          src={isSuccess ? '/Assets/images/succeed.png' : '/Assets/images/person-sad.png'}\n          alt=\"Success or Error\"\n          className=\"w-[200px] rounded-full\"\n        />\n      </div>\n      <div className=\"bg-white p-4 rounded-lg w-2/5 h-2/5\">\n        <div className=\"h-full\">\n          <div className=\"h-2/3 flex flex-col justify-end\">\n            {isSuccess ? (\n              <div className=\"flex flex-col items-center px-8\">\n                <h1 className=\"text-2xl font-bold\">Building Deleted!</h1>\n                <h4 className=\"text-center\">\n                  The building has been successfully deleted from the system.\n                </h4>\n              </div>\n            ) : (\n              <div className=\"flex flex-col items-center\">\n                <h1 className=\"text-2xl font-bold\">Oh no...</h1>\n                <h4 className=\"text-center\">Something went wrong. Please try again later.</h4>\n              </div>\n            )}\n          </div>\n          <div className=\"h-1/3 flex items-center justify-center\">\n            <div className=\"flex gap-4\">\n              <button\n                className=\"bg-purple-950 h-[50px] w-[150px] rounded-full text-white text-lg font-semibold\"\n                onClick={isSuccess ? onConfirm : onCancel}\n              >\n                {isSuccess ? 'Okay, Great!' : 'Try Again'}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DeleteSuccessModal;\n","// components/ConfirmationModal.tsx\nimport React from 'react';\n\ninterface ConfirmationModalProps {\n  visible: boolean;\n  onConfirm: () => void;\n  onCancel: () => void;\n}\n\nconst DeleteRoomConfirmationModal: React.FC<ConfirmationModalProps> = ({\n  visible,\n  onConfirm,\n  onCancel,\n}) => {\n  return (\n    <div className={`fixed inset-0 flex flex-col justify-center items-center bg-black bg-opacity-50 z-auto ${visible ? '' : 'hidden'}`}>\n      <div className=\"bg-purple-950 p-4 absolute top-32 rounded-full border-white border-4\">\n        <img src=\"/Assets/images/are-you-sure.png\" alt=\"Are you sure?\" className=\"w-[200px] rounded-full\" />\n      </div>\n      <div className=\"bg-white p-4 rounded-lg w-2/5 h-2/5\">\n        <div className=\"h-full\">\n          <div className=\"h-2/3 flex flex-col justify-end\">\n            <div className=\"flex flex-col items-center\">\n              <h1 className=\"text-2xl font-bold\">Are you sure you want to delete this room?</h1>\n              <h4 className=\"text-center\">This action cannot be undone.</h4>\n            </div>\n          </div>\n          <div className=\"h-1/3 flex items-center justify-center\">\n            <div className=\"flex gap-4\">\n              <button\n                className=\"bg-purple-950 h-[50px] w-[150px] rounded-full text-white text-lg font-semibold\"\n                onClick={onConfirm}\n              >\n                Yes, Delete\n              </button>\n              <button\n                className=\"bg-gray-200 h-[50px] w-[150px] rounded-full text-black text-lg font-semibold\"\n                onClick={onCancel}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DeleteRoomConfirmationModal;\n","// components/SuccessModal.tsx\nimport React from 'react';\n\ninterface SuccessModalProps {\n  visible: boolean;\n  onConfirm: () => void;\n  isSuccess: boolean;\n  onCancel: () => void;\n}\n\nconst DeleteRoomSuccessModal: React.FC<SuccessModalProps> = ({\n  visible,\n  onConfirm,\n  isSuccess,\n  onCancel,\n}) => {\n  return (\n    <div className={`fixed inset-0 flex flex-col justify-center items-center bg-black bg-opacity-50 z-auto ${visible ? '' : 'hidden'}`}>\n      <div className=\"bg-purple-950 p-4 absolute top-32 rounded-full border-white border-4\">\n        <img\n          src={isSuccess ? '/Assets/images/succeed.png' : '/Assets/images/person-sad.png'}\n          alt=\"Success or Error\"\n          className=\"w-[200px] rounded-full\"\n        />\n      </div>\n      <div className=\"bg-white p-4 rounded-lg w-2/5 h-2/5\">\n        <div className=\"h-full\">\n          <div className=\"h-2/3 flex flex-col justify-end\">\n            {isSuccess ? (\n              <div className=\"flex flex-col items-center px-8\">\n                <h1 className=\"text-2xl font-bold\">Building Deleted!</h1>\n                <h4 className=\"text-center\">\n                  The room has been successfully deleted from the system.\n                </h4>\n              </div>\n            ) : (\n              <div className=\"flex flex-col items-center\">\n                <h1 className=\"text-2xl font-bold\">Oh no...</h1>\n                <h4 className=\"text-center\">Something went wrong. Please try again later.</h4>\n              </div>\n            )}\n          </div>\n          <div className=\"h-1/3 flex items-center justify-center\">\n            <div className=\"flex gap-4\">\n              <button\n                className=\"bg-purple-950 h-[50px] w-[150px] rounded-full text-white text-lg font-semibold\"\n                onClick={isSuccess ? onConfirm : onCancel}\n              >\n                {isSuccess ? 'Okay, Great!' : 'Try Again'}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DeleteRoomSuccessModal;\n","// components/ConfirmationModal.tsx\nimport React from 'react';\n\ninterface ConfirmationModalProps {\n  visible: boolean;\n  onConfirm: () => void;\n  onCancel: () => void;\n}\n\nconst DeleteGroupConfirmationModal: React.FC<ConfirmationModalProps> = ({\n  visible,\n  onConfirm,\n  onCancel,\n}) => {\n  return (\n    <div className={`fixed inset-0 flex flex-col justify-center items-center bg-black bg-opacity-50 z-auto ${visible ? '' : 'hidden'}`}>\n      <div className=\"bg-purple-950 p-4 absolute top-32 rounded-full border-white border-4\">\n        <img src=\"/Assets/images/are-you-sure.png\" alt=\"Are you sure?\" className=\"w-[200px] rounded-full\" />\n      </div>\n      <div className=\"bg-white p-4 rounded-lg w-2/5 h-2/5\">\n        <div className=\"h-full\">\n          <div className=\"h-2/3 flex flex-col justify-end\">\n            <div className=\"flex flex-col items-center\">\n              <h1 className=\"text-2xl font-bold\">Are you sure you want to delete this building?</h1>\n              <h4 className=\"text-center\">This action cannot be undone.</h4>\n            </div>\n          </div>\n          <div className=\"h-1/3 flex items-center justify-center\">\n            <div className=\"flex gap-4\">\n              <button\n                className=\"bg-purple-950 h-[50px] w-[150px] rounded-full text-white text-lg font-semibold\"\n                onClick={onConfirm}\n              >\n                Yes, Delete\n              </button>\n              <button\n                className=\"bg-gray-200 h-[50px] w-[150px] rounded-full text-black text-lg font-semibold\"\n                onClick={onCancel}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DeleteGroupConfirmationModal;\n","// components/SuccessModal.tsx\nimport React from 'react';\n\ninterface SuccessModalProps {\n  visible: boolean;\n  onConfirm: () => void;\n  isSuccess: boolean;\n  onCancel: () => void;\n}\n\nconst DeleteGroupSuccessModal: React.FC<SuccessModalProps> = ({\n  visible,\n  onConfirm,\n  isSuccess,\n  onCancel,\n}) => {\n  return (\n    <div className={`fixed inset-0 flex flex-col justify-center items-center bg-black bg-opacity-50 z-auto ${visible ? '' : 'hidden'}`}>\n      <div className=\"bg-purple-950 p-4 absolute top-32 rounded-full border-white border-4\">\n        <img\n          src={isSuccess ? '/Assets/images/succeed.png' : '/Assets/images/person-sad.png'}\n          alt=\"Success or Error\"\n          className=\"w-[200px] rounded-full\"\n        />\n      </div>\n      <div className=\"bg-white p-4 rounded-lg w-2/5 h-2/5\">\n        <div className=\"h-full\">\n          <div className=\"h-2/3 flex flex-col justify-end\">\n            {isSuccess ? (\n              <div className=\"flex flex-col items-center px-8\">\n                <h1 className=\"text-2xl font-bold\">Building Deleted!</h1>\n                <h4 className=\"text-center\">\n                  The building has been successfully deleted from the system.\n                </h4>\n              </div>\n            ) : (\n              <div className=\"flex flex-col items-center\">\n                <h1 className=\"text-2xl font-bold\">Oh no...</h1>\n                <h4 className=\"text-center\">Something went wrong. Please try again later.</h4>\n              </div>\n            )}\n          </div>\n          <div className=\"h-1/3 flex items-center justify-center\">\n            <div className=\"flex gap-4\">\n              <button\n                className=\"bg-purple-950 h-[50px] w-[150px] rounded-full text-white text-lg font-semibold\"\n                onClick={isSuccess ? onConfirm : onCancel}\n              >\n                {isSuccess ? 'Okay, Great!' : 'Try Again'}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DeleteGroupSuccessModal;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { WithDefaultLayout } from '../../components/DefautLayout';\nimport { Button, Collapse, Input, Select, Table } from 'antd';\nimport { Page } from '@/types/Page';\nimport { BackendApiUrl } from '@/functions/BackendApiUrl';\nimport { useSwrFetcherWithAccessToken } from '@/functions/useSwrFetcherWithAccessToken';\nimport useSWR from 'swr';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPen, faPlus, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { useFetchWithAccessToken } from '@/functions/useFetchWithAccessToken';\nimport DeleteConfirmationModal from '@/components/Modals/ManageModals/ManageBuildingModals/DeleteBuildingConfirm';\nimport DeleteSuccessModal from '@/components/Modals/ManageModals/ManageBuildingModals/DeleteBuildingSuccess';\nimport DeleteRoomConfirmationModal from '@/components/Modals/ManageModals/ManageRoomModals/DeleteRoomConfirm';\nimport DeleteRoomSuccessModal from '@/components/Modals/ManageModals/ManageRoomModals/DeleteRoomSuccess';\nimport DeleteGroupConfirmationModal from '@/components/Modals/ManageModals/ManageGroupModals/DeleteGroupConfirm';\nimport DeleteGroupSuccessModal from '@/components/Modals/ManageModals/ManageGroupModals/DeleteGroupSuccess';\nimport { useDebounce } from 'use-debounce';\nimport { User } from 'next-auth';\nimport { useSession } from 'next-auth/react';\n\nconst { Panel } = Collapse;\n\nexport interface BuildingResponse {\n  buildingList: BuildingList[],\n  totalData: number,\n}\n\nexport interface BuildingList {\n  buildingId: number,\n  createdAt: string,\n  createdBy: string,\n  minioUrl: string,\n  name: string,\n  updatedAt: string,\n  updatedBy: string,\n}\n\nexport interface RoomResponse{\n    roomList: AllRoomList[];\n    totalData: number;\n}\n\nexport interface AllRoomList{\n    roomId: number;\n    name: string;\n    roomType: string;\n    building: string;\n    buildingId: number;\n    capacity: number;\n    group: string\n}\ninterface RoleList{\n  roleId: string;\n  roleName: string;\n  displayName: string;\n}\n\ninterface UserRole{\n  userId: string;\n  name: string;\n  userRoles: RoleList[];\n}\n\ninterface UserRolesList{\n  userWithRoles: UserRole[];\n  totaldata: number;\n}\n\ninterface Group{\n  id: number;\n  name: string;\n}\n\ninterface RoomGroups{\n  roomGroups: Group[];\n  totalData: number;\n}\n\ninterface SessionInfo{\n  sessionId: number;\n  sessionName: string;\n}\n\ninterface ManageBooking{\n  bookingId: string;\n  roomId: number;\n  roomName: string; \n  bookingDate: string;\n  statusId: number;\n  statusName: string;\n  userName: string;\n  buildingId: number;\n  bookingDescription: string;\n  manageSessions: SessionInfo[];\n}\n\ninterface BookingData{\n  manageBookings: ManageBooking[];\n  totaldata: number;\n}\n\nconst ManagePage: Page = () => {\n  const router = useRouter();\n  const { data: session } = useSession();\n  const user = session?.user as User;\n  const userRole = user?.role?.[0];\n  const { data: buildingData, mutate } = useSWR<BuildingResponse>(BackendApiUrl.getBuilding, useSwrFetcherWithAccessToken());\n  const { data: roomList } = useSWR<RoomResponse>(BackendApiUrl.getAllRoom, useSwrFetcherWithAccessToken());\n  const [searchTerm, setSearchTerm] = useState<string>('');  // State to store the search term\n  const [bookSearchTerm, setBookSearchTerm] = useState<string>('');  // State to store the search term\n  const [filteredUserRoles, setFilteredUserRoles] = useState<UserRole[]>([]);  // Filtered roles data\n  // Fetching the data initially\n  const { data: userRoles } = useSWR<UserRolesList>(\n    BackendApiUrl.getUserRoles, \n    useSwrFetcherWithAccessToken()\n  );\n  const [debouncedSearchTerm] = useDebounce(searchTerm, 500);\n\n  const { data: roomGroup } = useSWR<RoomGroups>(BackendApiUrl.getRoomGroup, useSwrFetcherWithAccessToken());\n  const [, setIsDeleting] = useState(false);\n  const [, setIsDeletingGroup] = useState(false);\n  const [, setIsDeletingRoom] = useState(false);\n  const [currentBuildingId, setCurrentBuildingId] = useState<number>(0);\n  const [currentRoomId, setCurrentRoomId] = useState<number>(0);\n  const [currentGroupId, setCurrentGroupId] = useState<number>(0);\n  const [isSuccessModalVisible, setSuccessModalVisible] = useState(false);\n  const [isRoomSuccessModalVisible, setRoomSuccessModalVisible] = useState(false);\n  const [isGroupSuccessModalVisible, setGroupSuccessModalVisible] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [isSuccessGroup, setIsSuccessGroup] = useState(false);\n  const [isSuccessRoom, setIsSuccessRoom] = useState(false);\n  const [isConfirmModalVisible, setConfirmModalVisible] = useState(false);  // The id of the building being deleted\n  const [isRoomConfirmModalVisible, setRoomConfirmModalVisible] = useState(false);\n  const [isGroupConfirmModalVisible, setGroupConfirmModalVisible] = useState(false);\n  \n  const [selectedBuildingId, setSelectedBuildingId] = useState<number | null>(null);\n  const [selectedRoomId, setSelectedRoomId] = useState<number | null>(null);\n\n  const getSWRUrl = () => {\n    let url = `${BackendApiUrl.getAllBooking}`; // Base URL\n\n    // Add filters only if they are selected\n    if (selectedBuildingId || selectedRoomId) {\n      const queryParams: string[] = [];\n\n      if (selectedBuildingId) queryParams.push(`BuildingId=${selectedBuildingId}`);\n      if (selectedRoomId) queryParams.push(`RoomId=${selectedRoomId}`);\n\n      if (queryParams.length > 0) {\n        url += '?' + queryParams.join('&');\n      }\n    }\n\n    return url;\n  };\n\n const { data: manageBooking } = useSWR<BookingData>(getSWRUrl(), useSwrFetcherWithAccessToken());\n  \n\n  const { fetchDELETE } = useFetchWithAccessToken();\n\n  // Delete building function\n  const handleDeleteBuilding = async () => {\n    setIsDeleting(true);\n    try {\n      await fetchDELETE(`${BackendApiUrl.deleteBuilding}/${currentBuildingId}`);\n      setIsSuccess(true);\n      mutate();\n    } catch (error) {\n      setIsSuccess(false);\n    } finally {\n      setIsDeleting(false);\n      setSuccessModalVisible(true);\n      setConfirmModalVisible(false);\n      router.reload();\n    }\n  };\n\n  const handleDeleteGroup = async () => {\n    setIsDeleting(true);\n    try {\n      await fetchDELETE(`${BackendApiUrl.deleteGroup}/${currentGroupId}`);\n      setIsSuccessGroup(true);\n      mutate();\n    } catch (error) {\n      setIsSuccessGroup(false);\n    } finally {\n      setIsDeletingGroup(false);\n      setGroupSuccessModalVisible(true);\n      setGroupConfirmModalVisible(false);\n    }\n  };\n\n\n  // Confirm delete modal\n  const showDeleteConfirm = (buildingId: number) => {\n    setCurrentBuildingId(buildingId);\n    setConfirmModalVisible(true);\n  };\n\n  const handleDeleteRoom = async () => {\n    setIsDeletingRoom(true);\n    try {\n      await fetchDELETE(`${BackendApiUrl.deleteRoom}/${currentRoomId}`);\n      setIsSuccessRoom(true);\n      mutate();\n    } catch (error) {\n      setIsSuccessRoom(false);\n    } finally {\n      setIsDeletingRoom(false);\n      setRoomSuccessModalVisible(true);\n      setRoomConfirmModalVisible(false);\n      router.reload();\n    }\n  };\n  // Confirm delete modal\n  const showDeleteGroupConfirm = (groupId: number) => {\n    setCurrentGroupId(groupId);\n    setGroupConfirmModalVisible(true);\n  };\n\n  const showDeleteRoomConfirm = (roomId: number) => {\n    setCurrentRoomId(roomId);\n    setRoomConfirmModalVisible(true);\n  };\n\n  const closeSuccessModal = () => {\n    setSuccessModalVisible(false);\n  };\n\n  const closeRoomSuccessModal = () => {\n    setRoomSuccessModalVisible(false);\n  };\n  const closeGroupSuccessModal = () => {\n    setGroupSuccessModalVisible(false);\n  };\n\n  const handleBuildingChange = (value: number) => {\n    setSelectedBuildingId(value);\n    setSelectedRoomId(null); // Clear room filter when building changes\n  };\n  \n  // Select input for room\n  const handleRoomChange = (value: number) => {\n    setSelectedRoomId(value);\n  };\n  \n  // Search handler\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setBookSearchTerm(e.target.value);\n  };\n\n  const resetFilters = () => {\n    setSelectedBuildingId(null);\n    setSelectedRoomId(null);\n    setBookSearchTerm('');\n  };\n  \n  \n\n  // Table columns\n  const tableData = buildingData?.buildingList.map((building, index) => ({\n    key: building.buildingId,  // Ensure the key is set to buildingId\n    name: building.name,\n    buildingId: building.buildingId,  // Add buildingId directly to the data\n    no: index + 1,\n    action: 'View',\n  }));\n  \n  const columns = [\n    {\n      title: 'No.',\n      dataIndex: 'no',\n      key: 'no',\n      render: (text: string, record: any, index: number) => index + 1, // Show row number\n    },\n    {\n      title: 'Building Name',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: 'Action',\n      dataIndex: 'id',\n      key: 'id',\n      render: (text: string, record: any) => (\n        <div className='flex gap-4'>\n          <button className='w-8 h-8 bg-purple-950 text-white rounded-full' onClick={() => router.push(`/manage/manageBuilding/${record.buildingId}`)}>\n            <FontAwesomeIcon icon={faPen} />\n          </button>\n          <button\n            className='w-8 h-8 bg-red-600 text-white rounded-full'\n            onClick={() => {\n              // Now, it should log the buildingId correctly\n              showDeleteConfirm(record.buildingId)\n            }}\n          >\n            <FontAwesomeIcon icon={faTrash} />\n          </button>\n        </div>\n      ),\n    },\n  ];\n  \n  \n  useEffect(() => {\n    if (userRoles) {\n      // Filter the data based on the debounced search term\n      const filtered = userRoles.userWithRoles.filter(user =>\n        user.name.toLowerCase().includes(debouncedSearchTerm.toLowerCase())\n      );\n      setFilteredUserRoles(filtered);\n    }\n  }, [userRoles, debouncedSearchTerm]);\n\n  const userRoleData = filteredUserRoles.map((user, index) => ({\n    key: user.userId,  // Ensure the key is set to userId\n    no: index + 1,  // Add row number\n    name: user.name,\n    userRoles: user.userRoles.map(role => ({\n        displayName: role.displayName,  // Show displayName\n        roleName: role.roleName,\n    })),\n    UserId: user.userId,\n    action: 'View', \n  }));\n\n  const RoleColumns = [\n    {\n      title: 'No.',\n      dataIndex: 'no',\n      key: 'no',\n    },\n    {\n      title: 'User Name',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: 'Roles',\n      dataIndex: 'userRoles',\n      key: 'userRoles',\n      render: (roles: { displayName: string, roleName: string }[]) => (\n        <div className=\"flex flex-wrap gap-2\">\n          {roles.map((role, index) => (\n            <span\n              key={index}\n              className={`px-2 py-1 rounded-full text-white ${getRoleClass(role.roleName)}`}\n            >\n              {role.displayName} {/* Show the displayName */}\n            </span>\n          ))}\n        </div>\n      ),\n    },\n    {\n      title: 'Action',\n      dataIndex: 'id',\n      key: 'id',\n      render: (text: string, record: any) => (\n        <div className='flex gap-4'>\n          <button className='w-8 h-8 bg-purple-950 text-white rounded-full' onClick={() => router.push(`/manage/manageRole/${record.UserId}`)}>\n            <FontAwesomeIcon icon={faPen} />\n          </button>\n        </div>\n      ),\n    },\n  ];\n\n  const getRoleClass = (role: string): string => {\n    const roleClasses: { [key: string]: string } = {\n      Staff: 'bg-red-500', // Red for Admin\n      StudentOrganization: 'bg-blue-500', // Blue for User\n      Lecturer: 'bg-green-500',\n      Student: 'bg-purple-500',\n      SLC: 'bg-pink-500',\n      SSO: 'bg-red-300',\n      LSC: 'bg-orange-500',\n      BM: 'bg-lime-400'\n    };\n    return roleClasses[role] || 'bg-gray-400'; // Default gray if role is not in the map\n  };\n\n  const RoomGroupData = roomGroup?.roomGroups.map((group, index) => ({\n    key: group.id,  // Ensure the key is set to buildingId\n    name: group.name,\n    GroupId: group.id,\n    no: index + 1,\n    action: 'View',\n  }));\n\n  const groupColumns = [\n    {\n      title: 'No.',\n      dataIndex: 'no',\n      key: 'no',\n      render: (text: string, record: any, index: number) => index + 1, // Show row number\n    },\n    {\n      title: 'Group Name',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: 'Action',\n      dataIndex: 'id',\n      key: 'id',\n      render: (text: string, record: any) => (\n        <div className='flex gap-4'>\n          <button className='w-8 h-8 bg-purple-950 text-white rounded-full' onClick={() => router.push(`/manage/manageGroup/${record.GroupId}`)}>\n            <FontAwesomeIcon icon={faPen} />\n          </button>\n          <button\n            className='w-8 h-8 bg-red-600 text-white rounded-full'\n            onClick={() => {\n              // Now, it should log the buildingId correctly\n              showDeleteGroupConfirm(record.GroupId)\n            }}\n          >\n            <FontAwesomeIcon icon={faTrash} />\n          </button>\n        </div>\n      ),\n    },\n  ];\n\n  const tableRoomData = roomList?.roomList.map((room, index) => ({\n    key: room.roomId,  // Ensure the key is set to buildingId\n    roomName: room.name,\n    roomType: room.roomType,\n    building: room.building,\n    capacity: room.capacity,\n    RoomId: room.roomId,  // Add buildingId directly to the data\n    group: room.group,\n    no: index + 1,\n    action: 'View',\n  }));\n\n  const roomColumns = [\n    {\n      title: 'No.',\n      dataIndex: 'no',\n      key: 'no',\n      render: (text: string, record: any, index: number) => index + 1, // Show row number\n    },\n    {\n      title: 'Room Name',\n      dataIndex: 'roomName',\n      key: 'roomName',\n    },\n    {\n        title: 'Room Type',\n        dataIndex: 'roomType',\n        key: 'roomType',\n    },\n    {\n        title: 'Building',\n        dataIndex: 'building',\n        key: 'building',\n      },\n      {\n        title: 'Capacity',\n        dataIndex: 'capacity',\n        key: 'capacity',\n      },\n      {\n        title: 'Group',\n        dataIndex: 'group',\n        key: 'group',\n      },\n    {\n      title: 'Action',\n      dataIndex: 'id',\n      key: 'id',\n      render: (text: string, record: any) => (\n        <div className='flex gap-4'>\n          <button className='w-8 h-8 bg-purple-950 text-white rounded-full' onClick={() => router.push(`/manage/manageRoom/${record.RoomId}`)}>\n            <FontAwesomeIcon icon={faPen} />\n          </button>\n          <button\n            className='w-8 h-8 bg-red-600 text-white rounded-full'\n            onClick={() => {\n              // Now, it should log the buildingId correctly\n              showDeleteRoomConfirm(record.RoomId)\n            }}\n          >\n            <FontAwesomeIcon icon={faTrash} />\n          </button>\n        </div>\n      ),\n    },\n  ];\n\n\n  const filteredBookingData = manageBooking?.manageBookings.filter((book) => {\n    return book.bookingDescription.toLowerCase().includes(bookSearchTerm.toLowerCase());\n  }).map((book, index) => ({\n    key: book.bookingId, // Ensure that each row has a unique key (BookingId)\n    roomId: book.roomId,\n    roomName: book.roomName,\n    bookingDescriptions: book.bookingDescription,\n    bookingDate: book.bookingDate,\n    status: book.statusName,\n    BookingId: book.bookingId, // Ensure you use the BookingId in your columns\n    no: index + 1,\n    action: 'View',\n    userName: book.userName,\n    buildingId: book.buildingId\n  }));\n  \n\n  const filteredRooms = selectedBuildingId\n  ? roomList?.roomList.filter(room => room.buildingId === selectedBuildingId)\n  : roomList?.roomList;\n\n  \n\n  const bookingColumns = [\n    {\n      title: 'No.',\n      dataIndex: 'no',\n      key: 'no',\n      render: (text: string, record: any, index: number) => index + 1, // Show row number\n    },\n    {\n      title: 'Event Name',\n      dataIndex: 'bookingDescriptions',\n      key: 'bookingDescriptions',\n    },\n    {\n        title: 'Room Name',\n        dataIndex: 'roomName',\n        key: 'roomName',\n    },\n    {\n        title: 'Booking Date',\n        dataIndex: 'bookingDate',\n        key: 'bookingDate',\n      },\n      {\n        title: 'Submitted By',\n        dataIndex: 'userName',\n        key: 'userName',\n      },\n      {\n        title: 'Status',\n        dataIndex: 'status',\n        key: 'status',\n        render: (text: string, record: any) => (\n          <div className='flex items-center'>\n            <div className='bg-green-500 w-4 h-4 rounded-full mr-4'></div>\n            <p>{record.status}</p>\n          </div>\n        )\n      },\n    {\n      title: 'Action',\n      dataIndex: 'id',\n      key: 'id',\n      render: (text: string, record: any) => (\n        <div className='flex gap-4'>\n          <button className='w-8 h-8 bg-purple-950 text-white rounded-full' onClick={() => router.push(`/manage/manageBooking/${record.BookingId}`)}>\n            <FontAwesomeIcon icon={faPen} />\n          </button>\n        </div>\n      ),\n    },\n  ];\n  \n\n  const items = [\n    {\n      key: '1',\n      label: 'Manage Rooms',\n      content: (\n        <Collapse accordion>\n          <Panel header=\"Manage Building\" key=\"1\">\n            <div className='flex flex-col gap-4'>\n              <div className='flex justify-end'>\n                <button\n                  className='bg-purple-950 w-[150px] py-2 rounded-full text-white'\n                  onClick={() => router.push('/manage/manageBuilding')}\n                >\n                  <FontAwesomeIcon icon={faPlus} className='font-light mr-4' />\n                  Add Building\n                </button>\n              </div>\n              <div>\n                <Table\n                  columns={columns}\n                  dataSource={tableData}\n                  pagination={false}\n                  rowKey=\"key\"\n                />\n              </div>\n            </div>\n          </Panel>\n          <Panel header=\"Manage Rooms\" key=\"2\">\n            <div className='flex flex-col gap-4'>\n            <div className='flex justify-end'>\n                <button\n                  className='bg-purple-950 w-[150px] py-2 rounded-full text-white'\n                  onClick={() => router.push('/manage/manageRoom')}\n                >\n                  <FontAwesomeIcon icon={faPlus} className='font-light mr-4' />\n                  Add Room\n                </button>\n              </div>\n            <Table\n                  columns={roomColumns}\n                  dataSource={tableRoomData}\n                  pagination={false}\n                  rowKey=\"key\"\n                  className='overflow-x-auto'\n                />\n            </div>\n          </Panel>\n          {userRole === 'SuperAdmin' && (\n            <Panel header=\"Manage Room Groups\" key=\"3\">\n              <div className='flex flex-col gap-4'>\n                <div className='flex justify-end'>\n                  <button\n                    className='bg-purple-950 w-[150px] py-2 rounded-full text-white'\n                    onClick={() => router.push('/manage/manageGroup')}\n                  >\n                    <FontAwesomeIcon icon={faPlus} className='font-light mr-4' />\n                    Add Group\n                  </button>\n                </div>\n                <Table\n                  columns={groupColumns}\n                  dataSource={RoomGroupData}\n                  pagination={false}\n                  rowKey=\"key\"\n                  className='overflow-x-auto'\n                />\n              </div>\n            </Panel>\n          )}\n        </Collapse>\n      ),\n    },\n    {\n      key: '2',\n      label: 'Manage Booking',\n      content: (\n        <div className='flex flex-col gap-4'>\n          <div className='flex gap-4'>\n            <Input\n            placeholder=\"Search by booking description\"\n            size=\"large\"\n            onChange={handleSearchChange}\n            value={bookSearchTerm}\n            />\n\n            <Select\n              placeholder=\"Select Building\"\n              onChange={handleBuildingChange}\n              value={selectedBuildingId}\n              className='rounded-full'\n              size='large'\n              >\n              {buildingData?.buildingList.map(building => (\n                <Select.Option key={building.buildingId} value={building.buildingId}>\n                  {building.name}\n                </Select.Option>\n              ))}\n            </Select>\n\n        {/* Room Filter */}\n            <Select\n              style={{ width: 200 }}\n              placeholder=\"Select Room\"\n              onChange={handleRoomChange}\n              value={selectedRoomId}\n              size='large'\n              >\n              {filteredRooms?.map(room => (\n                <Select.Option key={room.roomId} value={room.roomId}>\n                  {room.name}\n                </Select.Option>\n              ))}\n            </Select>\n\n        {/* Search Input */}\n          </div>\n            <div className='flex justify-end'>\n            <Button onClick={resetFilters} size='large' className='bg-purple-950 text-white rounded-full'>\n                Reset Filters\n            </Button>\n\n            </div>\n        <Table\n          dataSource={filteredBookingData}\n          columns={bookingColumns}\n          rowKey=\"key\"  // Ensures each row has a unique key\n          pagination={{ total: filteredBookingData?.length }}\n        />\n        </div>\n      ),\n    },\n    {\n      key: '3',\n      label: 'Manage Roles',\n      content: (\n        <div>\n          <div className=\"mb-4\">\n            <Input\n              placeholder=\"Search by user name\"\n              size=\"large\"\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className='w-full rounded-full'\n            />\n          </div>\n\n          <Table\n            dataSource={userRoleData}\n            columns={RoleColumns}\n            rowKey=\"key\"  // Ensures each row has a unique key\n            pagination={{ total: userRoles?.totaldata }}\n          />\n        </div>\n      ),\n    },\n  ];\n\n  const filteredItems = items.filter(section => {\n    if (typeof userRole !== 'string') {\n      return false;  // or return true based on your requirements\n    }\n  \n    switch (section.label) {\n      case 'Manage Roles':\n        return userRole === 'SuperAdmin';  // Only SuperAdmin can see Manage Roles\n      case 'Manage Booking':\n        return ['BM', 'LSC', 'SLC', 'SuperAdmin'].includes(userRole);  // BM, LSC, SLC, and SuperAdmin can see Manage Booking\n      case 'Manage Rooms':\n        return ['SuperAdmin', 'BM'].includes(userRole);  // SuperAdmin and BM can see Manage Rooms\n      default:\n        return true;  // Show all other sections (in case there's any new section added)\n    }\n  });\n  \n\n  return (\n    <div className='mt-3 h-[710px] overflow-y-auto'>\n     <img src=\"/Assets/images/manage.png\" alt=\"manage\" width={200} height={40} className=\"mt-16 mb-6\" />\n\n     <Collapse accordion>\n        {filteredItems.map(item => (\n          <Panel header={item.label} key={item.key} className='bg-[#EB8317]' style={{borderRadius: 7}}>\n            <div>{item.content}</div>\n          </Panel>\n        ))}\n      </Collapse>\n      <DeleteConfirmationModal\n        visible={isConfirmModalVisible}\n        onConfirm={handleDeleteBuilding}\n        onCancel={() => setConfirmModalVisible(false)}\n      />\n\n      {/* Success Modal */}\n      <DeleteSuccessModal\n        visible={isSuccessModalVisible}\n        isSuccess={isSuccess}\n        onConfirm={closeSuccessModal}\n        onCancel={closeSuccessModal}\n      />\n      <DeleteRoomConfirmationModal\n        visible={isRoomConfirmModalVisible}\n        onConfirm={handleDeleteRoom}\n        onCancel={() => setRoomConfirmModalVisible(false)}\n      />\n\n      {/* Success Modal */}\n      <DeleteRoomSuccessModal\n        visible={isRoomSuccessModalVisible}\n        isSuccess={isSuccessRoom}\n        onConfirm={closeRoomSuccessModal}\n        onCancel={closeRoomSuccessModal}\n      />\n      <DeleteGroupConfirmationModal\n        visible={isGroupConfirmModalVisible}\n        onConfirm={handleDeleteGroup}\n        onCancel={() => setGroupConfirmModalVisible(false)}\n      />\n\n      {/* Success Modal */}\n      <DeleteGroupSuccessModal\n        visible={isGroupSuccessModalVisible}\n        isSuccess={isSuccessGroup}\n        onConfirm={closeGroupSuccessModal}\n        onCancel={closeGroupSuccessModal}\n      />\n    </div>\n  );\n};\n\nManagePage.layout = WithDefaultLayout;\nexport default ManagePage;\n\n"],"names":["window","__NEXT_P","push","__webpack_require__","DeleteConfirmationModal","visible","onConfirm","onCancel","param","jsx_runtime","jsxs","div","className","concat","jsx","img","src","alt","h1","h4","button","onClick","DeleteSuccessModal","isSuccess","DeleteRoomConfirmationModal","DeleteRoomSuccessModal","DeleteGroupConfirmationModal","DeleteGroupSuccessModal","Panel","Collapse","ManagePage","user","router","useRouter","data","session","useSession","userRole","role","buildingData","mutate","useSWR","BackendApiUrl","useSwrFetcherWithAccessToken","roomList","searchTerm","setSearchTerm","useState","bookSearchTerm","setBookSearchTerm","filteredUserRoles","setFilteredUserRoles","userRoles","debouncedSearchTerm","useDebounce","roomGroup","setIsDeleting","setIsDeletingGroup","setIsDeletingRoom","currentBuildingId","setCurrentBuildingId","currentRoomId","setCurrentRoomId","currentGroupId","setCurrentGroupId","isSuccessModalVisible","setSuccessModalVisible","isRoomSuccessModalVisible","setRoomSuccessModalVisible","isGroupSuccessModalVisible","setGroupSuccessModalVisible","setIsSuccess","isSuccessGroup","setIsSuccessGroup","isSuccessRoom","setIsSuccessRoom","isConfirmModalVisible","setConfirmModalVisible","isRoomConfirmModalVisible","setRoomConfirmModalVisible","isGroupConfirmModalVisible","setGroupConfirmModalVisible","selectedBuildingId","setSelectedBuildingId","selectedRoomId","setSelectedRoomId","manageBooking","getSWRUrl","url","queryParams","length","join","fetchDELETE","useFetchWithAccessToken","handleDeleteBuilding","error","reload","handleDeleteGroup","showDeleteConfirm","buildingId","handleDeleteRoom","showDeleteGroupConfirm","groupId","showDeleteRoomConfirm","roomId","closeSuccessModal","closeRoomSuccessModal","closeGroupSuccessModal","handleBuildingChange","value","handleRoomChange","handleSearchChange","e","target","resetFilters","tableData","buildingList","map","building","index","key","name","no","action","useEffect","filtered","userWithRoles","filter","toLowerCase","includes","userRoleData","userId","displayName","roleName","UserId","getRoleClass","roleClasses","Staff","StudentOrganization","Lecturer","Student","SLC","SSO","LSC","BM","RoomGroupData","roomGroups","group","id","GroupId","tableRoomData","room","roomName","roomType","capacity","RoomId","filteredBookingData","manageBookings","book","bookingDescription","bookingId","bookingDescriptions","bookingDate","status","statusName","BookingId","userName","filteredRooms","items","label","content","accordion","header","FontAwesomeIcon","icon","faPlus","Table","columns","title","dataIndex","render","text","record","faPen","faTrash","dataSource","pagination","rowKey","Input","placeholder","size","onChange","Select","style","width","Button","p","total","roles","span","totaldata","filteredItems","section","height","item","borderRadius","layout","WithDefaultLayout","manage"],"sourceRoot":""}