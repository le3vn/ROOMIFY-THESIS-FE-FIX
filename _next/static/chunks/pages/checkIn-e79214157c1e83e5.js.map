{"version":3,"file":"static/chunks/pages/checkIn-e79214157c1e83e5.js","mappings":"oFACA,CAAAA,OAAAC,QAAA,CAAAD,OAAAC,QAAA,MAAAC,IAAA,EACA,WACA,WACA,OAAeC,EAAQ,KACvB,EACA,mJCKA,IAAMC,EAAoB,IAAM,CAC5B,IAAMC,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,IACfC,CAAAA,EAAAA,EAAAA,UAAAA,IACA,GAAM,CAACC,EAAYC,EAAc,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAAiB,IAC/C,CAACC,EAAWC,EAAa,CAAGF,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IACrC,CAACG,EAAOC,EAAS,CAAGJ,CAAAA,EAAAA,EAAAA,QAAAA,EAAwB,IAAI,EAChD,CAACK,EAAgBC,EAAkB,CAAGN,CAAAA,EAAAA,EAAAA,QAAAA,EAAiB,IAEvD,CAAEO,UAAAA,CAAAA,CAAW,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,IAEhBC,EAAoB,GAA4C,CAClEV,EAAcW,EAAEC,MAAM,CAACC,KAAK,CAChC,EAGMC,EAAmB,IAAM,CAC3BlB,EAAOmB,IAAI,EACf,EAGMC,EAAgB,SAAY,CAE9B,GAAI,CAACjB,EAAY,CACbM,EAAS,sCACT,MACJ,CAAC,EAEY,IACbA,EAAS,IAAI,EAKb,GAAI,CAEA,IAAMY,EAAW,MAAMT,EAAUU,EAAAA,CAAAA,CAAAA,OAAqB,CAL1C,CACZC,UAAWpB,CACf,EAIQkB,CAAAA,EAASG,IAAI,EACbb,EAAkB,wBAClBX,EAAOH,IAAI,CAAC,uBAEZY,EAAS,wCAEjB,CAAE,MAAOgB,EAAK,CACVC,QAAQlB,KAAK,CAAC,kBAAmBiB,GACjChB,EAAS,qCACb,QAAU,CACNF,EAAa,GACjB,CACJ,EAEA,MACI,GAAAoB,EAAAC,IAAA,EAACC,MAAAA,CAAIC,UAAU,iBACX,GAAAH,EAAAI,GAAA,EAACC,SAAAA,CAAOF,UAAU,yEAAyEG,QAASf,WAChG,GAAAS,EAAAI,GAAA,EAACG,EAAAA,CAAeA,CAAAA,CAACC,KAAMC,EAAAA,GAAaA,CAAEN,UAAU,aAEpD,GAAAH,EAAAI,GAAA,EAACM,MAAAA,CACDC,IAAI,8BACJC,IAAI,GACJT,UAAU,cAGV,GAAAH,EAAAI,GAAA,EAACF,MAAAA,CAAIC,UAAU,sCACX,GAAAH,EAAAC,IAAA,EAACC,MAAAA,CAAIC,UAAU,yDACX,GAAAH,EAAAI,GAAA,EAACS,EAAAA,CAAKA,CAAAA,CACFC,KAAK,OACLX,UAAU,yBACVb,MAAOd,EACPuC,SAAU5B,EACV6B,YAAY,wBAGfnC,GAAS,GAAAmB,EAAAI,GAAA,EAACa,IAAAA,CAAEd,UAAU,wBAAgBtB,IACtCE,GAAkB,GAAAiB,EAAAI,GAAA,EAACa,IAAAA,CAAEd,UAAU,0BAAkBpB,IAElD,GAAAiB,EAAAI,GAAA,EAACC,SAAAA,CACGF,UAAU,qGACVG,QAASb,EACTyB,SAAUvC,WAETA,EAAY,iBAAmB,UAAU,UAMlE,CAEAP,CAAAA,EAAY+C,MAAM,CAAGC,EAAAA,CAAiBA,CACtCC,EAAA,QAAejD","sources":["webpack://_N_E/?2c69","webpack://_N_E/./pages/checkIn/index.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/checkIn\",\n      function () {\n        return require(\"private-next-pages/checkIn/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/checkIn\"])\n      });\n    }\n  ","import React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { WithDefaultLayout } from '../../components/DefautLayout';\nimport { Page } from '@/types/Page';\nimport { BackendApiUrl } from '@/functions/BackendApiUrl';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\nimport { Input } from 'antd';\nimport { useFetchWithAccessToken } from '@/functions/useFetchWithAccessToken';\nimport { useSession } from 'next-auth/react';\n\nconst CheckInPage: Page = () => {\n    const router = useRouter();\n    useSession(); // To get the session or user information\n    const [inputValue, setInputValue] = useState<string>(''); // State to store input value\n    const [isLoading, setIsLoading] = useState(false); // To handle loading state\n    const [error, setError] = useState<string | null>(null); // To handle error messages\n    const [successMessage, setSuccessMessage] = useState<string>(''); // To show success message\n\n    const { fetchPOST } = useFetchWithAccessToken();\n    // Handle input change\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setInputValue(e.target.value);\n    };\n\n    // Handle back button click\n    const handleBackButton = () => {\n        router.back();\n    };\n\n    // Handle Check-In\n    const handleCheckIn = async () => {\n        // Don't proceed if input is empty\n        if (!inputValue) {\n            setError(\"Please provide the required input.\");\n            return;\n        }\n\n        setIsLoading(true);\n        setError(null); // Reset any previous errors\n\n        const payload = {\n            bookingId: inputValue\n        }\n        try {\n            // Make POST request using `useFetchWithAccessToken`\n            const response = await fetchPOST(BackendApiUrl.checkIn, payload)\n            if (response.data) {\n                setSuccessMessage(\"Check-In successful!\");\n                router.push('/dashboardApprover')\n            } else {\n                setError(\"Failed to check-in. Please try again.\");\n            }\n        } catch (err) {\n            console.error(\"Check-in error:\", err);\n            setError(\"An error occurred during check-in.\");\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"mt-4\">\n            <button className=\"bg-white rounded-full w-10 h-10 flex items-center justify-center mb-10\" onClick={handleBackButton}>\n                <FontAwesomeIcon icon={faChevronLeft} className=\"inline\" />\n            </button>\n            <img\n            src=\"/Assets/images/check-in.png\"\n            alt=\"\"\n            className=\"mb-6 h-12\"\n          />\n\n            <div className=\"h-[670px] grid grid-rows-2\">\n                <div className=\"flex flex-col gap-6 items-center justify-end\">\n                    <Input\n                        type=\"text\"\n                        className=\"w-4/5 h-[50px] text-lg\"\n                        value={inputValue}\n                        onChange={handleInputChange}\n                        placeholder=\"Enter Check-In Data\"\n                    />\n\n                    {error && <p className=\"text-red-500\">{error}</p>}\n                    {successMessage && <p className=\"text-green-500\">{successMessage}</p>}\n\n                    <button\n                        className=\"bg-[#EB8317] border-4 border-[#d68530] text-3xl w-[200px] font-semibold text-white rounded-xl py-1\"\n                        onClick={handleCheckIn}\n                        disabled={isLoading} // Disable button while loading\n                    >\n                        {isLoading ? 'Checking In...' : 'Check-in'}\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nCheckInPage.layout = WithDefaultLayout;\nexport default CheckInPage;\n"],"names":["window","__NEXT_P","push","__webpack_require__","CheckInPage","router","useRouter","useSession","inputValue","setInputValue","useState","isLoading","setIsLoading","error","setError","successMessage","setSuccessMessage","fetchPOST","useFetchWithAccessToken","handleInputChange","e","target","value","handleBackButton","back","handleCheckIn","response","BackendApiUrl","bookingId","data","err","console","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","div","className","jsx","button","onClick","FontAwesomeIcon","icon","faChevronLeft","img","src","alt","Input","type","onChange","placeholder","p","disabled","layout","WithDefaultLayout","__webpack_exports__"],"sourceRoot":""}