{"version":3,"file":"static/chunks/161-e84a1e7b35d5a3f9.js","mappings":"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","sources":["webpack://_N_E/./components/Modals/ChangeRoleModal.tsx","webpack://_N_E/./components/DefautLayout.tsx","webpack://_N_E/./functions/BackendApiUrl.ts","webpack://_N_E/./functions/DefaultApiRequestHeader.ts","webpack://_N_E/./functions/AuthorizationContext.ts","webpack://_N_E/./functions/tryFetchJson.ts","webpack://_N_E/./functions/useFetchWithAccessToken.ts","webpack://_N_E/./functions/useSwrFetcherWithAccessToken.ts","webpack://_N_E/<anon>"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useEffect, useState } from 'react';\nimport { GetUserRole } from '@/interface/GetRoleOptionInterface';\nimport { useSession } from 'next-auth/react';\nimport useSWR from 'swr';\nimport { BackendApiUrl } from '@/functions/BackendApiUrl';\nimport { useSwrFetcherWithAccessToken } from '@/functions/useSwrFetcherWithAccessToken';\nimport { User } from 'next-auth';\nimport { signIn } from 'next-auth/react';\nimport { useFetchWithAccessToken } from '@/functions/useFetchWithAccessToken';\n\ninterface ChangeRoleModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\ninterface Organization {\n  name: string;\n}\n\nconst ChangeRoleModal: React.FC<ChangeRoleModalProps> = ({ isOpen, onClose }) => {\n  const { data: session } = useSession();\n  const user = session?.user as User;\n  const swrFetcher = useSwrFetcherWithAccessToken();\n  const userId = user?.id;\n  const [newRole, setNewRole] = useState<string>(user?.role?.[0] || '');\n  \n  // State to track organization name for each role\n  const [roleDisplayNames, setRoleDisplayNames] = useState<{ [key: string]: string }>({});\n  \n  // State to track selected role for styling\n  const [selectedRole, setSelectedRole] = useState<string>(user?.role?.[0] || '');\n\n  const { fetchPOST } = useFetchWithAccessToken();\n\n  // Fetch user roles using useSWR\n  const { data: rolesData, error, isLoading } = useSWR<GetUserRole>(\n    userId ? `${BackendApiUrl.getUserRole}?UserId=${userId}` : null,\n    swrFetcher\n  );\n\n  // Fetch organization name for Staff and StudentOrganization roles\n  const { data: staffOrganizationName } = useSWR<Organization>(\n    userId ? `${BackendApiUrl.getDisplayName}?UserId=${userId}&RoleName=Staff` : null,\n    swrFetcher\n  );\n\n  const { data: studentOrgOrganizationName } = useSWR<Organization>(\n    userId ? `${BackendApiUrl.getDisplayName}?UserId=${userId}&RoleName=StudentOrganization` : null,\n    swrFetcher\n  );\n\n  useEffect(() => {\n    if (staffOrganizationName) {\n      setRoleDisplayNames((prevState) => ({\n        ...prevState,\n        Staff: staffOrganizationName.name,\n      }));\n    }\n    if (studentOrgOrganizationName) {\n      setRoleDisplayNames((prevState) => ({\n        ...prevState,\n        StudentOrganization: studentOrgOrganizationName.name,\n      }));\n    }\n  }, [staffOrganizationName, studentOrgOrganizationName]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setSelectedRole(user?.role?.[0] || ''); // Set selected role when modal opens\n    }\n  }, [isOpen, user]);\n\n  const handleRoleClick = (roleName: string) => {\n    setSelectedRole(roleName); // Update selected role when clicked\n    setNewRole(roleName); // Update newRole to reflect the selected role\n  };\n\n  const saveRoleChange = async () => {\n    const selectedRoleData = rolesData?.userRoles?.find(roleOption => roleOption.roleName === newRole);\n\n    if (!userId || !selectedRoleData) {\n      console.error(\"User ID or selected role is not available.\");\n      return;\n    }\n\n    const payload = {\n      userId: userId,\n      roleId: selectedRoleData.roleId,\n    };\n\n    try {\n      const response = await fetchPOST(BackendApiUrl.changeRole, payload);\n      if (response.data) {\n        // Sign in again to fetch the updated session\n        await signIn(\"oidc\", { redirect: false });\n        console.log(\"Role changed successfully. Updated session fetched.\");\n      }\n    } catch (error) {\n      console.error('Failed to change role:', error);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"fixed inset-0 flex justify-center items-center bg-black bg-opacity-50 z-50\">\n        <div className=\"bg-white p-8 rounded-lg w-3/5\">Loading...</div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"fixed inset-0 flex justify-center items-center bg-black bg-opacity-50 z-50\">\n        <div className=\"bg-white p-8 rounded-lg w-3/5\">Error loading roles</div>\n      </div>\n    );\n  }\n\n  const roles = rolesData?.userRoles || [];\n\n  return (\n    <div className={`fixed inset-0 flex justify-center items-center bg-black bg-opacity-50 z-50 ${isOpen ? '' : 'hidden'}`}>\n      <div className=\"bg-white p-4 rounded-lg w-2/5\">\n        <div className=\"flex flex-col items-center\">\n            <p className='text-xl font-medium text-purple-950 mb-6'>Change Role</p>\n            <div className='flex flex-col'>\n                <div className=\"grid grid-cols-3 gap-5\">\n                    {roles.length > 0 ? (\n                        roles.map((role) => {\n                            const displayName = roleDisplayNames[role.roleName] || role.roleName;\n                            const isCurrentRole = selectedRole === role.roleName; // Check if the role is selected\n\n                            return (\n                            <div key={role.roleId} className=\"flex flex-col mb-6\">\n                                <button\n                                onClick={() => handleRoleClick(role.roleName)} // Set selected role on click\n                                className={`w-[160px] h-[160px] border border-gray-400 rounded-xl ${isCurrentRole ? 'border-2 border-purple-950' : ''}`}\n                                >\n                                    <div className='flex flex-col items-center'>\n                                        <img src={`/Assets/images/${role.roleName}.png`} alt={role.roleName} className='w-[120px] h-[120px]' />\n                                        <p>{displayName}</p>\n                                    </div>\n                                </button>\n                            </div>\n                            );\n                        })\n                    ) : (\n                    <div>No roles</div>\n                    )}\n                </div>\n                <div className=\"flex justify-end gap-4 py-2\">\n                    <button\n                      onClick={onClose} // Close the modal without saving\n                      className='bg-gray-400 w-[90px] text-white px-6 py-2 rounded-full'\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      onClick={async () => {\n                        await saveRoleChange(); // Save the role change\n                        onClose(); // Close the modal after saving\n                      }}\n                      className='bg-purple-950 w-[90px] text-white px-6 py-2 rounded-full'\n                    >\n                      Save\n                    </button>\n                </div>\n            </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChangeRoleModal;\n","import React, { useEffect, useState } from \"react\";\nimport Head from 'next/head';\nimport { Badge, ConfigProvider, Layout, Menu, MenuProps } from \"antd\";\nimport { faSignOut, faSignIn, faHome, faCalendarAlt, faPeopleRoof, faShield, faInfo } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useRouter } from \"next/router\";\nimport { useSession, signOut } from \"next-auth/react\";\nimport nProgress from \"nprogress\";\nimport { Image } from \"antd\";\nimport useSWR from 'swr';\nimport { BackendApiUrl } from '@/functions/BackendApiUrl'; \nimport { GetUserRole } from '@/interface/GetRoleOptionInterface'; \nimport { useSwrFetcherWithAccessToken } from \"@/functions/useSwrFetcherWithAccessToken\";\nimport { User } from \"next-auth\";\nimport ChangeRoleModal from \"@/components/Modals/ChangeRoleModal\";\n\nconst { Content, Sider } = Layout;\n\nconst sidebarBackgroundColor = '#380356';\nconst sidebarMenuSelectedItemBackgroundColor = '#6B0078';\n\ninterface UnreadNotif{\n    total: number;\n}\n\nconst DefaultLayout: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n    const router = useRouter();\n    const { data: session, status } = useSession();\n    const user = session?.user as User;\n    const swrFetcher = useSwrFetcherWithAccessToken();\n    const [selected, setSelected] = useState([router.pathname]);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [displayUserName, setDisplayUserName] = useState<string>(user?.name || \"\");\n    \n\n    // Fetch user roles\n    const userId = user?.id;\n    const { data: rolesData, error } = useSWR<GetUserRole>(`${BackendApiUrl.getUserRole}?UserId=${userId}`, swrFetcher);\n    const { data: unreadNotifData } = useSWR<UnreadNotif>(`${BackendApiUrl.getNotificationUnread}?UserId=${userId}`, swrFetcher);\n\n    const [unreadNotif, setUnreadNotif] = useState<number>(0); // Local state to manage unread notifications\n\n    // Update unread notifications when data is fetched\n    useEffect(() => {\n        if (unreadNotifData) {\n            setUnreadNotif(unreadNotifData.total); // Assuming unreadNotifData has a 'Total' field\n        }\n    }, [unreadNotifData]); \n\n    const handleDirectNotif = () => {\n        router.push('/notification')\n    }\n\n    useEffect(() => {\n        if (user) {\n            const role = user?.role?.[0];\n   \n            if (role === \"Student\" || role === \"StudentOrganization\" || role === \"Staff\" || role === \"Lecturer\") {\n                setSelected(['/dashboardUser']);\n            } else if (role === \"SSO\") {\n                setSelected(['/dashboardApprover']);\n            } else if (role === \"SLC\" || role === \"LSC\" || role === \"BM\") {\n                setSelected(['/dashboardApprover']);\n            } else if (role === \"SuperAdmin\") {\n                setSelected(['/dashboardAdmin']);\n            }\n        }\n    }, [user]);\n   \n\n    useEffect(() => {\n        if (user?.role?.[0] === \"StudentOrganization\" || user?.role?.[0] === \"Staff\"){\n            const fetchDisplayName = async () => {\n                try {\n                    const response = await fetch(`${BackendApiUrl.getDisplayName}?UserId=${userId}&RoleName=${user?.role?.[0]}`);\n                    const data = await response.json();\n                    if (data && data.name) {\n                        setDisplayUserName(data.name); // Update with fetched display name\n                    } else {\n                        setDisplayUserName(session?.user?.name || \"\"); // Fallback\n                    }\n                } catch (error) {\n                    console.error(\"Error fetching display name:\", error);\n                    setDisplayUserName(session?.user?.name || \"\"); // Fallback in case of error\n                }\n            };\n\n            fetchDisplayName();\n        } else {\n            // Default display name for other roles\n            setDisplayUserName(session?.user?.name || \"\");\n        }\n    }, [userId, rolesData, session?.user?.name, user?.role]);\n\n    if (error) {\n        console.error(\"Error fetching roles:\", error);\n    }\n\n    const getMenu = () => {\n        const menu: MenuProps['items'] = [];\n        const role = user?.role?.[0];\n        const roleKey = () => {\n            if (role === \"Student\" || role === \"StudentOrganization\" || role === \"Staff\" || role === \"Lecturer\") {\n                return '/dashboardUser';\n            } else if(role === \"SuperAdmin\") {\n                return '/dashboardAdmin';\n            }else {\n                return '/dashboardApprover';\n            }\n        };\n\n        if (role) {\n            menu.push({\n                key: roleKey(),\n                label: 'Dashboard',\n                icon: <FontAwesomeIcon icon={faHome} className=\"mr-[10px]\" />,\n                onClick: () => router.push('/')\n            });\n\n            if (role === \"Student\" || role === \"StudentOrganization\" || role === \"Staff\" || role === \"Lecturer\") {\n                menu.push({\n                    key: '/ongoing',\n                    label: 'Ongoing',\n                    icon: <FontAwesomeIcon icon={faHome} className=\"mr-[10px]\" />,\n                    onClick: () => router.push('/ongoing')\n                });\n            } else if (role === \"SSO\") {\n                menu.push({\n                    key: '/approverHistory',\n                    label: 'History',\n                    icon: <FontAwesomeIcon icon={faCalendarAlt} className=\"mr-[11px]\" />,\n                    onClick: () => router.push('/approverHistory')\n                });\n            } else if (role === \"SLC\" || role === \"LSC\" || role === \"BM\") {\n                menu.push({\n                    key: '/approverHistory',\n                    label: 'History',\n                    icon: <FontAwesomeIcon icon={faCalendarAlt} className=\"mr-[11px]\" />,\n                    onClick: () => router.push('/approverHistory')\n                });\n                menu.push({\n                    key: '/manage',\n                    label: 'Manage',\n                    icon: <FontAwesomeIcon icon={faPeopleRoof} className=\"mr-[9px]\" />,\n                    onClick: () => router.push('/manage')\n                });\n            } else if (role === \"SuperAdmin\") {\n                menu.push({\n                    key: '/manage',\n                    label: 'Manage',\n                    icon: <FontAwesomeIcon icon={faPeopleRoof} className=\"mr-[9px]\" />,\n                    onClick: () => router.push('/manage')\n                });\n                menu.push({\n                    key: '/blocker',\n                    label: 'Blocker',\n                    icon: <FontAwesomeIcon icon={faShield} className=\"mr-[12px]\" />,\n                    onClick: () => router.push('/blocker')\n                });\n            }\n        }\n        return menu;\n    };\n\n    const getLogOut = () => {\n        const authmenu: MenuProps['items'] = [];\n        if (status === 'authenticated') {\n            authmenu.push({\n                key: '/signOut',\n                label: 'Log out',\n                icon: <FontAwesomeIcon icon={faSignOut} className=\"mr-[12px]\" />,\n                onClick: () => {\n                    nProgress.start();\n                    signOut({ callbackUrl: '/', redirect: true }).then(() => { nProgress.done(); });\n                }\n            });\n        } else {\n            authmenu.push({\n                key: '/login',\n                label: 'Sign in',\n                icon: <FontAwesomeIcon icon={faSignIn} className=\"mr-[12px]\" />,\n                onClick: () => {\n                    nProgress.start();\n                    router.push('/login');\n                }\n            });\n        }\n        return authmenu;\n    };\n\n\n\n\n    // Open/Close modal\n    const openModal = () => setIsModalOpen(true);\n    const closeModal = () => setIsModalOpen(false);\n\n    return (\n        <ConfigProvider theme={{\n            components: {\n                Layout: {\n                    colorBgHeader: sidebarBackgroundColor,\n                    colorBgBody: \"#000000\"\n                }\n            }\n        }}>\n            <Layout className=\"min-h-screen\">\n                <Head>\n                    <meta key=\"meta-charset\" charSet=\"utf-8\" />\n                    <meta key=\"meta-viewport\" name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n                    <link key=\"main-logo\" rel=\"icon\" href=\"/main-logo.ico\" />\n                </Head>\n\n                <Sider width={300} className=\"pb-24 hidden lg:block p-6\">\n                    <div className=\"h-12\">\n                        <Image preview={false} src=\"/Assets/images/logo-side-bar.png\" alt=\"Roomify Logo\" width={170} />\n                        <div className=\"bg-white rounded-2xl h-56 my-6 shadow-gray-600 shadow-lg relative\">\n                            <div className=\"px-6 py-6 max-w-sm\">\n                                <p className=\"text-xl font-semibold\">Hi,</p>\n                                <p className=\"text-4xl font-bold overflow-wrap break-words\">{displayUserName}</p>\n                            </div>\n                            <button \n                                onClick={openModal}\n                                className=\"absolute bottom-4 right-4 flex items-center justify-center text-white bg-[#EB8317] border-4 border-[#d68530] px-4 py-2 rounded-lg font-semibold hover:to-blue-950\"\n                            >\n                                Change Role\n                            </button>\n                            <button\n                                onClick={handleDirectNotif}\n                                className=\"absolute bottom-4 left-4 flex items-center justify-center text-white border-2 px-4 py-2 font-semibold bg-purple-950 border-purple-800 rounded-full w-9 h-9\"\n                            >\n                                <div className=\"relative flex items-center justify-center\">\n                                    <Badge count={unreadNotif} overflowCount={999} style={{ position: 'absolute', top: -6, right: -15 }}>\n                                        <FontAwesomeIcon icon={faInfo} className=\"text-white\" />\n                                    </Badge>\n                                </div>\n                            </button>\n\n                        </div>\n                        <ConfigProvider theme={{\n                            components: {\n                                Menu: {\n                                    colorItemBg: sidebarBackgroundColor,\n                                    colorItemBgSelected: sidebarMenuSelectedItemBackgroundColor,\n                                    radiusItem: 100,\n                                    colorActiveBarBorderSize: 0,\n                                    itemMarginInline: 0,\n                                }\n                            }\n                        }}>\n                            <Menu theme=\"dark\" mode=\"vertical\" items={getMenu()}\n                                selectedKeys={selected} onSelect={e => setSelected(e.selectedKeys)} style={{ fontSize: 16 }} />\n                            <Menu theme=\"dark\" mode=\"vertical\" items={getLogOut()}\n                                selectedKeys={selected} onSelect={e => setSelected(e.selectedKeys)} style={{ fontSize: 16 }} className=\"absolute bottom-6\" />\n                        </ConfigProvider>\n                    </div>\n                </Sider>\n                <Layout>\n                    <Content className=\"m-5 p-8 bg-[#1F1E1E]\">\n                        {children}\n                    </Content>\n                </Layout>\n\n                {/* ChangeRoleModal Component */}\n                <ChangeRoleModal\n                    isOpen={isModalOpen}\n                    onClose={closeModal}\n                />\n            </Layout>\n        </ConfigProvider>\n    );\n};\n\nexport const WithDefaultLayout = (page: React.ReactElement) => <DefaultLayout>{page}</DefaultLayout>;\n","\n// Request will be proxied via /api/be/[...apiGateway].ts\nconst baseUrl = '/api/be';\n\nexport const BackendApiUrl = {\n    test: baseUrl + '/api/test',\n\n    login: baseUrl + \"/api/Authentication/login\",\n    getUserRole: baseUrl + \"/api/Role/get-user-role\",\n    changeRole: baseUrl + \"/api/Role/change-role\",\n    getDisplayName: baseUrl + \"/api/Role/get-display-name\",\n    getUser: baseUrl + `/api/User/get-user-by-roles`,\n\n    getBuilding: baseUrl + \"/api/v1/Building/get-all-building\",\n    getBuildingDetail: (id: string) => baseUrl + `/api/v1/Building/get-building/${id}`,\n    editBuilding: (id: string) => baseUrl + `/api/v1/Building/edit-building/${id}`,\n    createBuilding: baseUrl + `/api/v1/Building/create-building`,\n    deleteBuilding: baseUrl + `/api/v1/Building/delete-building`,\n    getRoom: baseUrl + \"/api/v1/Room/get-user-view\",\n    getRoomDetail: baseUrl + `/api/v1/Room/get-room-detail`,\n    getRoomSchedule: baseUrl + `/api/v1/Room/get-room-schedule`,\n    getAllRoom: baseUrl + `/api/v1/Room/get-all-room`,\n    createRoom: baseUrl + `/api/v1/Room/create-room`,\n    getAllRoomDetail: baseUrl + `/api/v1/Room/get-room-detail`,\n    editRoom: (id: string) => baseUrl + `/api/v1/Room/${id}`,\n    deleteRoom: baseUrl + `/api/v1/Room/delete-room`,\n    getRoomGroup: baseUrl + `/api/v1/Room/get-room-group`,\n    createGroup: baseUrl + `/api/Group/create-group`,\n    getGroupDetail: baseUrl + `/api/Group/get-group-detail`,\n    editGroup: (id: string) => baseUrl + `/api/Group/${id}`,\n    deleteGroup: baseUrl + `/api/Group/delete-group`,\n    getRoomAvailable: baseUrl + `/api/v1/Room/get-room-available`,\n\n    getAvailableSession: baseUrl + `/api/Booking/get-available-session`,\n    getAllEquipment: baseUrl + `/api/Booking/get-all-equipment`,\n    getLecturerSubject: baseUrl + `/api/Booking/get-lecturer-subject`,\n    getInstituteId: baseUrl + `/api/Booking/get-institutional-id`,\n    createBooking: baseUrl + `/api/Booking/create-booking`,\n    getUserBookingView: baseUrl + `/api/Booking/get-user-view`,\n    cancelBooking: baseUrl + `/api/Booking/cancel-booking`,\n    getRejectMessage: baseUrl + `/api/Booking/get-reject-message`,\n    getAllBooking: baseUrl + `/api/Booking/get-all-booking`,\n    updateBooking: baseUrl + `/api/Booking/update-booking`,\n    getBookingTraffic: baseUrl + `/api/Booking/get-booking-traffic`,\n\n    getApproverView: baseUrl + `/api/Booking/get-approver-view`,\n    getBookingDetail: baseUrl + `/api/Booking/get-booking-detail`,\n    approveBooking: baseUrl + `/api/Booking/approve`,\n    getApproverHistory: baseUrl + `/api/Booking/get-approver-history`,\n    checkIn: baseUrl + `/api/Booking/checkin`,\n\n    getUserRoles: baseUrl + `/api/User/get-user-roles`,\n    getRoleDetail: baseUrl + `/api/User/get-role-detail`,\n    getAvailableRole: baseUrl + `/api/user/get-role-available`,\n    addNewRole: baseUrl + `/api/User/add-new-role`,\n    deleteRole: baseUrl + `/api/User/delete-role`,\n\n    getBlockerList: baseUrl + `/api/Blocker/get-blocker-list`,\n    createBlocker: baseUrl + `/api/Blocker/create-blocker`,\n    deleteBlocker: baseUrl + `/api/Blocker/delete-blocker`,\n    deactiveBlocker: baseUrl + `/api/Blocker/deactive-blocker`,\n    getBlockerDetail: baseUrl + `/api/Blocker/get-blocker-detail`,\n    updateBlocker: baseUrl + `/api/Blocker/update-blocker`,\n\n    getNotificationUnread: baseUrl + `/api/Notification/get-notification-unread`,\n    getNotification: baseUrl + `/api/Notification/get-notification`,\n    readNotification: baseUrl + `/api/Notification/read-notification`,\n    deleteNotification: baseUrl + `/api/Notification/delete-notification`,\n    deleteAllNotification: baseUrl + `/api/Notification/delete-all`,\n}","/**\n * Gets the HTTP header for disabling request caching to Web API.\n */\nexport const DefaultApiRequestHeader = {\n    'Content-Type': 'application/json',\n    'Cache-Control': 'no-cache',\n    'Pragma': 'no-cache',\n    'Expires': '0',\n};\n","import React, { useContext } from \"react\";\n\nexport interface UserInfoAddress {\n    // formatted: string;\n    street_address: string;\n    locality: string;\n    region: string;\n    postal_code: string;\n    country: string;\n}\n\nexport interface UserInfo {\n    id: string;\n    name: string;\n    // given_name: string;\n    // family_name: string;\n    // middle_name: string;\n    // nickname: string;\n    // preferred_username: string;\n    // profile: string;\n    // picture: string;\n    // website: string;\n    email: string;\n    // email_verified: boolean;\n    // gender: string;\n    // birthdate: string;\n    // zoneinfo: string;\n    // locale: string;\n    // phone_number: string;\n    // phone_number_verified: boolean;\n    // address: UserInfoAddress;\n    // updated_at: number;\n    role: string[];\n}\n\nexport interface AuthorizationContextData {\n    accessToken: string;\n    user: UserInfo;\n    isAuthenticated: boolean;\n}\n\nexport const AuthorizationContext = React.createContext<AuthorizationContextData>({\n    accessToken: '',\n    user: {\n        id: '',\n        name: '',\n        email: '',\n        role: []\n    },\n    isAuthenticated: false\n});\n\nexport function useAuthorizationContext() {\n    return useContext(AuthorizationContext);\n} \n","import { ProblemDetails } from \"../types/ProblemDetails\";\n\n/**\n * Simplified wrapper of the Fetch API response object.\n */\n export interface ResponseDetails<T> {\n    /**\n     * JSON parsed object of the response body if `response.ok`\n     */\n    data?: T;\n\n    /**\n     * RFC 7807 Problem Details JSON response if not `response.ok` or a `string` if the response is not JSON. \n     */\n    problem?: ProblemDetails | string;\n\n    /**\n     * Exception thrown when performing the HTTP request.\n     */\n    error?: unknown;\n}\n\n/**\n * Wraps the Fetch API inside a try-catch block and expects JSON response when ok\n * and RFC 7807 Problem Details JSON response when not ok.\n * @param url\n * @param init\n * @returns `data` when `response.ok`, `problem` when not `response.ok`, and `error` when exception\n */\nexport async function tryFetchJson<T>(url: RequestInfo | URL, init: RequestInit): Promise<ResponseDetails<T>> {\n    try {\n        const response = await fetch(url, init);\n        if (response.ok) {\n            const data: T = await response.json();\n            return {\n                data: data\n            };\n        }\n\n        try {\n            const problem: ProblemDetails = await response.json();\n            return {\n                problem: problem\n            };\n        } catch (problemNotJson) {\n            const responseBody = await response.text();\n            return {\n                problem: responseBody\n            };\n        }\n    } catch (err) {\n        return {\n            error: err\n        };\n    }\n}\n","import { DefaultApiRequestHeader } from \"./DefaultApiRequestHeader\";\nimport { useAuthorizationContext } from \"./AuthorizationContext\";\nimport { tryFetchJson } from \"./tryFetchJson\";\n\n/**\n * This hook can be used inside `<Authorize>` component to add Access Token to fetch requests headers.\n * Caching is disabled via `DefaultApiRequestHeader` object.\n * @returns Fetch wrapper methods\n */\nexport function useFetchWithAccessToken() {\n    const { accessToken, isAuthenticated } = useAuthorizationContext();\n\n    const headers: Record<string, string> = {\n        ...DefaultApiRequestHeader\n    };\n    if (isAuthenticated && accessToken) {\n        headers['Authorization'] = `Bearer ${accessToken}`;\n    }\n\n    return {\n        /**\n         * Fetch a URL with GET method with JSON response.\n         * If method is called inside `<Authorize>` component context, will append Access Token to request header\n         * @param url \n         * @returns `data` when `response.ok`, `problem` when not `response.ok`, and `error` when exception\n         */\n        fetchGET: function <T>(url: RequestInfo | URL) {\n            return tryFetchJson<T>(url, {\n                method: 'GET',\n                headers: headers,\n            });\n        },\n\n        /**\n         * Fetch a URL with POST method with JSON serialized request body and JSON response. \n         * If method is called inside `<Authorize>` component context, will append Access Token to request header\n         * @param url \n         * @param body \n         * @returns `data` when `response.ok`, `problem` when not `response.ok`, and `error` when exception\n         */\n        fetchPOST: function <T>(url: RequestInfo | URL, body: unknown = undefined) {\n            return tryFetchJson<T>(url, {\n                method: 'POST',\n                headers: headers,\n                body: JSON.stringify(body),\n            });\n        },\n\n        /**\n         * Fetch a URL with PUT method with JSON serialized request body and JSON response. \n         * If method is called inside `<Authorize>` component context, will append Access Token to request header\n         * @param url \n         * @param body \n         * @returns `data` when `response.ok`, `problem` when not `response.ok`, and `error` when exception\n         */\n        fetchPUT: function <T>(url: RequestInfo | URL, body: unknown = undefined) {\n            return tryFetchJson<T>(url, {\n                method: 'PUT',\n                headers: headers,\n                body: JSON.stringify(body),\n            });\n        },\n\n        /**\n         * Fetch a URL with PATCH method with JSON serialized request body and JSON response. \n         * If method is called inside `<Authorize>` component context, will append Access Token to request header\n         * @param url \n         * @param body \n         * @returns `data` when `response.ok`, `problem` when not `response.ok`, and `error` when exception\n         */\n        fetchPATCH: function <T>(url: RequestInfo | URL, body: unknown = undefined) {\n            return tryFetchJson<T>(url, {\n                method: 'PATCH',\n                headers: headers,\n                body: JSON.stringify(body),\n            });\n        },\n\n        /**\n         * Fetch a URL with DELETE method with JSON response.\n         * If method is called inside `<Authorize>` component context, will append Access Token to request header\n         * @param url \n         * @returns `data` when `response.ok`, `problem` when not `response.ok`, and `error` when exception\n         */\n        fetchDELETE: function <T>(url: RequestInfo | URL) {\n            return tryFetchJson<T>(url, {\n                method: 'DELETE',\n                headers: headers,\n            });\n        },\n\n        fetchDELETEWithBody: function <T>(url: RequestInfo | URL, body: unknown = undefined) {\n            return tryFetchJson<T>(url, {\n                method: 'DELETE',\n                headers: headers,\n                body: JSON.stringify(body),\n            });\n        },\n\n        fetchPOSTWithFormData: function <T>(url: RequestInfo | URL, formData: FormData) {\n            const formHeaders = new Headers(headers);\n            formHeaders.delete('Content-Type');\n            return tryFetchJson<T>(url, {\n                method: 'POST',\n                headers: formHeaders,\n                body: formData,\n            });\n        },\n    }\n}\n","import { useFetchWithAccessToken } from \"./useFetchWithAccessToken\";\n\n/**\n * This hook can be used inside `<Authorize>` component to add Access Token to request headers.\n * Caching is disabled via `DefaultApiRequestHeader` object.\n * @returns SWR Fetcher\n */\nexport function useSwrFetcherWithAccessToken() {\n    const { fetchGET } = useFetchWithAccessToken();\n    \n    return async (url: string) => {\n        // reasoning: SWR fetcher requires `any` data type promise result\n        // https://swr.vercel.app/docs/data-fetching#fetch\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const { data, error, problem } = await fetchGET<any>(url);\n        \n        if (error) {\n            throw error;\n        }\n\n        // throw when status code is not 2XX\n        // https://swr.vercel.app/docs/error-handling#status-code-and-error-object        \n        if (problem) {\n            throw problem;\n        }\n        return data;\n    }\n}\n"],"names":["ChangeRoleModal","user","isOpen","onClose","param","data","session","useSession","swrFetcher","useSwrFetcherWithAccessToken","userId","id","newRole","setNewRole","useState","role","roleDisplayNames","setRoleDisplayNames","selectedRole","setSelectedRole","fetchPOST","useFetchWithAccessToken","rolesData","error","isLoading","useSWR","BackendApiUrl","concat","staffOrganizationName","studentOrgOrganizationName","useEffect","prevState","Staff","name","StudentOrganization","handleRoleClick","roleName","saveRoleChange","selectedRoleData","userRoles","find","roleOption","console","payload","roleId","response","signIn","redirect","log","jsx_runtime","jsx","div","className","roles","jsxs","p","length","map","displayName","isCurrentRole","button","onClick","img","src","alt","Content","Sider","Layout","sidebarBackgroundColor","DefaultLayout","children","router","useRouter","status","selected","setSelected","pathname","isModalOpen","setIsModalOpen","displayUserName","setDisplayUserName","unreadNotifData","unreadNotif","setUnreadNotif","total","handleDirectNotif","push","fetchDisplayName","fetch","json","openModal","closeModal","ConfigProvider","theme","components","colorBgHeader","colorBgBody","Head","meta","charSet","content","link","rel","href","width","Image","preview","Badge","count","overflowCount","style","position","top","right","FontAwesomeIcon","icon","faInfo","Menu","colorItemBg","colorItemBgSelected","radiusItem","colorActiveBarBorderSize","itemMarginInline","mode","items","getMenu","menu","key","label","faHome","faCalendarAlt","faPeopleRoof","faShield","selectedKeys","onSelect","e","fontSize","getLogOut","authmenu","faSignOut","nProgress","signOut","callbackUrl","then","faSignIn","WithDefaultLayout","page","baseUrl","test","login","getUserRole","changeRole","getDisplayName","getUser","getBuilding","getBuildingDetail","editBuilding","createBuilding","deleteBuilding","getRoom","getRoomDetail","getRoomSchedule","getAllRoom","createRoom","getAllRoomDetail","editRoom","deleteRoom","getRoomGroup","createGroup","getGroupDetail","editGroup","deleteGroup","getRoomAvailable","getAvailableSession","getAllEquipment","getLecturerSubject","getInstituteId","createBooking","getUserBookingView","cancelBooking","getRejectMessage","getAllBooking","updateBooking","getBookingTraffic","getApproverView","getBookingDetail","approveBooking","getApproverHistory","checkIn","getUserRoles","getRoleDetail","getAvailableRole","addNewRole","deleteRole","getBlockerList","createBlocker","deleteBlocker","deactiveBlocker","getBlockerDetail","updateBlocker","getNotificationUnread","getNotification","readNotification","deleteNotification","deleteAllNotification","DefaultApiRequestHeader","AuthorizationContext","React","accessToken","email","isAuthenticated","tryFetchJson","url","init","ok","problem","problemNotJson","responseBody","text","err","useContext","headers","fetchGET","method","body","undefined","JSON","stringify","fetchPUT","fetchPATCH","fetchDELETE","fetchDELETEWithBody","fetchPOSTWithFormData","formData","formHeaders","Headers","delete"],"sourceRoot":""}