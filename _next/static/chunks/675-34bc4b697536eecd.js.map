{"version":3,"file":"static/chunks/675-34bc4b697536eecd.js","mappings":"iGAEAA,OAAAA,cAAAA,CAAAA,EAAAA,aAA6C,CACzCC,MAAO,EACX,GACAC,EAAAA,OAAe,CAAG,KAAK,EACvB,IAAIC,EAAWC,EAAAA,MAAAA,CAAAA,CACXC,EAA2BD,EAAAA,MAAAA,CAAAA,CAC3BE,EAA4BF,EAAAA,MAAAA,CAAAA,CAC5BG,EAAmCH,EAAAA,MAAAA,CAAAA,CACnCI,EAASF,EAA0BF,EAAQ,OAC3CK,EAAQJ,EAAyBD,EAAQ,OACzCM,EAAgBN,EAAQ,MACxBO,EAAeP,EAAQ,MACvBQ,EAAsBR,EAAQ,MAClBA,EAAQ,MACxB,IAAIS,EAAeR,EAAyBD,EAAQ,OAEpD,IAAMU,EAAYC,CAAAA,YAAAA,CAAAA,IAAAA,IAAAA,IAAAA,KAAAA,KAAAA,KAAAA,KAAAA,KAAAA,CAAAA,WAAAA,CAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,IAAAA,IAAAA,IAAAA,CAAAA,KAAAA,eAAAA,OAAAA,UAAAA,oBAAAA,CAAAA,EAAAA,YAAAA,CAAAA,CAAAA,EAWlB,SAASC,EAAgBC,CAAG,CAAE,CAC1B,OAAOA,KAAgBC,IAAhBD,EAAIE,OAAO,CAqFtB,SAASC,EAAOC,CAAC,CAAE,OACf,UAAI,OAAOA,GAAkB,KAAa,IAANA,EACzBA,EAEP,iBAAOA,GAAkB,WAAWC,IAAI,CAACD,GAClCE,SAASF,EAAG,IAEhBG,GAJN,CAQL,SAASC,EAAcC,CAAG,CAAET,CAAG,CAAEU,CAAW,CAAEC,CAAS,CAAEC,CAAoB,CAAEC,CAAe,CAAEC,CAAW,CAAE,CACzG,GAAI,CAACL,GAAOA,CAAG,CAAC,kBAAkB,GAAKT,EACnC,MACH,CACDS,CAAG,CAAC,kBAAkB,CAAGT,EACzB,IAAMe,EAAI,WAAYN,EAAMA,EAAIO,MAAM,GAAKC,QAAQC,OAAO,EAAE,CAC5DH,EAAEI,KAAK,CAAC,IAAI,CAAC,GAAGC,IAAI,CAAC,IAAI,CACrB,GAAI,EAAKC,aAAa,EAAKZ,EAAIa,WAAW,EAW1C,GAHoB,SAAhBZ,GACAG,EAAgB,IAEhBF,IAAiB,EAAjBA,EAAoB,KAAK,EAAIA,EAAUY,OAAO,CAAE,CAIhD,IAAMC,EAAQ,IAAIC,MAAM,QACxB1C,OAAO2C,cAAc,CAACF,EAAO,SAAU,CACnCG,SAAU,GACV3C,MAAOyB,CACX,GACA,IAAImB,EAAY,GACZC,EAAU,GACdlB,EAAUY,OAAO,CAACrC,EAAS,CAAC,EAAGsC,EAAO,CAClCM,YAAaN,EACbO,cAAetB,EACfuB,OAAQvB,EACRwB,mBAAoB,IAAIL,EACxBM,qBAAsB,IAAIL,EAC1BM,QAAS,IAAI,CAAC,EACdC,eAAgB,IAAI,CAChBR,EAAY,GACZJ,EAAMY,cAAc,EACxB,EACAC,gBAAiB,IAAI,CACjBR,EAAU,GACVL,EAAMa,eAAe,EACzB,CACJ,GACJ,CAAC,CACGzB,IAA4B,EAA5BA,EAA+B,KAAK,EAAIA,EAAqBW,OAAO,GACpEX,EAAqBW,OAAO,CAACd,GAjChC,EAiET,CACA,SAAS6B,EAAgBC,CAAa,CAAE,CACpC,GAAM,CAACC,EAAUC,EAAS,CAAGlD,EAAOmD,OAAO,CAACC,KAAK,CAAC,KAC5CC,EAAQtC,SAASkC,EAAU,IAC3BK,EAAQvC,SAASmC,EAAU,WACjC,EAAY,IAAMG,KAAAA,GAAgBC,GAAS,EAIhC,CACHN,cAAAA,CACJ,EAIG,CACHO,cAAeP,CACnB,CALC,CAOL,IAAMQ,EAA8B,EAAWC,UAAU,CAAC,CAACC,EAAQC,IAAe,CAC9E,GAAI,CAAEC,cAAAA,CAAAA,CAAgBC,UAAAA,CAAAA,CAAYC,SAAAA,CAAAA,CAAWC,WAAAA,CAAAA,CAAaC,UAAAA,CAAAA,CAAYC,SAAAA,CAAAA,CAAWC,UAAAA,CAAAA,CAAYC,OAAAA,CAAAA,CAASnB,cAAAA,CAAAA,CAAgBoB,KAAAA,CAAAA,CAAOjD,YAAAA,CAAAA,CAAckD,QAAAA,CAAAA,CAAUC,UAAAA,CAAAA,CAAYC,OAAAA,CAAAA,CAAShD,YAAAA,CAAAA,CAAciD,OAAAA,CAAAA,CAASpD,UAAAA,CAAAA,CAAYC,qBAAAA,CAAAA,CAAuBC,gBAAAA,CAAAA,CAAkBmD,eAAAA,CAAAA,CAAiBC,OAAAA,CAAAA,CAASC,QAAAA,CAAAA,CAAU,CAAGjB,EAAQkB,EAAO7E,EAAiC2D,EAAQ,CACjV,gBACA,YACA,WACA,aACA,YACA,WACA,YACA,SACA,gBACA,OACA,cACA,UACA,YACA,SACA,cACA,SACA,YACA,uBACA,kBACA,iBACA,SACA,UACH,EAED,OADAW,EAAUF,EAAS,OAASE,CAAO,CACdrE,EAAOW,OAAO,CAACkE,aAAa,CAAC7E,EAAOW,OAAO,CAACmE,QAAQ,CAAE,IAAI,CAAgB9E,EAAOW,OAAO,CAACkE,aAAa,CAAC,MAAOrF,OAAOuF,MAAM,CAAC,CAAC,EAAGH,EAAM7B,EAAgBC,GAAgB,CAEvLqB,QAASA,EACTW,MAAOlB,EACPmB,OAAQpB,EACRqB,SAAU,QACV,YAAad,EAAO,OAAS,GAAG,CAChCJ,UAAWA,EACXmB,MAAOxF,EAAS,CAAC,EAAGsE,EAAUC,EAClC,EAAGN,EAAe,CACdwB,IAAK,EAAYC,WAAW,CAAC,GAAO,CAC5B1B,IACI,mBAAOA,EAA6BA,EAAazC,GACpB,UAAxB,OAAOyC,GAEZA,CAAAA,EAAa3B,OAAO,CAAGd,CAAAA,GAG1BA,IAGDyD,GAKAzD,CAAAA,EAAIT,GAAG,CAAGS,EAAIT,GAAG,EAUjBS,EAAIoE,QAAQ,EACZrE,EAAcC,EAAKoD,EAAWnD,EAAaC,EAAWC,EAAsBC,EAAiBC,GAErG,EAAG,CACC+C,EACAnD,EACAC,EACAC,EACAC,EACAqD,EACApD,EACAoC,EACH,EACDe,OAAQ,GAAS,CACb,IAAMxD,EAAMe,EAAMO,aAAa,CAC/BvB,EAAcC,EAAKoD,EAAWnD,EAAaC,EAAWC,EAAsBC,EAAiBC,EACjG,EACAoD,QAAS,GAAS,CAEdF,EAAe,IACK,SAAhBtD,GAEAG,EAAgB,IAEhBqD,GACAA,EAAQ1C,EAEhB,CACJ,IACJ,GACMsD,EAAuB,EAAW9B,UAAU,CAAC,CAACC,EAAQC,IAAe,KA8FnE6B,EACAC,EA9FJ,IA1RoBhF,EA0RhB,CAAEA,IAAAA,CAAAA,CAAMiF,MAAAA,CAAAA,CAAQnE,YAAAA,EAAa,EAAK,CAAGoE,SAAAA,EAAU,EAAK,CAAGtB,QAAAA,CAAAA,CAAUL,UAAAA,CAAAA,CAAY4B,QAAAA,CAAAA,CAAUZ,MAAAA,CAAAA,CAAQC,OAAAA,CAAAA,CAASb,KAAAA,CAAAA,CAAOe,MAAAA,CAAAA,CAAQT,OAAAA,CAAAA,CAASmB,kBAAAA,CAAAA,CAAoB1E,YAAAA,EAAa,QAAU2E,YAAAA,CAAAA,CAC/K9C,cAAAA,CAAAA,CAAgB+C,OAAAA,CAAAA,CAASC,UAAAA,CAAAA,CAAYC,eAAAA,CAAAA,CAAiBC,aAAAA,CAAAA,CAAeC,SAAAA,CAAAA,CAAW,CAAGzC,EAAQ0C,EAAMrG,EAAiC2D,EAAQ,CACtI,MACA,QACA,cACA,WACA,UACA,YACA,UACA,QACA,SACA,OACA,QACA,SACA,oBACA,cACA,cACA,gBACA,SACA,YACA,iBACA,eACA,WACH,EACD,IAAM2C,EAAgB,EAAYC,UAAU,CAAClG,EAAoBmG,kBAAkB,EAC7EhC,EAAS,EAAYiC,OAAO,CAAC,IAAI,CACnC,IAAMC,EAAInG,GAAa+F,GAAiBlG,EAAauG,kBAAkB,CACjEC,EAAW,IACVF,EAAEG,WAAW,IACbH,EAAEI,UAAU,CAClB,CAACC,IAAI,CAAC,CAACC,EAAGC,IAAID,EAAIC,GACbJ,EAAcH,EAAEG,WAAW,CAACE,IAAI,CAAC,CAACC,EAAGC,IAAID,EAAIC,GACnD,OAAOrH,EAAS,CAAC,EAAG8G,EAAG,CACnBE,SAAAA,EACAC,YAAAA,CACJ,EACJ,EAAG,CACCP,EACH,EACGzB,EAAOwB,EACP5B,EAASI,EAAKJ,MAAM,EAAInE,EAAaM,OAAO,QAEzCiE,EAAKJ,MAAM,CAGlB,IAAMyC,EAAkB,uBAAwBzC,EAChD,GAAIyC,EACA,IAAI1C,WAAAA,EAAOC,MAAM,CACb,MAAM,MAAU,mBAAuB0C,MAAA,CAAJzG,EAAI,+BAAgC,0EAA0E,KAElJ,CAIH,IAAM0G,EAAoB3C,EAOvBA,EALI,GAAO,CACV,GAAM,CAAED,OAAQ6C,CAAAA,CAAI,CAAGC,EAAKC,EAAOvH,EAAiCsH,EAAK,CACrE,SACH,EACD,OAAOF,EAAkBG,EAC7B,CACJ,CAAC,GACGvB,EAAQ,CACO,SAAXA,GACA3B,CAAAA,EAAO,IAgBX,IAAMmD,EAAcC,CAbhBC,UAAW,CACPC,SAAU,OACVzC,OAAQ,MACZ,EACA0C,WAAY,CACR3C,MAAO,OACPC,OAAQ,MACZ,CACJ,CAKiC,CAACc,EAAO,CACrCwB,GACApC,CAAAA,EAAQxF,EAAS,CAAC,EAAGwF,EAAOoC,EAAAA,EAEhC,IAAMK,EAAcC,CAPhBF,WAAY,QACZvD,KAAM,OACV,CAKiC,CAAC2B,EAAO,CACrC6B,GAAe,CAAClC,GAChBA,CAAAA,EAAQkC,CAAAA,CAEhB,CAAC,IACGE,EAAY,GACZhE,EAAWlD,EAAOoE,GAClBnB,EAAYjD,EAAOqE,GAGvB,GAxXO,iBADaxE,EAyXDA,IAxXgBD,CAAAA,EAAgBC,IAH5CA,KAAYC,IAAZD,EAAIA,GAAG,EA2XW,CACrB,IAAMsH,EAAkBvH,EAAgBC,GAAOA,EAAIE,OAAO,CAAGF,CAAG,CAChE,GAAI,CAACsH,EAAgBtH,GAAG,CACpB,MAAM,MAAU,8IAA8KyG,MAAA,CAAhCc,KAAKC,SAAS,CAACF,IAAoB,CAErM,GAAI,CAACA,EAAgB9C,MAAM,EAAI,CAAC8C,EAAgB/C,KAAK,CACjD,MAAM,MAAU,2JAA2LkC,MAAA,CAAhCc,KAAKC,SAAS,CAACF,IAAoB,CAMlN,GAJAvC,EAAYuC,EAAgBvC,SAAS,CACrCC,EAAasC,EAAgBtC,UAAU,CACvCK,EAAcA,GAAeiC,EAAgBjC,WAAW,CACxDgC,EAAYC,EAAgBtH,GAAG,CAC3B,CAAC2D,GACD,GAAI,GAAcP,GAGX,GAAIC,GAAY,CAACD,EAAW,CAC/B,IAAMqE,EAAQpE,EAAWiE,EAAgB/C,KAAK,CAC9CnB,EAAYsE,KAAKC,KAAK,CAACL,EAAgB9C,MAAM,CAAGiD,EACpD,MAAO,GAAI,CAACpE,GAAYD,EAAW,CAC/B,IAAMqE,EAAQrE,EAAYkE,EAAgB9C,MAAM,CAChDnB,EAAWqE,KAAKC,KAAK,CAACL,EAAgB/C,KAAK,CAAGkD,EAClD,CAAC,MARGpE,EAAWiE,EAAgB/C,KAAK,CAChCnB,EAAYkE,EAAgB9C,MAAM,CAQzC,CACJ,IAEGd,EAAS,CAACwB,GAAatB,CAAAA,SAAAA,GAAsB,KAAmB,IAAZA,CAAY,EAChE,EAFJ5D,CAAAA,EAAM,iBAAOA,EAAmBA,EAAMqH,CAAS,GAEnCrH,EAAI4H,UAAU,CAAC,UAAY5H,EAAI4H,UAAU,CAAC,YAElD9G,EAAc,GACd4C,EAAS,IAETI,EAAOhD,WAAW,EAClBA,CAAAA,EAAc,IAEd0F,GAAmBxG,EAAI6H,QAAQ,CAAC,SAAW,CAAC/D,EAAOgE,mBAAmB,EAGtEhH,CAAAA,EAAc,IAEdoE,GACA3C,CAAAA,EAAgB,QAEpB,GAAM,CAACwF,EAAclH,EAAgB,CAAG,EAAYmH,QAAQ,CAAC,IACvD,CAACC,EAAajE,EAAe,CAAG,EAAYgE,QAAQ,CAAC,IACrD1E,EAAanD,EAAOgF,GA2HpB3B,GAAWzE,OAAOuF,MAAM,CAACX,EAAO,CAClCuE,SAAU,WACV1D,OAAQ,OACRD,MAAO,OACP4D,KAAM,EACNC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACR/C,UAAAA,EACAC,eAAAA,CACJ,EAAI,CAAC,CAAC,CAAEyC,EAAc,CAAC,EAAI,CACvBM,MAAO,aACX,CAAC,CAAE7D,GACGjB,GAAY/C,SAAAA,GAA0B2E,GAAe,CAAC0C,EAAe,CACvES,eAAgBhF,GAAS+B,SAAS,EAAI,QACtCkD,mBAAoBjF,GAASgC,cAAc,EAAI,UAC/CkD,iBAAkB,YAClBC,gBAAiB,yCAOdlC,MAAA,CAPuD,EAAmBmC,eAAe,CAAC,CACzFvF,SAAAA,EACAD,UAAAA,EACA2B,UAAAA,EACAC,WAAAA,EACAK,YAAAA,EACAE,UAAW/B,GAAS+B,SAAS,GAC9B,KACP,EAAI,CAAC,CAAC,CASApC,GAAgB0F,SAnhBAC,CAAkE,CAAE,IAApE,CAAEhF,OAAAA,CAAAA,CAAS9D,IAAAA,CAAAA,CAAMc,YAAAA,CAAAA,CAAcyD,MAAAA,CAAAA,CAAQY,QAAAA,CAAAA,CAAUF,MAAAA,CAAAA,CAAQlB,OAAAA,CAAAA,CAAS,CAAlE+E,EACtB,GAAIhI,EACA,MAAO,CACHd,IAAAA,EACA+I,OAAQ9I,KAAAA,EACRgF,MAAOhF,KAAAA,CACX,CACH,CACD,GAAM,CAAE+I,OAAAA,CAAAA,CAASC,KAAAA,CAAAA,CAAO,CAAGC,SArDZJ,CAA2B,CAAEvE,CAAK,CAAEU,CAAK,CAAE,IAA3C,CAAEkB,YAAAA,CAAAA,CAAcD,SAAAA,CAAAA,CAAW,CAA3B4C,EACf,GAAI7D,EAAO,CAEP,IAAMkE,EAAkB,qBAClBC,EAAe,EAAE,CACvB,IAAI,IAAIC,EAAOA,EAAQF,EAAgBG,IAAI,CAACrE,GAAQoE,EAChDD,EAAaG,IAAI,CAACjJ,SAAS+I,CAAK,CAAC,EAAE,GAEvC,GAAID,EAAaI,MAAM,CAAE,CACrB,IAAMC,EAAgB/B,IAAAA,KAAKgC,GAAG,IAAIN,GAClC,MAAO,CACHJ,OAAQ9C,EAASyD,MAAM,CAAC,GAAKC,GAAKzD,CAAW,CAAC,EAAE,CAAGsD,GACnDR,KAAM,GACV,CACJ,CAAC,MACM,CACHD,OAAQ9C,EACR+C,KAAM,GACV,CACJ,CAAC,GACG,iBAAO1E,EACP,MAAO,CACHyE,OAAQ7C,EACR8C,KAAM,GACV,CACH,CACD,IAAMD,EAAS,IACR,IAAIa,IAQP,CACItF,EACAA,EAAAA,EACH,CAACuF,GAAG,CAAC,GAAK5D,EAAS6D,IAAI,CAAC,GAAKhJ,GAAKiJ,IAAM9D,CAAQ,CAACA,EAASsD,MAAM,CAAG,EAAE,GACzE,CACD,MAAO,CACHR,OAAAA,EACAC,KAAM,GACV,CACJ,EASyCnF,EAAQS,EAAOU,GAC9CgF,EAAOjB,EAAOQ,MAAM,CAAG,EAC7B,MAAO,CACHvE,MAAO,GAAUgE,MAAAA,EAAyBhE,EAAV,OAAe,CAC/C8D,OAAQC,EAAOc,GAAG,CAAC,CAACE,EAAGE,IAAI,GAKjBjB,MAAAA,CALoBlF,EAAO,CAC7BD,OAAAA,EACA9D,IAAAA,EACAmF,QAAAA,EACAZ,MAAOyF,CACX,GAAG,KAA8Bf,MAAAA,CAA3BA,MAAAA,EAAee,EAAIE,EAAI,CAAC,EAAQzD,MAAA,CAALwC,IAAQkB,IAAI,CAAC,MAOlDnK,IAAK+D,EAAO,CACRD,OAAAA,EACA9D,IAAAA,EACAmF,QAAAA,EACAZ,MAAOyE,CAAM,CAACiB,EAAK,EAE3B,CACJ,EAof2C,CACnCnG,OAAAA,EACA9D,IAAAA,EACAc,YAAAA,EACAyD,MAAOlB,EACP8B,QAAS7B,EACT2B,MAAAA,EACAlB,OAAAA,CACJ,GACIF,GAAY7D,EAgBVW,GAAY,EAAYyJ,MAAM,CAACnG,GACpC,EAAWoG,SAAS,CAAC,IAAI,CACtB1J,GAAUY,OAAO,CAAG0C,CACxB,EAAG,CACCA,EACH,EACD,IAAMrD,GAAuB,EAAYwJ,MAAM,CAAChF,GAC/C,EAAWiF,SAAS,CAAC,IAAI,CACtBzJ,GAAqBW,OAAO,CAAG6D,CACnC,EAAG,CACCA,EACH,EACD,IAAMkF,GAAiBpL,EAAS,CAC5BwE,OAAAA,EACAP,cAAAA,GACAC,UAAAA,EACAC,SAAAA,EACAC,WAAAA,EACAC,UAAAA,EACAC,SAAAA,GACAC,UAAAA,GACAG,QAAAA,EACAE,OAAAA,EACAvB,cAAAA,EACAoB,KAAAA,EACA7C,YAAAA,EACAJ,YAAAA,EACAqD,OAAAA,EACAF,UAAAA,GACAlD,UAAAA,GACAC,qBAAAA,GACAC,gBAAAA,EACAmD,eAAAA,CACJ,EAAGG,GACH,OAAqB5E,EAAOW,OAAO,CAACkE,aAAa,CAAC7E,EAAOW,OAAO,CAACmE,QAAQ,CAAE,IAAI,CAAgB9E,EAAOW,OAAO,CAACkE,aAAa,CAACrB,EAAchE,OAAOuF,MAAM,CAAC,CAAC,EAAGgG,GAAgB,CACxK3F,IAAKzB,CACT,IAAKgC,EAKS3F,EAAOW,OAAO,CAACkE,aAAa,CAAC5E,EAAMU,OAAO,CAAE,IAAI,CAAgBX,EAAOW,OAAO,CAACkE,aAAa,CAAC,OAAQrF,OAAOuF,MAAM,CAAC,CAC7HiG,IAAK,UAAYpH,GAAcnD,GAAG,CAAGmD,GAAc4F,MAAM,CAAG5F,GAAc8B,KAAK,CAC/EuF,IAAK,UACLC,GAAI,QACJC,KAAMvH,GAAc4F,MAAM,CAAG9I,KAAAA,EAAYkD,GAAcnD,GAAG,CAE1D2K,YAAaxH,GAAc4F,MAAM,CACjC3C,WAAYjD,GAAc8B,KAAK,CAC/B2F,YAAazG,EAAKyG,WAAW,EAC9BtI,EAAgBC,MAAoB,IAAI,CAC/C,EAEAtD,CAAAA,EAAAA,OAAe,CADA6F,EAGV,oBAAO7F,EAAQiB,OAAO,EAAoB,iBAAOjB,EAAQiB,OAAO,EAAiBjB,IAAwB,GAAxBA,EAAQiB,OAAO,GAAe,KAAsC,IAA/BjB,EAAQiB,OAAO,CAAC2K,UAAU,GACnJ9L,OAAO2C,cAAc,CAACzC,EAAQiB,OAAO,CAAE,aAAc,CAAElB,MAAO,EAAK,GACnED,OAAOuF,MAAM,CAACrF,EAAQiB,OAAO,CAAEjB,GAC/B6L,EAAO7L,OAAO,CAAGA,EAAQiB,OAAO,mCCxrBlCnB,OAAAA,cAAAA,CAAAA,EAAAA,aAA6C,CACzCC,MAAO,EACX,GACAC,EAAAA,eAAuB,CACvB,SAAyB6J,CAA4E,CAAE,IAA9E,CAAEzF,SAAAA,CAAAA,CAAWD,UAAAA,CAAAA,CAAY2B,UAAAA,CAAAA,CAAYC,WAAAA,CAAAA,CAAaK,YAAAA,CAAAA,CAAcE,UAAAA,CAAAA,CAAY,CAA5EuD,EAEfiC,EAAWhG,GAAa1B,EACxB2H,EAAYhG,GAAc5B,EAC1B6H,EAAsB5F,EAAYuC,UAAU,CAAC,mBAAsB,uGAAwG,EAAE,QACnL,GAAgBoD,EACL,4DAAwEA,MAAAA,CAAZD,EAAS,KAAyGG,MAAAA,CAAtGF,EAAU,8FAAuGC,MAAAA,CALxLlG,GAAaC,EAAa,IAAM,IAAI,CAK6I,SAAkJK,MAAAA,CAA3I4F,EAAoB,yHAAmIxE,MAAA,CAAZpB,EAAY,mBAGpV,yGAAkLA,MAAAA,CAD7JE,YAAAA,EAA0B,WAAaA,UAAAA,EAAwB,iBAAmB,MAAM,CACgB,uDAAiEkB,MAAA,CAAZpB,EAAY,kBAFpM,mCCPL,SAAS8F,EAAcrC,CAAmC,CAAE,IAArC,CAAEhF,OAAAA,CAAAA,CAAS9D,IAAAA,CAAAA,CAAMuE,MAAAA,CAAAA,CAAQY,QAAAA,CAAAA,CAAU,CAAnC2D,EAkCnB,MAAO,GAAsBsC,MAAAA,CAAnBtH,EAAOuH,IAAI,CAAC,SAAoC9G,MAAAA,CAA7B6G,mBAAmBpL,GAAK,OAAgBmF,MAAAA,CAAXZ,EAAM,OAAmBkC,MAAA,CAAdtB,GAAW,GACpF,CAvCApG,OAAAA,cAAAA,CAAAA,EAAAA,aAA6C,CACzCC,MAAO,EACX,GACAC,EAAAA,OAAe,CAAG,KAAK,EAuCvBkM,EAAcG,kBAAkB,CAAG,GAEnCrM,EAAAA,OAAe,CADAkM,wBC5CfL,EAAA7L,OAAA,CAAAsM,EAAA","sources":["webpack://_N_E/./node_modules/next/dist/client/image.js","webpack://_N_E/./node_modules/next/dist/shared/lib/image-blur-svg.js","webpack://_N_E/./node_modules/next/dist/shared/lib/image-loader.js","webpack://_N_E/./node_modules/next/image.js","webpack://_N_E/<anon>"],"sourcesContent":["\"use client\";\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = void 0;\nvar _extends = require(\"@swc/helpers/lib/_extends.js\").default;\nvar _interop_require_default = require(\"@swc/helpers/lib/_interop_require_default.js\").default;\nvar _interop_require_wildcard = require(\"@swc/helpers/lib/_interop_require_wildcard.js\").default;\nvar _object_without_properties_loose = require(\"@swc/helpers/lib/_object_without_properties_loose.js\").default;\nvar _react = _interop_require_wildcard(require(\"react\"));\nvar _head = _interop_require_default(require(\"../shared/lib/head\"));\nvar _imageBlurSvg = require(\"../shared/lib/image-blur-svg\");\nvar _imageConfig = require(\"../shared/lib/image-config\");\nvar _imageConfigContext = require(\"../shared/lib/image-config-context\");\nvar _warnOnce = require(\"../shared/lib/utils/warn-once\");\nvar _imageLoader = _interop_require_default(require(\"next/dist/shared/lib/image-loader\"));\n\nconst configEnv = process.env.__NEXT_IMAGE_OPTS;\nconst allImgs = new Map();\nlet perfObserver;\nif (typeof window === 'undefined') {\n    globalThis.__NEXT_IMAGE_IMPORTED = true;\n}\nconst VALID_LOADING_VALUES = [\n    'lazy',\n    'eager',\n    undefined\n];\nfunction isStaticRequire(src) {\n    return src.default !== undefined;\n}\nfunction isStaticImageData(src) {\n    return src.src !== undefined;\n}\nfunction isStaticImport(src) {\n    return typeof src === 'object' && (isStaticRequire(src) || isStaticImageData(src));\n}\nfunction getWidths({ deviceSizes , allSizes  }, width, sizes) {\n    if (sizes) {\n        // Find all the \"vw\" percent sizes used in the sizes prop\n        const viewportWidthRe = /(^|\\s)(1?\\d?\\d)vw/g;\n        const percentSizes = [];\n        for(let match; match = viewportWidthRe.exec(sizes); match){\n            percentSizes.push(parseInt(match[2]));\n        }\n        if (percentSizes.length) {\n            const smallestRatio = Math.min(...percentSizes) * 0.01;\n            return {\n                widths: allSizes.filter((s)=>s >= deviceSizes[0] * smallestRatio),\n                kind: 'w'\n            };\n        }\n        return {\n            widths: allSizes,\n            kind: 'w'\n        };\n    }\n    if (typeof width !== 'number') {\n        return {\n            widths: deviceSizes,\n            kind: 'w'\n        };\n    }\n    const widths = [\n        ...new Set(// > This means that most OLED screens that say they are 3x resolution,\n        // > are actually 3x in the green color, but only 1.5x in the red and\n        // > blue colors. Showing a 3x resolution image in the app vs a 2x\n        // > resolution image will be visually the same, though the 3x image\n        // > takes significantly more data. Even true 3x resolution screens are\n        // > wasteful as the human eye cannot see that level of detail without\n        // > something like a magnifying glass.\n        // https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/capping-image-fidelity-on-ultra-high-resolution-devices.html\n        [\n            width,\n            width * 2 /*, width * 3*/ \n        ].map((w)=>allSizes.find((p)=>p >= w) || allSizes[allSizes.length - 1])), \n    ];\n    return {\n        widths,\n        kind: 'x'\n    };\n}\nfunction generateImgAttrs({ config , src , unoptimized , width , quality , sizes , loader  }) {\n    if (unoptimized) {\n        return {\n            src,\n            srcSet: undefined,\n            sizes: undefined\n        };\n    }\n    const { widths , kind  } = getWidths(config, width, sizes);\n    const last = widths.length - 1;\n    return {\n        sizes: !sizes && kind === 'w' ? '100vw' : sizes,\n        srcSet: widths.map((w, i)=>`${loader({\n                config,\n                src,\n                quality,\n                width: w\n            })} ${kind === 'w' ? w : i + 1}${kind}`).join(', '),\n        // It's intended to keep `src` the last attribute because React updates\n        // attributes in order. If we keep `src` the first one, Safari will\n        // immediately start to fetch `src`, before `sizes` and `srcSet` are even\n        // updated by React. That causes multiple unnecessary requests if `srcSet`\n        // and `sizes` are defined.\n        // This bug cannot be reproduced in Chrome or Firefox.\n        src: loader({\n            config,\n            src,\n            quality,\n            width: widths[last]\n        })\n    };\n}\nfunction getInt(x) {\n    if (typeof x === 'number' || typeof x === 'undefined') {\n        return x;\n    }\n    if (typeof x === 'string' && /^[0-9]+$/.test(x)) {\n        return parseInt(x, 10);\n    }\n    return NaN;\n}\n// See https://stackoverflow.com/q/39777833/266535 for why we use this ref\n// handler instead of the img's onLoad attribute.\nfunction handleLoading(img, src, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized) {\n    if (!img || img['data-loaded-src'] === src) {\n        return;\n    }\n    img['data-loaded-src'] = src;\n    const p = 'decode' in img ? img.decode() : Promise.resolve();\n    p.catch(()=>{}).then(()=>{\n        if (!img.parentElement || !img.isConnected) {\n            // Exit early in case of race condition:\n            // - onload() is called\n            // - decode() is called but incomplete\n            // - unmount is called\n            // - decode() completes\n            return;\n        }\n        if (placeholder === 'blur') {\n            setBlurComplete(true);\n        }\n        if (onLoadRef == null ? void 0 : onLoadRef.current) {\n            // Since we don't have the SyntheticEvent here,\n            // we must create one with the same shape.\n            // See https://reactjs.org/docs/events.html\n            const event = new Event('load');\n            Object.defineProperty(event, 'target', {\n                writable: false,\n                value: img\n            });\n            let prevented = false;\n            let stopped = false;\n            onLoadRef.current(_extends({}, event, {\n                nativeEvent: event,\n                currentTarget: img,\n                target: img,\n                isDefaultPrevented: ()=>prevented,\n                isPropagationStopped: ()=>stopped,\n                persist: ()=>{},\n                preventDefault: ()=>{\n                    prevented = true;\n                    event.preventDefault();\n                },\n                stopPropagation: ()=>{\n                    stopped = true;\n                    event.stopPropagation();\n                }\n            }));\n        }\n        if (onLoadingCompleteRef == null ? void 0 : onLoadingCompleteRef.current) {\n            onLoadingCompleteRef.current(img);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (img.getAttribute('data-nimg') === 'fill') {\n                if (!unoptimized && (!img.getAttribute('sizes') || img.getAttribute('sizes') === '100vw')) {\n                    let widthViewportRatio = img.getBoundingClientRect().width / window.innerWidth;\n                    if (widthViewportRatio < 0.6) {\n                        (0, _warnOnce).warnOnce(`Image with src \"${src}\" has \"fill\" but is missing \"sizes\" prop. Please add it to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/image#sizes`);\n                    }\n                }\n                if (img.parentElement) {\n                    const { position  } = window.getComputedStyle(img.parentElement);\n                    const valid = [\n                        'absolute',\n                        'fixed',\n                        'relative'\n                    ];\n                    if (!valid.includes(position)) {\n                        (0, _warnOnce).warnOnce(`Image with src \"${src}\" has \"fill\" and parent element with invalid \"position\". Provided \"${position}\" should be one of ${valid.map(String).join(',')}.`);\n                    }\n                }\n                if (img.height === 0) {\n                    (0, _warnOnce).warnOnce(`Image with src \"${src}\" has \"fill\" and a height value of 0. This is likely because the parent element of the image has not been styled to have a set height.`);\n                }\n            }\n            const heightModified = img.height.toString() !== img.getAttribute('height');\n            const widthModified = img.width.toString() !== img.getAttribute('width');\n            if (heightModified && !widthModified || !heightModified && widthModified) {\n                (0, _warnOnce).warnOnce(`Image with src \"${src}\" has either width or height modified, but not the other. If you use CSS to change the size of your image, also include the styles 'width: \"auto\"' or 'height: \"auto\"' to maintain the aspect ratio.`);\n            }\n        }\n    });\n}\nfunction getDynamicProps(fetchPriority) {\n    const [majorStr, minorStr] = _react.version.split('.');\n    const major = parseInt(majorStr, 10);\n    const minor = parseInt(minorStr, 10);\n    if (major > 18 || major === 18 && minor >= 3) {\n        // In React 18.3.0 or newer, we must use camelCase\n        // prop to avoid \"Warning: Invalid DOM property\".\n        // See https://github.com/facebook/react/pull/25927\n        return {\n            fetchPriority\n        };\n    }\n    // In React 18.2.0 or older, we must use lowercase prop\n    // to avoid \"Warning: Invalid DOM property\".\n    return {\n        fetchpriority: fetchPriority\n    };\n}\nconst ImageElement = /*#__PURE__*/ (0, _react).forwardRef((_param, forwardedRef)=>{\n    var { imgAttributes , heightInt , widthInt , qualityInt , className , imgStyle , blurStyle , isLazy , fetchPriority , fill , placeholder , loading , srcString , config , unoptimized , loader , onLoadRef , onLoadingCompleteRef , setBlurComplete , setShowAltText , onLoad , onError  } = _param, rest = _object_without_properties_loose(_param, [\n        \"imgAttributes\",\n        \"heightInt\",\n        \"widthInt\",\n        \"qualityInt\",\n        \"className\",\n        \"imgStyle\",\n        \"blurStyle\",\n        \"isLazy\",\n        \"fetchPriority\",\n        \"fill\",\n        \"placeholder\",\n        \"loading\",\n        \"srcString\",\n        \"config\",\n        \"unoptimized\",\n        \"loader\",\n        \"onLoadRef\",\n        \"onLoadingCompleteRef\",\n        \"setBlurComplete\",\n        \"setShowAltText\",\n        \"onLoad\",\n        \"onError\"\n    ]);\n    loading = isLazy ? 'lazy' : loading;\n    return /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/ _react.default.createElement(\"img\", Object.assign({}, rest, getDynamicProps(fetchPriority), {\n        // @ts-expect-error - TODO: upgrade to `@types/react@18`\n        loading: loading,\n        width: widthInt,\n        height: heightInt,\n        decoding: \"async\",\n        \"data-nimg\": fill ? 'fill' : '1',\n        className: className,\n        style: _extends({}, imgStyle, blurStyle)\n    }, imgAttributes, {\n        ref: (0, _react).useCallback((img)=>{\n            if (forwardedRef) {\n                if (typeof forwardedRef === 'function') forwardedRef(img);\n                else if (typeof forwardedRef === 'object') {\n                    // @ts-ignore - .current is read only it's usually assigned by react internally\n                    forwardedRef.current = img;\n                }\n            }\n            if (!img) {\n                return;\n            }\n            if (onError) {\n                // If the image has an error before react hydrates, then the error is lost.\n                // The workaround is to wait until the image is mounted which is after hydration,\n                // then we set the src again to trigger the error handler (if there was an error).\n                // eslint-disable-next-line no-self-assign\n                img.src = img.src;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (!srcString) {\n                    console.error(`Image is missing required \"src\" property:`, img);\n                }\n                if (img.getAttribute('alt') === null) {\n                    console.error(`Image is missing required \"alt\" property. Please add Alternative Text to describe the image for screen readers and search engines.`);\n                }\n            }\n            if (img.complete) {\n                handleLoading(img, srcString, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized);\n            }\n        }, [\n            srcString,\n            placeholder,\n            onLoadRef,\n            onLoadingCompleteRef,\n            setBlurComplete,\n            onError,\n            unoptimized,\n            forwardedRef, \n        ]),\n        onLoad: (event)=>{\n            const img = event.currentTarget;\n            handleLoading(img, srcString, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized);\n        },\n        onError: (event)=>{\n            // if the real image fails to load, this will ensure \"alt\" is visible\n            setShowAltText(true);\n            if (placeholder === 'blur') {\n                // If the real image fails to load, this will still remove the placeholder.\n                setBlurComplete(true);\n            }\n            if (onError) {\n                onError(event);\n            }\n        }\n    })));\n});\nconst Image = /*#__PURE__*/ (0, _react).forwardRef((_param, forwardedRef)=>{\n    var { src , sizes , unoptimized =false , priority =false , loading , className , quality , width , height , fill , style , onLoad , onLoadingComplete , placeholder ='empty' , blurDataURL , // @ts-expect-error - TODO: upgrade to `@types/react@18`\n    fetchPriority , layout , objectFit , objectPosition , lazyBoundary , lazyRoot  } = _param, all = _object_without_properties_loose(_param, [\n        \"src\",\n        \"sizes\",\n        \"unoptimized\",\n        \"priority\",\n        \"loading\",\n        \"className\",\n        \"quality\",\n        \"width\",\n        \"height\",\n        \"fill\",\n        \"style\",\n        \"onLoad\",\n        \"onLoadingComplete\",\n        \"placeholder\",\n        \"blurDataURL\",\n        \"fetchPriority\",\n        \"layout\",\n        \"objectFit\",\n        \"objectPosition\",\n        \"lazyBoundary\",\n        \"lazyRoot\"\n    ]);\n    const configContext = (0, _react).useContext(_imageConfigContext.ImageConfigContext);\n    const config = (0, _react).useMemo(()=>{\n        const c = configEnv || configContext || _imageConfig.imageConfigDefault;\n        const allSizes = [\n            ...c.deviceSizes,\n            ...c.imageSizes\n        ].sort((a, b)=>a - b);\n        const deviceSizes = c.deviceSizes.sort((a, b)=>a - b);\n        return _extends({}, c, {\n            allSizes,\n            deviceSizes\n        });\n    }, [\n        configContext\n    ]);\n    let rest = all;\n    let loader = rest.loader || _imageLoader.default;\n    // Remove property so it's not spread on <img> element\n    delete rest.loader;\n    // This special value indicates that the user\n    // didn't define a \"loader\" prop or \"loader\" config.\n    const isDefaultLoader = '__next_img_default' in loader;\n    if (isDefaultLoader) {\n        if (config.loader === 'custom') {\n            throw new Error(`Image with src \"${src}\" is missing \"loader\" prop.` + `\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader`);\n        }\n    } else {\n        // The user defined a \"loader\" prop or config.\n        // Since the config object is internal only, we\n        // must not pass it to the user-defined \"loader\".\n        const customImageLoader = loader;\n        var _tmp;\n        _tmp = (obj)=>{\n            const { config: _  } = obj, opts = _object_without_properties_loose(obj, [\n                \"config\"\n            ]);\n            return customImageLoader(opts);\n        }, loader = _tmp, _tmp;\n    }\n    if (layout) {\n        if (layout === 'fill') {\n            fill = true;\n        }\n        const layoutToStyle = {\n            intrinsic: {\n                maxWidth: '100%',\n                height: 'auto'\n            },\n            responsive: {\n                width: '100%',\n                height: 'auto'\n            }\n        };\n        const layoutToSizes = {\n            responsive: '100vw',\n            fill: '100vw'\n        };\n        const layoutStyle = layoutToStyle[layout];\n        if (layoutStyle) {\n            style = _extends({}, style, layoutStyle);\n        }\n        const layoutSizes = layoutToSizes[layout];\n        if (layoutSizes && !sizes) {\n            sizes = layoutSizes;\n        }\n    }\n    let staticSrc = '';\n    let widthInt = getInt(width);\n    let heightInt = getInt(height);\n    let blurWidth;\n    let blurHeight;\n    if (isStaticImport(src)) {\n        const staticImageData = isStaticRequire(src) ? src.default : src;\n        if (!staticImageData.src) {\n            throw new Error(`An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received ${JSON.stringify(staticImageData)}`);\n        }\n        if (!staticImageData.height || !staticImageData.width) {\n            throw new Error(`An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received ${JSON.stringify(staticImageData)}`);\n        }\n        blurWidth = staticImageData.blurWidth;\n        blurHeight = staticImageData.blurHeight;\n        blurDataURL = blurDataURL || staticImageData.blurDataURL;\n        staticSrc = staticImageData.src;\n        if (!fill) {\n            if (!widthInt && !heightInt) {\n                widthInt = staticImageData.width;\n                heightInt = staticImageData.height;\n            } else if (widthInt && !heightInt) {\n                const ratio = widthInt / staticImageData.width;\n                heightInt = Math.round(staticImageData.height * ratio);\n            } else if (!widthInt && heightInt) {\n                const ratio = heightInt / staticImageData.height;\n                widthInt = Math.round(staticImageData.width * ratio);\n            }\n        }\n    }\n    src = typeof src === 'string' ? src : staticSrc;\n    let isLazy = !priority && (loading === 'lazy' || typeof loading === 'undefined');\n    if (!src || src.startsWith('data:') || src.startsWith('blob:')) {\n        // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n        unoptimized = true;\n        isLazy = false;\n    }\n    if (config.unoptimized) {\n        unoptimized = true;\n    }\n    if (isDefaultLoader && src.endsWith('.svg') && !config.dangerouslyAllowSVG) {\n        // Special case to make svg serve as-is to avoid proxying\n        // through the built-in Image Optimization API.\n        unoptimized = true;\n    }\n    if (priority) {\n        fetchPriority = 'high';\n    }\n    const [blurComplete, setBlurComplete] = (0, _react).useState(false);\n    const [showAltText, setShowAltText] = (0, _react).useState(false);\n    const qualityInt = getInt(quality);\n    if (process.env.NODE_ENV !== 'production') {\n        if (config.output === 'export' && isDefaultLoader && !unoptimized) {\n            throw new Error(`Image Optimization using the default loader is not compatible with \\`{ output: 'export' }\\`.\n  Possible solutions:\n    - Remove \\`{ output: 'export' }\\` and run \"next start\" to run server mode including the Image Optimization API.\n    - Configure \\`{ images: { unoptimized: true } }\\` in \\`next.config.js\\` to disable the Image Optimization API.\n  Read more: https://nextjs.org/docs/messages/export-image-api`);\n        }\n        if (!src) {\n            // React doesn't show the stack trace and there's\n            // no `src` to help identify which image, so we\n            // instead console.error(ref) during mount.\n            unoptimized = true;\n        } else {\n            if (fill) {\n                if (width) {\n                    throw new Error(`Image with src \"${src}\" has both \"width\" and \"fill\" properties. Only one should be used.`);\n                }\n                if (height) {\n                    throw new Error(`Image with src \"${src}\" has both \"height\" and \"fill\" properties. Only one should be used.`);\n                }\n                if ((style == null ? void 0 : style.position) && style.position !== 'absolute') {\n                    throw new Error(`Image with src \"${src}\" has both \"fill\" and \"style.position\" properties. Images with \"fill\" always use position absolute - it cannot be modified.`);\n                }\n                if ((style == null ? void 0 : style.width) && style.width !== '100%') {\n                    throw new Error(`Image with src \"${src}\" has both \"fill\" and \"style.width\" properties. Images with \"fill\" always use width 100% - it cannot be modified.`);\n                }\n                if ((style == null ? void 0 : style.height) && style.height !== '100%') {\n                    throw new Error(`Image with src \"${src}\" has both \"fill\" and \"style.height\" properties. Images with \"fill\" always use height 100% - it cannot be modified.`);\n                }\n            } else {\n                if (typeof widthInt === 'undefined') {\n                    throw new Error(`Image with src \"${src}\" is missing required \"width\" property.`);\n                } else if (isNaN(widthInt)) {\n                    throw new Error(`Image with src \"${src}\" has invalid \"width\" property. Expected a numeric value in pixels but received \"${width}\".`);\n                }\n                if (typeof heightInt === 'undefined') {\n                    throw new Error(`Image with src \"${src}\" is missing required \"height\" property.`);\n                } else if (isNaN(heightInt)) {\n                    throw new Error(`Image with src \"${src}\" has invalid \"height\" property. Expected a numeric value in pixels but received \"${height}\".`);\n                }\n            }\n        }\n        if (!VALID_LOADING_VALUES.includes(loading)) {\n            throw new Error(`Image with src \"${src}\" has invalid \"loading\" property. Provided \"${loading}\" should be one of ${VALID_LOADING_VALUES.map(String).join(',')}.`);\n        }\n        if (priority && loading === 'lazy') {\n            throw new Error(`Image with src \"${src}\" has both \"priority\" and \"loading='lazy'\" properties. Only one should be used.`);\n        }\n        if (placeholder === 'blur') {\n            if (widthInt && heightInt && widthInt * heightInt < 1600) {\n                (0, _warnOnce).warnOnce(`Image with src \"${src}\" is smaller than 40x40. Consider removing the \"placeholder='blur'\" property to improve performance.`);\n            }\n            if (!blurDataURL) {\n                const VALID_BLUR_EXT = [\n                    'jpeg',\n                    'png',\n                    'webp',\n                    'avif'\n                ] // should match next-image-loader\n                ;\n                throw new Error(`Image with src \"${src}\" has \"placeholder='blur'\" property but is missing the \"blurDataURL\" property.\n          Possible solutions:\n            - Add a \"blurDataURL\" property, the contents should be a small Data URL to represent the image\n            - Change the \"src\" property to a static import with one of the supported file types: ${VALID_BLUR_EXT.join(',')}\n            - Remove the \"placeholder\" property, effectively no blur effect\n          Read more: https://nextjs.org/docs/messages/placeholder-blur-data-url`);\n            }\n        }\n        if ('ref' in rest) {\n            (0, _warnOnce).warnOnce(`Image with src \"${src}\" is using unsupported \"ref\" property. Consider using the \"onLoadingComplete\" property instead.`);\n        }\n        if (!unoptimized && loader !== _imageLoader.default) {\n            const urlStr = loader({\n                config,\n                src,\n                width: widthInt || 400,\n                quality: qualityInt || 75\n            });\n            let url;\n            try {\n                url = new URL(urlStr);\n            } catch (err) {}\n            if (urlStr === src || url && url.pathname === src && !url.search) {\n                (0, _warnOnce).warnOnce(`Image with src \"${src}\" has a \"loader\" property that does not implement width. Please implement it or use the \"unoptimized\" property instead.` + `\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader-width`);\n            }\n        }\n        for (const [legacyKey, legacyValue] of Object.entries({\n            layout,\n            objectFit,\n            objectPosition,\n            lazyBoundary,\n            lazyRoot\n        })){\n            if (legacyValue) {\n                (0, _warnOnce).warnOnce(`Image with src \"${src}\" has legacy prop \"${legacyKey}\". Did you forget to run the codemod?` + `\\nRead more: https://nextjs.org/docs/messages/next-image-upgrade-to-13`);\n            }\n        }\n        if (typeof window !== 'undefined' && !perfObserver && window.PerformanceObserver) {\n            perfObserver = new PerformanceObserver((entryList)=>{\n                for (const entry of entryList.getEntries()){\n                    var ref;\n                    // @ts-ignore - missing \"LargestContentfulPaint\" class with \"element\" prop\n                    const imgSrc = (entry == null ? void 0 : (ref = entry.element) == null ? void 0 : ref.src) || '';\n                    const lcpImage = allImgs.get(imgSrc);\n                    if (lcpImage && !lcpImage.priority && lcpImage.placeholder !== 'blur' && !lcpImage.src.startsWith('data:') && !lcpImage.src.startsWith('blob:')) {\n                        // https://web.dev/lcp/#measure-lcp-in-javascript\n                        (0, _warnOnce).warnOnce(`Image with src \"${lcpImage.src}\" was detected as the Largest Contentful Paint (LCP). Please add the \"priority\" property if this image is above the fold.` + `\\nRead more: https://nextjs.org/docs/api-reference/next/image#priority`);\n                    }\n                }\n            });\n            try {\n                perfObserver.observe({\n                    type: 'largest-contentful-paint',\n                    buffered: true\n                });\n            } catch (err) {\n                // Log error but don't crash the app\n                console.error(err);\n            }\n        }\n    }\n    const imgStyle = Object.assign(fill ? {\n        position: 'absolute',\n        height: '100%',\n        width: '100%',\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        objectFit,\n        objectPosition\n    } : {}, showAltText ? {} : {\n        color: 'transparent'\n    }, style);\n    const blurStyle = placeholder === 'blur' && blurDataURL && !blurComplete ? {\n        backgroundSize: imgStyle.objectFit || 'cover',\n        backgroundPosition: imgStyle.objectPosition || '50% 50%',\n        backgroundRepeat: 'no-repeat',\n        backgroundImage: `url(\"data:image/svg+xml;charset=utf-8,${(0, _imageBlurSvg).getImageBlurSvg({\n            widthInt,\n            heightInt,\n            blurWidth,\n            blurHeight,\n            blurDataURL,\n            objectFit: imgStyle.objectFit\n        })}\")`\n    } : {};\n    if (process.env.NODE_ENV === 'development') {\n        if (blurStyle.backgroundImage && (blurDataURL == null ? void 0 : blurDataURL.startsWith('/'))) {\n            // During `next dev`, we don't want to generate blur placeholders with webpack\n            // because it can delay starting the dev server. Instead, `next-image-loader.js`\n            // will inline a special url to lazily generate the blur placeholder at request time.\n            blurStyle.backgroundImage = `url(\"${blurDataURL}\")`;\n        }\n    }\n    const imgAttributes = generateImgAttrs({\n        config,\n        src,\n        unoptimized,\n        width: widthInt,\n        quality: qualityInt,\n        sizes,\n        loader\n    });\n    let srcString = src;\n    if (process.env.NODE_ENV !== 'production') {\n        if (typeof window !== 'undefined') {\n            let fullUrl;\n            try {\n                fullUrl = new URL(imgAttributes.src);\n            } catch (e) {\n                fullUrl = new URL(imgAttributes.src, window.location.href);\n            }\n            allImgs.set(fullUrl.href, {\n                src,\n                priority,\n                placeholder\n            });\n        }\n    }\n    const onLoadRef = (0, _react).useRef(onLoad);\n    (0, _react).useEffect(()=>{\n        onLoadRef.current = onLoad;\n    }, [\n        onLoad\n    ]);\n    const onLoadingCompleteRef = (0, _react).useRef(onLoadingComplete);\n    (0, _react).useEffect(()=>{\n        onLoadingCompleteRef.current = onLoadingComplete;\n    }, [\n        onLoadingComplete\n    ]);\n    const imgElementArgs = _extends({\n        isLazy,\n        imgAttributes,\n        heightInt,\n        widthInt,\n        qualityInt,\n        className,\n        imgStyle,\n        blurStyle,\n        loading,\n        config,\n        fetchPriority,\n        fill,\n        unoptimized,\n        placeholder,\n        loader,\n        srcString,\n        onLoadRef,\n        onLoadingCompleteRef,\n        setBlurComplete,\n        setShowAltText\n    }, rest);\n    return /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/ _react.default.createElement(ImageElement, Object.assign({}, imgElementArgs, {\n        ref: forwardedRef\n    })), priority ? // Note how we omit the `href` attribute, as it would only be relevant\n    // for browsers that do not support `imagesrcset`, and in those cases\n    // it would likely cause the incorrect image to be preloaded.\n    //\n    // https://html.spec.whatwg.org/multipage/semantics.html#attr-link-imagesrcset\n    /*#__PURE__*/ _react.default.createElement(_head.default, null, /*#__PURE__*/ _react.default.createElement(\"link\", Object.assign({\n        key: '__nimg-' + imgAttributes.src + imgAttributes.srcSet + imgAttributes.sizes,\n        rel: \"preload\",\n        as: \"image\",\n        href: imgAttributes.srcSet ? undefined : imgAttributes.src,\n        // @ts-expect-error - TODO: upgrade to `@types/react@18`\n        imageSrcSet: imgAttributes.srcSet,\n        imageSizes: imgAttributes.sizes,\n        crossOrigin: rest.crossOrigin\n    }, getDynamicProps(fetchPriority)))) : null);\n});\nvar _default = Image;\nexports.default = _default;\n\nif ((typeof exports.default === 'function' || (typeof exports.default === 'object' && exports.default !== null)) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', { value: true });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}\n\n//# sourceMappingURL=image.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getImageBlurSvg = getImageBlurSvg;\nfunction getImageBlurSvg({ widthInt , heightInt , blurWidth , blurHeight , blurDataURL , objectFit  }) {\n    const std = blurWidth && blurHeight ? '1' : '20';\n    const svgWidth = blurWidth || widthInt;\n    const svgHeight = blurHeight || heightInt;\n    const feComponentTransfer = blurDataURL.startsWith('data:image/jpeg') ? `%3CfeComponentTransfer%3E%3CfeFuncA type='discrete' tableValues='1 1'/%3E%3C/feComponentTransfer%3E%` : '';\n    if (svgWidth && svgHeight) {\n        return `%3Csvg xmlns='http%3A//www.w3.org/2000/svg' viewBox='0 0 ${svgWidth} ${svgHeight}'%3E%3Cfilter id='b' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='${std}'/%3E${feComponentTransfer}%3C/filter%3E%3Cimage preserveAspectRatio='none' filter='url(%23b)' x='0' y='0' height='100%25' width='100%25' href='${blurDataURL}'/%3E%3C/svg%3E`;\n    }\n    const preserveAspectRatio = objectFit === 'contain' ? 'xMidYMid' : objectFit === 'cover' ? 'xMidYMid slice' : 'none';\n    return `%3Csvg xmlns='http%3A//www.w3.org/2000/svg'%3E%3Cimage style='filter:blur(20px)' preserveAspectRatio='${preserveAspectRatio}' x='0' y='0' height='100%25' width='100%25' href='${blurDataURL}'/%3E%3C/svg%3E`;\n}\n\n//# sourceMappingURL=image-blur-svg.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = void 0;\nfunction defaultLoader({ config , src , width , quality  }) {\n    if (process.env.NODE_ENV !== 'production') {\n        const missingValues = [];\n        // these should always be provided but make sure they are\n        if (!src) missingValues.push('src');\n        if (!width) missingValues.push('width');\n        if (missingValues.length > 0) {\n            throw new Error(`Next Image Optimization requires ${missingValues.join(', ')} to be provided. Make sure you pass them as props to the \\`next/image\\` component. Received: ${JSON.stringify({\n                src,\n                width,\n                quality\n            })}`);\n        }\n        if (src.startsWith('//')) {\n            throw new Error(`Failed to parse src \"${src}\" on \\`next/image\\`, protocol-relative URL (//) must be changed to an absolute URL (http:// or https://)`);\n        }\n        if (!src.startsWith('/') && (config.domains || config.remotePatterns)) {\n            let parsedSrc;\n            try {\n                parsedSrc = new URL(src);\n            } catch (err) {\n                console.error(err);\n                throw new Error(`Failed to parse src \"${src}\" on \\`next/image\\`, if using relative image it must start with a leading slash \"/\" or be an absolute URL (http:// or https://)`);\n            }\n            if (process.env.NODE_ENV !== 'test' && // micromatch isn't compatible with edge runtime\n            process.env.NEXT_RUNTIME !== 'edge') {\n                // We use dynamic require because this should only error in development\n                const { hasMatch  } = require('./match-remote-pattern');\n                if (!hasMatch(config.domains, config.remotePatterns, parsedSrc)) {\n                    throw new Error(`Invalid src prop (${src}) on \\`next/image\\`, hostname \"${parsedSrc.hostname}\" is not configured under images in your \\`next.config.js\\`\\n` + `See more info: https://nextjs.org/docs/messages/next-image-unconfigured-host`);\n                }\n            }\n        }\n    }\n    return `${config.path}?url=${encodeURIComponent(src)}&w=${width}&q=${quality || 75}`;\n}\n// We use this to determine if the import is the default loader\n// or a custom loader defined by the user in next.config.js\ndefaultLoader.__next_img_default = true;\nvar _default = defaultLoader;\nexports.default = _default;\n\n//# sourceMappingURL=image-loader.js.map","module.exports = require('./dist/client/image')\n"],"names":["Object","value","exports","_extends","require","_interop_require_default","_interop_require_wildcard","_object_without_properties_loose","_react","_head","_imageBlurSvg","_imageConfig","_imageConfigContext","_imageLoader","configEnv","process","isStaticRequire","src","undefined","default","getInt","x","test","parseInt","NaN","handleLoading","img","placeholder","onLoadRef","onLoadingCompleteRef","setBlurComplete","unoptimized","p","decode","Promise","resolve","catch","then","parentElement","isConnected","current","event","Event","defineProperty","writable","prevented","stopped","nativeEvent","currentTarget","target","isDefaultPrevented","isPropagationStopped","persist","preventDefault","stopPropagation","getDynamicProps","fetchPriority","majorStr","minorStr","version","split","major","minor","fetchpriority","ImageElement","forwardRef","_param","forwardedRef","imgAttributes","heightInt","widthInt","qualityInt","className","imgStyle","blurStyle","isLazy","fill","loading","srcString","config","loader","setShowAltText","onLoad","onError","rest","createElement","Fragment","assign","width","height","decoding","style","ref","useCallback","complete","Image","blurWidth","blurHeight","sizes","priority","quality","onLoadingComplete","blurDataURL","layout","objectFit","objectPosition","lazyBoundary","lazyRoot","all","configContext","useContext","ImageConfigContext","useMemo","c","imageConfigDefault","allSizes","deviceSizes","imageSizes","sort","a","b","isDefaultLoader","concat","customImageLoader","_","obj","opts","layoutStyle","layoutToStyle","intrinsic","maxWidth","responsive","layoutSizes","layoutToSizes","staticSrc","staticImageData","JSON","stringify","ratio","Math","round","startsWith","endsWith","dangerouslyAllowSVG","blurComplete","useState","showAltText","position","left","top","right","bottom","color","backgroundSize","backgroundPosition","backgroundRepeat","backgroundImage","getImageBlurSvg","generateImgAttrs","param","srcSet","widths","kind","getWidths","viewportWidthRe","percentSizes","match","exec","push","length","smallestRatio","min","filter","s","Set","map","find","w","last","i","join","useRef","useEffect","imgElementArgs","key","rel","as","href","imageSrcSet","crossOrigin","__esModule","module","svgWidth","svgHeight","feComponentTransfer","std","defaultLoader","encodeURIComponent","path","__next_img_default","__webpack_require__"],"sourceRoot":""}